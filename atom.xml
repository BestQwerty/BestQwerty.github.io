<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LjJiaJun&#39; Home</title>
  
  <subtitle>书青春 - 话人生 | Coding - Thinking - Acting</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="ctguljj.github.io/"/>
  <updated>2019-04-21T03:33:58.642Z</updated>
  <id>ctguljj.github.io/</id>
  
  <author>
    <name>LjJiaJun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git</title>
    <link href="ctguljj.github.io/2019/04/20/git/"/>
    <id>ctguljj.github.io/2019/04/20/git/</id>
    <published>2019-04-20T13:14:02.000Z</published>
    <updated>2019-04-21T03:33:58.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><ul><li>pwd命令用于显示当前目录。<ul><li>如果使用Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文。 </li></ul></li></ul><h1 id="GitHub实用指南"><a href="#GitHub实用指南" class="headerlink" title="GitHub实用指南"></a>GitHub实用指南</h1><ul><li>在GitHub上，可以任意Fork开源仓库；</li><li>自己拥有Fork后的仓库的读写权限；</li><li>可以推送pull request给官方仓库来贡献代码。</li><li>Github账户注册和新建项目，项目必须要遵守格式：账户名.github.io，不然接下来会有很多麻烦。并且需要勾选Initialize this repository with a README</li></ul>]]></content>
    
    <summary type="html">
    
      🎈
    
    </summary>
    
      <category term="git" scheme="ctguljj.github.io/categories/git/"/>
    
    
      <category term="git" scheme="ctguljj.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客网页访问量与访客计数问题</title>
    <link href="ctguljj.github.io/2019/04/20/hexo%E5%8D%9A%E5%AE%A2%E7%BD%91%E9%A1%B5%E8%AE%BF%E9%97%AE%E9%87%8F%E4%B8%8E%E8%AE%BF%E5%AE%A2%E8%AE%A1%E6%95%B0%E9%97%AE%E9%A2%98/"/>
    <id>ctguljj.github.io/2019/04/20/hexo博客网页访问量与访客计数问题/</id>
    <published>2019-04-20T12:25:30.000Z</published>
    <updated>2019-04-20T12:34:34.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="访问量解决"><a href="#访问量解决" class="headerlink" title="访问量解决"></a>访问量解决</h1><ul><li>busuanzi域名改了⛷🏂<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      ⛹
    
    </summary>
    
      <category term="blog" scheme="ctguljj.github.io/categories/blog/"/>
    
      <category term="博客优化" scheme="ctguljj.github.io/categories/blog/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="blog" scheme="ctguljj.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>数学题题解</title>
    <link href="ctguljj.github.io/2019/04/20/%E6%95%B0%E5%AD%A6%E9%A2%98%E9%A2%98%E8%A7%A3/"/>
    <id>ctguljj.github.io/2019/04/20/数学题题解/</id>
    <published>2019-04-20T11:09:02.000Z</published>
    <updated>2019-04-20T11:47:58.635Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数学题"><a href="#数学题" class="headerlink" title="数学题"></a>数学题</h1><ul><li><p>小明用字母A 对应数字1，B 对应2，以此类推，用Z 对应26。对于27以上的数字，小明用两位或更长位的字符串来对应，例如AA 对应27，AB 对应28，AZ 对应52，LQ 对应329。请问2019 对应的字符串是什么？</p><ul><li>用ABCD替换掉了1234, 注意26个字母应该是逢27进1, 也就是27进制, 而不是26进制<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">%法一</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ret;</span><br><span class="line">    <span class="keyword">while</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> t = n%r;</span><br><span class="line">        n = (n<span class="number">-1</span>)/r;    <span class="comment">//不是26进制</span></span><br><span class="line">        <span class="keyword">if</span>(t == <span class="number">0</span>) t = <span class="number">26</span>;</span><br><span class="line">        ret += <span class="string">'A'</span>+t<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">string</span> ans = solve(n, <span class="number">26</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = ans.length()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%法二</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//702 --&gt; ZZ</span></span><br><span class="line"><span class="comment">//703 --&gt; AAA</span></span><br><span class="line"><span class="comment">//18278 --&gt; ZZZ</span></span><br><span class="line"><span class="comment">//18279 --&gt; AAAA</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (N &gt; <span class="number">26</span>) dfs((N - <span class="number">1</span>) / <span class="number">26</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'A'</span> + (N - <span class="number">1</span>) % <span class="number">26</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; N) &#123;</span><br><span class="line">        dfs(N); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>n转r进制的模板<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ans[maxn], index = <span class="number">0</span>;</span><br><span class="line">    ms(ans, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> t = n%r;</span><br><span class="line">        n /= r;</span><br><span class="line">        <span class="keyword">if</span>(t &gt; <span class="number">9</span>)</span><br><span class="line">            ans[index++] = (t<span class="number">-10</span>+<span class="string">'A'</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans[index++] = (t+<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从后往前输出</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>给定数列1, 1, 1, 3, 5, 9, 17, …，从第4 项开始，每项都是前3 项的和。求第20190324 项的最后4 位数字。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%一</span></span><br><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int MAXN = <span class="number">30000000</span>;</span><br><span class="line">int a[MAXN];</span><br><span class="line">int main() &#123;</span><br><span class="line">    int N = <span class="number">20190324</span>;</span><br><span class="line">    a[<span class="number">1</span>] = a[<span class="number">2</span>] = a[<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (int <span class="built_in">i</span> = <span class="number">4</span>; <span class="built_in">i</span> &lt;= N; ++<span class="built_in">i</span>)</span><br><span class="line">        a[<span class="built_in">i</span>] = (a[<span class="built_in">i</span> - <span class="number">1</span>] + a[<span class="built_in">i</span> - <span class="number">2</span>] + a[<span class="built_in">i</span> - <span class="number">3</span>]) <span class="comment">% 10000;</span></span><br><span class="line">    printf(<span class="string">"%d\n"</span>, a[N]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%二</span></span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main() &#123;</span><br><span class="line">    int a = <span class="number">1</span>, b = <span class="number">1</span>, c = <span class="number">1</span>;</span><br><span class="line">    int N = 20190324;   //scanf("%d", &amp;N);</span><br><span class="line">    <span class="keyword">for</span> (int <span class="built_in">i</span> = <span class="number">4</span>; <span class="built_in">i</span> &lt;= N; ++<span class="built_in">i</span>) &#123;</span><br><span class="line">        int t = (a + b + c) <span class="comment">% 10000;</span></span><br><span class="line">        c = b; </span><br><span class="line">        b = a;</span><br><span class="line">        a = t;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">"%d\n"</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>把2019 分解成3 个各不相同的正整数之和，并且要求每个正整数都不包含数字 2 和 4，一共有多少种不同的分解方法？注意交换3个整数的顺序被视为同一种方法，例如1000+1001+18 和 1001+1000+18 被视为同一种。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isOK</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="comment">/* */</span>; x &gt; <span class="number">0</span>; x /= <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> (x % <span class="number">10</span> == <span class="number">2</span> || x % <span class="number">10</span> == <span class="number">4</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N = <span class="number">2019</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N / <span class="number">3</span>; ++i)</span><br><span class="line">        <span class="keyword">if</span> (isOK(i))</span><br><span class="line">            <span class="comment">//k = N - i - j &gt; j</span></span><br><span class="line">            <span class="comment">//判断重复可以i &lt; j &lt; k, 然后判断i, j, k是否含2和4就行了</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; N - i - j &gt; j; ++j)</span><br><span class="line">                <span class="keyword">if</span> (isOK(j) &amp;&amp; isOK(N - i - j)) ++cnt;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>小明对数位中含有 2、0、1、9 的数字很感兴趣（不包括前导0），在1 到 40 中这样的数包括1、2、9、10 至 32、39 和 40，共 28 个，他们的和是 574。请问，在 1 到n 中，所有这样的数的和是多少？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isOK</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="comment">/* */</span>; x &gt; <span class="number">0</span>; x /= <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = x % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (t % <span class="number">10</span> == <span class="number">2</span> || t % <span class="number">10</span> == <span class="number">0</span> || t % <span class="number">10</span> == <span class="number">1</span> || t % <span class="number">10</span> == <span class="number">9</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">        <span class="keyword">if</span> (isOK(i)) ret += i;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ret &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      🙄
    
    </summary>
    
    
      <category term="题解" scheme="ctguljj.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>matlab函数之vpa</title>
    <link href="ctguljj.github.io/2019/04/18/matlab%E5%87%BD%E6%95%B0%E4%B9%8Bvpa/"/>
    <id>ctguljj.github.io/2019/04/18/matlab函数之vpa/</id>
    <published>2019-04-18T09:29:14.000Z</published>
    <updated>2019-04-19T08:06:03.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vpa"><a href="#vpa" class="headerlink" title="vpa"></a>vpa</h1><ul><li><a href="https://ww2.mathworks.cn/help/symbolic/vpa.html" target="_blank" rel="noopener">vpa</a></li></ul>]]></content>
    
    <summary type="html">
    
      😂
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="vpa" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/vpa/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab代码练习二</title>
    <link href="ctguljj.github.io/2019/04/18/matlab%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0%E4%BA%8C/"/>
    <id>ctguljj.github.io/2019/04/18/matlab代码练习二/</id>
    <published>2019-04-18T08:38:31.000Z</published>
    <updated>2019-04-19T08:08:21.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="competition"><a href="#competition" class="headerlink" title="competition"></a>competition</h1><ul><li><p>提取12345和67899这两个五位数的每一位数字，并把他们存储到一个2*5的矩阵里。</p><ul><li>要求矩阵第一行是12345从万位到个位的所有位数字，第二行为67899从个位到万位的所有位数字<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a=<span class="number">12345</span>;</span><br><span class="line">b=<span class="number">67899</span>;</span><br><span class="line">a=str2num(num2str(a)')';</span><br><span class="line">b=<span class="built_in">fliplr</span>(str2num(num2str(b')')');</span><br><span class="line">[a;b]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>以pi/100为间隔，比较函数sin(2x+3)和cos(3x-1)在0到2π的函数值大小，只画出函数值相对较大的那一部分图像。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">clc;clear;</span><br><span class="line">close all;</span><br><span class="line">x=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">100</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">y1=<span class="built_in">sin</span>(<span class="number">2</span>*x+<span class="number">3</span>);</span><br><span class="line">y2=<span class="built_in">cos</span>(<span class="number">3</span>*x<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,<span class="built_in">max</span>(y1,y2));</span><br></pre></td></tr></table></figure></li><li><p>有如下数列：1  3  59  8  74  2  1  3  46  8  7  4  5  6  9  8  5  4 22  25  52  32  64  62  13  1  61  31  31  32  15  4  54  32  24  23  24  15  21  10  30  45  56  14  24  34  13  21  24  23  35  26  15 14 12  13  142  412  43  16  23  4  55  25  21  24  34  12  34  12  43 12  43  14  23  14  12  23  14  21  23  74  14 ；</p><ul><li>求出数列中每个数出现的次数.</li><li>并按原序列先后顺序输出(其中相同的数字只保留第一次出现的)。<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a=[<span class="number">1</span> <span class="number">3</span> <span class="number">59</span> <span class="number">8</span> <span class="number">74</span> <span class="number">2</span> <span class="number">1</span> <span class="number">3</span> <span class="number">46</span> <span class="number">8</span>  ...</span><br><span class="line">    <span class="number">7</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">4</span> ...</span><br><span class="line">    <span class="number">22</span> <span class="number">25</span> <span class="number">52</span> <span class="number">32</span> <span class="number">64</span> <span class="number">62</span> <span class="number">13</span> ...</span><br><span class="line">    <span class="number">1</span> <span class="number">61</span> <span class="number">31</span> <span class="number">31</span> <span class="number">32</span> <span class="number">15</span> <span class="number">4</span> <span class="number">54</span> <span class="number">32</span> ...</span><br><span class="line">    <span class="number">24</span> <span class="number">23</span> <span class="number">24</span> <span class="number">15</span> <span class="number">21</span> <span class="number">10</span> <span class="number">30</span> <span class="number">45</span> <span class="number">56</span> ...</span><br><span class="line">    <span class="number">14</span> <span class="number">24</span> <span class="number">34</span> <span class="number">13</span> <span class="number">21</span> <span class="number">24</span> <span class="number">23</span> <span class="number">35</span> <span class="number">26</span> ...</span><br><span class="line">    <span class="number">15</span> <span class="number">14</span> <span class="number">12</span> <span class="number">13</span> <span class="number">142</span> <span class="number">412</span> <span class="number">43</span> <span class="number">16</span> <span class="number">23</span> ...</span><br><span class="line">    <span class="number">4</span> <span class="number">55</span> <span class="number">25</span> <span class="number">21</span> <span class="number">24</span> <span class="number">34</span> <span class="number">12</span> <span class="number">34</span> <span class="number">12</span> ...</span><br><span class="line">    <span class="number">43</span> <span class="number">12</span> <span class="number">43</span> <span class="number">14</span> <span class="number">23</span> <span class="number">14</span> <span class="number">12</span> ...</span><br><span class="line">    <span class="number">23</span> <span class="number">14</span> <span class="number">21</span> <span class="number">23</span> <span class="number">74</span> <span class="number">14</span>];</span><br><span class="line">A=unique(a,<span class="string">'stable'</span>)</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(A)</span><br><span class="line">    [m,n]=<span class="built_in">find</span>(a==A(<span class="built_in">i</span>));</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">length</span>(m)&gt;=<span class="number">2</span>   </span><br><span class="line">  <span class="comment">%用的好，因为find函数放回的是向量(若向量长度大于2，那么说明该数的横坐标有多个，所以出现了多次)</span></span><br><span class="line">      <span class="built_in">disp</span>(strcat(num2str(A(<span class="built_in">i</span>)),<span class="string">'重复'</span>,num2str(<span class="built_in">length</span>(m)),...</span><br><span class="line">          <span class="string">'次'</span>,<span class="string">'位置为:'</span>,mat2str([m n])))</span><br><span class="line">  <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>随机生成四组坐标，判断第四个点是否在前三个点构成的三角形内（不包括线上），并画出图像，计算精度为5位有效数字。</p><ul><li>（海伦公式：假设在平面内，有一个三角形，边长分别为a、b、c，三角形的面积S可由以下公式求得：..而公式里的p为周长的一半）<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a=<span class="built_in">rand</span>(<span class="number">4</span>,<span class="number">2</span>);</span><br><span class="line">d=squareform(pdist(a));</span><br><span class="line">f=@(a,b,c)<span class="built_in">sqrt</span>((a+b+c)/<span class="number">2</span>*((a+b+c)/<span class="number">2</span>-a)*((a+b+c)/<span class="number">2</span>-b)*((a+b+c)/<span class="number">2</span>-c));</span><br><span class="line">s1=f(d(<span class="number">1</span>,<span class="number">2</span>),d(<span class="number">1</span>,<span class="number">3</span>),d(<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">s2=f(d(<span class="number">1</span>,<span class="number">2</span>),d(<span class="number">1</span>,<span class="number">4</span>),d(<span class="number">2</span>,<span class="number">4</span>))+f(d(<span class="number">1</span>,<span class="number">3</span>),d(<span class="number">1</span>,<span class="number">4</span>),d(<span class="number">3</span>,<span class="number">4</span>))+f(d(<span class="number">3</span>,<span class="number">2</span>),d(<span class="number">3</span>,<span class="number">4</span>),d(<span class="number">2</span>,<span class="number">4</span>));</span><br><span class="line"><span class="keyword">if</span> vpa(s1,<span class="number">5</span>)==vpa(s2,<span class="number">5</span>)</span><br><span class="line">    fprintf(<span class="string">'第四个点在前三个点组成的三角形内'</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    fprintf(<span class="string">'第四个点不在前三个点组成的三角形内'</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">x=a(:,<span class="number">1</span>)';y=a(:,<span class="number">2</span>)';</span><br><span class="line">x1=[x(<span class="number">1</span>:<span class="number">3</span>) x(<span class="number">1</span>)];y1=[y(<span class="number">1</span>:<span class="number">3</span>) y(<span class="number">1</span>)];</span><br><span class="line"><span class="built_in">plot</span>(x1,y1,<span class="string">'b-'</span>)<span class="comment">%用plot画封闭曲线需要在最后添上第一个点的坐标</span></span><br><span class="line">text(x+<span class="number">0.01</span>,y+<span class="number">0.01</span>,&#123;<span class="string">'1'</span> <span class="string">'2'</span> <span class="string">'3'</span> <span class="string">'4'</span>&#125;)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'ro'</span>)</span><br><span class="line">s1-s2</span><br></pre></td></tr></table></figure></li></ul></li><li><p>这题跟算法博弈不一样，matlab。。。。<img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlab2018复赛题A3人机大战.jpg" alt=""></p></li></ul>]]></content>
    
    <summary type="html">
    
      📚
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="代码练习" scheme="ctguljj.github.io/categories/matlab/%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab自定义函数</title>
    <link href="ctguljj.github.io/2019/04/18/matlab%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/"/>
    <id>ctguljj.github.io/2019/04/18/matlab自定义函数/</id>
    <published>2019-04-18T05:42:52.000Z</published>
    <updated>2019-04-18T08:28:25.606Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://ww2.mathworks.cn/help/matlab/functions.html" target="_blank" rel="noopener">函数</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/local-functions-in-scripts.html" target="_blank" rel="noopener">向脚本中添加函数</a><ul><li>R2016b 或更高版本支持脚本中的函数。</li></ul></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/base-and-function-workspaces.html" target="_blank" rel="noopener">基础和函数工作区</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/function-precedence-order.html" target="_blank" rel="noopener">函数优先顺序</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/types-of-functions.html" target="_blank" rel="noopener">函数类型</a></li></ul><h1 id="function"><a href="#function" class="headerlink" title="function"></a>function</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/function.html" target="_blank" rel="noopener">function 声明函数名称、输入和输出</a></li><li><code>function [y1,...,yN] = myfun(x1,...,xM)</code> 声明名为 myfun 的函数，该函数接受输入 x1,…,xM 并返回输出 y1,…,yN。此声明语句必须是函数的第一个可执行代码行。有效的函数名称以字母字符开头，并且可以包含字母、数字或下划线。<ul><li>可以将函数保存在以下位置：<ul><li><strong>只包含函数定义的函数文件中。文件的名称应与文件中其函数的名称一致</strong>。</li><li>包含命令和函数定义的脚本文件中。<strong>函数必须位于该文件的末尾</strong>。脚本文件不能与文件中的函数具有相同的名称。<strong>R2016b 或更高版本才可以在脚本中直接写直接用函数</strong>。</li></ul></li></ul></li><li>文件可以包含多个局部函数或嵌套函数。为提高可读性，可使用 end 关键字来表示文件中每个函数的末尾。以下情况下需要 end 关键字：<ul><li>文件中有任意函数包含嵌套函数。</li><li>该函数是函数文件中的局部函数，并且文件中有局部函数使用 end 关键字。</li><li>该函数是脚本文件内的局部函数。</li></ul></li></ul><h1 id="在文件中创建函数"><a href="#在文件中创建函数" class="headerlink" title="在文件中创建函数"></a>在文件中创建函数</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/create-functions-in-files.html" target="_blank" rel="noopener">在文件中创建函数</a></li><li>程序文件可以包含多个函数。<strong>如果文件仅包含函数定义，则第一个函数是主函数，也是 MATLAB 与文件名关联的函数</strong>。<strong>主函数或脚本代码后面的函数称为局部函数。局部函数只能在文件内使用</strong>。</li></ul><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><ul><li>格式：函数句柄变量=@（匿名函数输入参数）匿名函数表达式<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">EG:</span><br><span class="line">f1=@(x,y)x^<span class="number">2</span>+y^<span class="number">2</span>;</span><br><span class="line">f1(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">25</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">一：</span><br><span class="line"><span class="function"><span class="keyword">function</span> 输出形参表=函数名（输入形参表）</span></span><br><span class="line">注释（对这个函数的解释说明）</span><br><span class="line">函数体语句</span><br><span class="line">End</span><br><span class="line"></span><br><span class="line">EG:圆的周长和面积</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[s,c]</span>=<span class="title">circle</span><span class="params">(r)</span></span></span><br><span class="line"><span class="comment">%求圆的周长和面积</span></span><br><span class="line">c=<span class="number">2</span>*<span class="built_in">pi</span>*r;</span><br><span class="line">s=<span class="built_in">pi</span>*r^<span class="number">2</span>;</span><br><span class="line">End</span><br><span class="line"></span><br><span class="line">[s,c]=circle(<span class="number">3</span>)<span class="comment">%保存好函数文件，在命令行窗口或另一个脚本里调用</span></span><br><span class="line"></span><br><span class="line">二:</span><br><span class="line"><span class="function"><span class="keyword">function</span> 函数名</span></span><br><span class="line">注释（对这个函数的解释说明）</span><br><span class="line">函数体语句</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">EG:最强代号</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CTGUMCM</span></span></span><br><span class="line">axis off;   <span class="comment">%关闭坐标轴</span></span><br><span class="line"><span class="comment">%Menubar是菜单条 none就是不显示图上方的菜单条</span></span><br><span class="line">set(gcf,<span class="string">'menubar'</span>,<span class="string">'none'</span>,<span class="string">'toolbar'</span>,<span class="string">'none'</span>,<span class="string">'unit'</span>, <span class="string">'normalized'</span>, <span class="string">'position'</span>, [<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:<span class="number">377</span></span><br><span class="line">h=text(<span class="built_in">rand</span>, <span class="built_in">rand</span>, ...</span><br><span class="line">     [<span class="string">'\fontsize&#123;'</span>,num2str(unifrnd(<span class="number">5</span>,<span class="number">77</span>)),<span class="string">'&#125; CTGU MCM'</span>],...</span><br><span class="line">        <span class="string">'color'</span>,<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">3</span>),<span class="string">'Rotation'</span>,<span class="number">360</span>*<span class="built_in">rand</span>);</span><br><span class="line">     pause(<span class="number">0.2</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      🧐
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="自定义函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab绘图补充</title>
    <link href="ctguljj.github.io/2019/04/17/matlab%E7%BB%98%E5%9B%BE%E8%A1%A5%E5%85%85/"/>
    <id>ctguljj.github.io/2019/04/17/matlab绘图补充/</id>
    <published>2019-04-17T12:25:40.000Z</published>
    <updated>2019-04-17T13:23:04.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/set.html" target="_blank" rel="noopener">设置图形对象属性(set)</a></li><li>调用格式:<ul><li><code>set(H,Name,Value)</code>为 H 标识的对象指定其 Name 属性的值。使用时须用单引号将属性名引起来，例如，<code>set(H,&#39;Color&#39;,&#39;red&#39;)</code>。如果 H 是对象的向量，则 set 会为所有对象设置属性。如果 H 为空（即 []），set 不执行任何操作，但不返回错误或警告。</li><li><code>set(H,NameArray,ValueArray)</code></li><li><code>set(H,S)</code></li><li><code>s = set(H)</code></li><li><code>values = set(H,Name)</code></li></ul></li><li>栗子:<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%绘制一个线条并以 p 的形式返回图形线条对象。将行的 Color 属性设置为 'red'。</span></span><br><span class="line">p = <span class="built_in">plot</span>(<span class="number">1</span>:<span class="number">10</span>);</span><br><span class="line">set(p,<span class="string">'Color'</span>,<span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">%使用随机数据创建一个包含四个线条的图形，并将这四个线条返回至 P。将所有线条的 Color 属性设置为 'red'。</span></span><br><span class="line">P = <span class="built_in">plot</span>(<span class="built_in">rand</span>(<span class="number">4</span>));</span><br><span class="line">set(P,<span class="string">'Color'</span>,<span class="string">'red'</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="rectangle"><a href="#rectangle" class="headerlink" title="rectangle"></a>rectangle</h2><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/rectangle.html" target="_blank" rel="noopener">rectangle 创建带有尖角或圆角的矩形</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/ref/matlab.graphics.primitive.rectangle-properties.html" target="_blank" rel="noopener">Rectangle 属性</a></li></ul>]]></content>
    
    <summary type="html">
    
      😛
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="绘图" scheme="ctguljj.github.io/categories/matlab/%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab函数之line</title>
    <link href="ctguljj.github.io/2019/04/17/matlab%E5%87%BD%E6%95%B0%E4%B9%8Bline/"/>
    <id>ctguljj.github.io/2019/04/17/matlab函数之line/</id>
    <published>2019-04-17T12:02:22.000Z</published>
    <updated>2019-04-17T12:03:48.050Z</updated>
    
    <content type="html"><![CDATA[<h1 id="line"><a href="#line" class="headerlink" title="line"></a>line</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/line.html" target="_blank" rel="noopener">line</a></li><li>调用格式:<ul><li><code>line(x,y)</code> 使用向量 x 和 y 中的数据在当前坐标区中绘制线条。如果 x 和 y 中有一个是矩阵或两者都是矩阵，则 line 将绘制多个线条。<strong>与 plot 函数不同，line 会向当前坐标区添加线条，而不删除其他图形对象或重置坐标区属性</strong>。 </li><li><code>line(x,y,z)</code> 在三维坐标中绘制线条。</li><li><code>line</code> 使用默认属性设置绘制一条从点 (0,0) 到 (1,1) 的线条(y = x,横纵坐标都是从0到1)。(就是直接输入line)</li><li><code>line(&#39;XData&#39;,x,&#39;YData&#39;,y)</code></li><li><code>line(&#39;XData&#39;,x,&#39;YData&#39;,y,&#39;ZData&#39;,z)</code></li><li><code>line(___,Name,Value)</code></li><li><code>line(ax,___)</code></li><li><code>pl = line(___)</code> </li></ul></li><li>栗子:<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%通过将 x 和 y 指定为矩阵来绘制两个线条。使用 line 绘制 y 的列对 x 的列的单独线条。</span></span><br><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">10</span>)';</span><br><span class="line">y = [<span class="built_in">sin</span>(x) <span class="built_in">cos</span>(x)];</span><br><span class="line">line(x,y)</span><br><span class="line"></span><br><span class="line"><span class="comment">%通过指定 x、y 和 z 的值，在三维坐标中绘制线条。使用 view(3) 将坐标区更改为三维视图。</span></span><br><span class="line">t = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">10</span>*<span class="built_in">pi</span>,<span class="number">200</span>);</span><br><span class="line">x = <span class="built_in">sin</span>(t);</span><br><span class="line">y = <span class="built_in">cos</span>(t);</span><br><span class="line">z = t;</span><br><span class="line">line(x,y,z)</span><br><span class="line">view(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      🙂
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="绘图" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/%E7%BB%98%E5%9B%BE/"/>
    
      <category term="line" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/%E7%BB%98%E5%9B%BE/line/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab运算符</title>
    <link href="ctguljj.github.io/2019/04/14/matlab%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>ctguljj.github.io/2019/04/14/matlab运算符/</id>
    <published>2019-04-14T13:21:12.000Z</published>
    <updated>2019-04-18T08:10:33.188Z</updated>
    
    <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><ul><li>Error:Matlab ||和&amp;&amp;运算符的操作数必须能够转换为逻辑标量值<ul><li>解决:||和&amp;&amp;为值运算， |与&amp;为向量运算，改为|与&amp;</li></ul></li></ul><ul><li><p>&amp;&amp;和||被称为&amp;和|的short circuit形式，</p><ul><li>A&amp;B<ul><li>（1）首先判断A的逻辑值，然后判断B的值，然后进行逻辑与的计算。</li><li>（2）A和B可以为矩阵（e.g. A=[1 0],B=[0 0]）。</li></ul></li><li>A&amp;&amp;B<ul><li>（1）首先判断A的逻辑值，如果A的值为假，就可以判断整个表达式的值为假，就不需要再判断B的值。</li><li>（2）A和B不能是矩阵，只能是标量。</li></ul></li><li>“|”与“||”同理。</li><li>A&amp;&amp;B 首先判断A的逻辑值，如果A的值为假，就可以判断整个表达式的值为假，就不需要再判断B的值。这种用法非常有用，如果A是一个计算量较小的函数，B是一个计算量较大的函数，那么首先判断A对减少计算量是有好处的。另外这也可以防止类似被0除的错误</li></ul></li><li><p>中括号[]的一个用法是，用来接收多个返回值/结果(数值或矩阵)。</p></li></ul><h2 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h2><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/operator-precedence.html" target="_blank" rel="noopener">运算符的优先级</a></li><li>AND 和 OR 运算符的优先级<ul><li>MATLAB <strong>始终将 &amp; 运算符的优先级指定为高于 | 运算符</strong>。尽管 MATLAB 通常按从左到右的顺序计算表达式，但表达式 a|b&amp;c 按 a|(b&amp;c) 形式计算。对于包含 &amp; 和 | 组合的语句，比较好的做法是使用括号显式指定期望的语句优先级。<br>该优先级规则同样适用于 &amp;&amp; 和 || 运算符。</li></ul></li></ul><h1 id="转载"><a href="#转载" class="headerlink" title="转载"></a>转载</h1><ul><li><a href="https://blog.csdn.net/treasuresss/article/details/39370253" target="_blank" rel="noopener">matlab中&amp;&amp;和&amp;的区别</a>_</li><li><a href="https://ww2.mathworks.cn/help/matlab/ref/logicaloperatorsshortcircuit.html" target="_blank" rel="noopener">逻辑运算符：短路 &amp;&amp; ||</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/ref/and.html" target="_blank" rel="noopener">and, &amp;(计算逻辑 AND)</a></li></ul>]]></content>
    
    <summary type="html">
    
      😐
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="基础" scheme="ctguljj.github.io/categories/matlab/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="运算符" scheme="ctguljj.github.io/categories/matlab/%E5%9F%BA%E7%A1%80/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之unique</title>
    <link href="ctguljj.github.io/2019/04/14/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bunique/"/>
    <id>ctguljj.github.io/2019/04/14/matlab常用函数之unique/</id>
    <published>2019-04-14T06:55:31.000Z</published>
    <updated>2019-04-14T14:41:44.659Z</updated>
    
    <content type="html"><![CDATA[<h1 id="unique"><a href="#unique" class="headerlink" title="unique"></a>unique</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/unique.html#bs_6vpd-1-setOrder" target="_blank" rel="noopener">unique</a></li><li><p><code>C = unique(A)</code> 返回与 A 中相同的数据，但是不包含重复项。<strong>C 已排序</strong>。</p><ul><li>如果 A 是表或时间表，则 unique 按排序顺序返回 A 中的唯一行。对于时间表，当确定行是否唯一时，unique 会考虑行时间和行值，并按行时间对输出时间表 C 排序。</li></ul></li><li><p><code>C = unique(A,setOrder)</code> 以特定顺序返回 A 的唯一值。setOrder 可以是 ‘sorted’（默认值）或 ‘stable’。</p></li><li>setOrder - 顺序标志<ul><li>顺序标志以 ‘sorted’ 或 ‘stable’ 指定，指示 C 中值（或行）的顺序。</li><li>‘sorted’ 按排定的顺序返回 C 中的值（或行）。例如：<code>C = unique([5 5 3 4],&#39;sorted&#39;)</code> 返回 <code>C = [3 4 5]</code>。</li><li>‘stable’ 按与 A 中相同的顺序返回 C 中的值（或行）。例如：<code>C = unique([5 5 3 4],&#39;stable&#39;)</code>返回 <code>C = [5 3 4]</code>。</li></ul></li></ul><ul><li><code>C = unique(A,occurrence)</code> 指定遇到重复值时应返回哪个索引。occurrence 可以是 ‘first’（默认值）或 ‘last’。</li><li>occurrence - 出现次数标志  ‘first’ （默认） | ‘last’<ul><li>出现次数标志，指定为 ‘first’ 或 ‘last’，指示在 A 中发现重复值时，ia 是包含第一个索引还是最后一个索引。 </li><li>‘last’<br>如果 A 中有重复的值（或行），则 ia 包含最后一次出现重复值的索引</li><li>‘first’<br>如果 A 中有重复的值（或行），则 ia 包含第一次出现重复值的索引</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      🙂
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="unique" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/unique/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之sum</title>
    <link href="ctguljj.github.io/2019/04/13/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bsum/"/>
    <id>ctguljj.github.io/2019/04/13/matlab常用函数之sum/</id>
    <published>2019-04-13T06:08:55.000Z</published>
    <updated>2019-04-13T06:13:53.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sum"><a href="#sum" class="headerlink" title="sum"></a>sum</h1><ul><li>其实<code>sum(a)</code>默认的是<code>sum(a,1)</code>,还有<code>sum(a,2)</code>。<ul><li><code>sum(a,1)</code>把矩阵的每一列分别加起来形成新的行矩阵。</li><li><code>sum(a,2)</code>把矩阵的每一行分别加起来形成新的列矩阵。</li></ul></li><li>提示：矩阵a是行矩阵时，<code>sum(a)</code>不再是<code>sum(a,1)</code>,而转换为了<code>sum(a,2)</code>。</li><li>求一个矩阵所有元素<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">close all;</span><br><span class="line">a = [<span class="number">1</span> <span class="number">2</span> </span><br><span class="line">    <span class="number">3</span> <span class="number">4</span></span><br><span class="line">    <span class="number">5</span> <span class="number">6</span>];</span><br><span class="line">sum(a)</span><br><span class="line">sum(sum(a))</span><br><span class="line">sum(a(:))</span><br><span class="line">sum(a(:, :)) <span class="comment">%a(:, :)与原矩阵相同</span></span><br><span class="line"><span class="comment">%answer</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">9</span>    <span class="number">12</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">21</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">21</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">9</span>    <span class="number">12</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      😃
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="sum" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/sum/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab矩阵操作补充</title>
    <link href="ctguljj.github.io/2019/04/13/matlab%E7%9F%A9%E9%98%B5%E6%93%8D%E4%BD%9C%E8%A1%A5%E5%85%85/"/>
    <id>ctguljj.github.io/2019/04/13/matlab矩阵操作补充/</id>
    <published>2019-04-13T04:01:11.000Z</published>
    <updated>2019-04-14T13:19:22.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><ul><li><p>删除例题2中第1、3、5、7行以及第3、8列。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">clc;clear;</span><br><span class="line">a=<span class="built_in">ones</span>(<span class="number">10</span>);  </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">10</span>    </span><br><span class="line">     a(<span class="built_in">i</span>,:)=<span class="built_in">i</span>; </span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"> a( <span class="number">1</span>:<span class="number">2</span>:<span class="number">7</span> , :)  = [ ];</span><br><span class="line"> a( : , [<span class="number">3</span> <span class="number">8</span>] ) = [ ]; <span class="comment">%体会[]与：的运用</span></span><br><span class="line"> a</span><br></pre></td></tr></table></figure></li><li><p><strong>矩阵与某数字相加</strong>，所有元素全部加上这个数字，构成新矩阵。数字相减也是一样</p></li><li><strong>数字与矩阵相乘</strong>，也是所有元素全部乘以这个数字，构成新矩阵。除法也是</li></ul><h1 id="创建、串联和扩展矩阵"><a href="#创建、串联和扩展矩阵" class="headerlink" title="创建、串联和扩展矩阵"></a>创建、串联和扩展矩阵</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/math/creating-and-concatenating-matrices.html" target="_blank" rel="noopener">创建、串联和扩展矩阵</a><h2 id="串联矩阵"><a href="#串联矩阵" class="headerlink" title="串联矩阵"></a>串联矩阵</h2></li><li>可以使用方括号将现有矩阵连接在一起。这种创建矩阵的方法称为串联。</li><li>要串联两个矩阵，它们的大小必须兼容。也就是说，水平串联矩阵时，它们的行数必须相同。垂直串联矩阵时，它们的列数必须相同。</li><li>串联矩阵的另一种方法是使用串联函数，如 horzcat，它可以水平串联两个兼容的输入矩阵。</li></ul><h2 id="扩展矩阵"><a href="#扩展矩阵" class="headerlink" title="扩展矩阵"></a>扩展矩阵</h2><ul><li><p>通过将一个或多个元素置于现有行和列索引边界之外，可以将它们添加到矩阵中。MATLAB 会<strong>自动</strong>用 <strong>0 填充矩阵</strong>，使其保持为矩形。例如，创建一个 2×3 矩阵，然后在 (3,4) 的位置插入一个元素，使矩阵增加一行一列。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">10</span>  <span class="number">20</span>  <span class="number">30</span>; <span class="number">60</span>  <span class="number">70</span>  <span class="number">80</span>]</span><br><span class="line"><span class="comment">%A = 2×3</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">20</span>    <span class="number">30</span></span><br><span class="line">    <span class="number">60</span>    <span class="number">70</span>    <span class="number">80</span></span><br><span class="line">A(<span class="number">3</span>,<span class="number">4</span>) = <span class="number">1</span> </span><br><span class="line"><span class="comment">%A = 3×4</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">20</span>    <span class="number">30</span>     <span class="number">0</span></span><br><span class="line">    <span class="number">60</span>    <span class="number">70</span>    <span class="number">80</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>可以通过在现有索引范围之外插入新矩阵来扩展其大小。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">10</span>  <span class="number">20</span>  <span class="number">30</span>; <span class="number">60</span>  <span class="number">70</span>  <span class="number">80</span>]</span><br><span class="line"><span class="comment">%A = 2×3</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">20</span>    <span class="number">30</span></span><br><span class="line">    <span class="number">60</span>    <span class="number">70</span>    <span class="number">80</span></span><br><span class="line">A(<span class="number">3</span>,<span class="number">4</span>) = <span class="number">1</span> </span><br><span class="line">A(<span class="number">4</span>:<span class="number">5</span>,<span class="number">5</span>:<span class="number">6</span>) = [<span class="number">2</span> <span class="number">3</span>; <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"><span class="comment">%A = 5×6</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">20</span>    <span class="number">30</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">    <span class="number">60</span>    <span class="number">70</span>    <span class="number">80</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">4</span>     <span class="number">5</span></span><br></pre></td></tr></table></figure></li><li><p>要重复扩展矩阵的大小，例如在 for 循环中，通常最好要为预计创建的最大矩阵预分配空间。如果没有预分配空间，MATLAB 必须在每次大小增加时分配内存，因此会降低操作速度。例如，通过将矩阵的元素初始化为零，预分配一个最多容纳 10000 行和 10000 列的矩阵。<code>A = zeros(10000,10000);</code><br><strong>如果之后还要预分配更多元素，可以通过在矩阵索引范围之外指定元素或将另一个预分配的矩阵与 A 串联来进行扩展。</strong></p><ul><li>就是先定义一个大小矩阵</li></ul></li></ul><h1 id="基本运算的兼容数组大小"><a href="#基本运算的兼容数组大小" class="headerlink" title="基本运算的兼容数组大小"></a>基本运算的兼容数组大小</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/compatible-array-sizes-for-basic-operations.html" target="_blank" rel="noopener">基本运算的兼容数组大小</a></li><li>大多数二元（两个输入）运算符和函数都支持具有兼容大小的数值数组。对于每个维度，如果两个输入的<strong>维度大小相同或其中一个为 1</strong>，则这些输入将具有兼容的大小。以最简单的情况为例，如果两个数组大小完全相同或其中一个为标量，则这两个数组大小是兼容的。执行按元素运算或函数时，MATLAB 会将大小兼容的数组隐式扩展为相同的大小。</li></ul><h2 id="大小不兼容的输入"><a href="#大小不兼容的输入" class="headerlink" title="大小不兼容的输入"></a>大小不兼容的输入</h2><ul><li>不兼容的输入的大小无法隐式扩展为相同的大小。例如：<ul><li>其中一个维度大小不相等，并且维度大小均不为 1。<ul><li>A: 3-by-2</li><li>B: 4-by-2</li></ul></li><li>两个长度不相同的非标量行向量。<ul><li>A: 1-by-3</li><li>B: 1-by-4</li></ul></li></ul></li></ul><h2 id="大小兼容的输入"><a href="#大小兼容的输入" class="headerlink" title="大小兼容的输入"></a>大小兼容的输入</h2><h3 id="二维输入"><a href="#二维输入" class="headerlink" title="二维输入"></a>二维输入</h3><ul><li>以下是一些具有兼容大小的标量、向量和矩阵的组合：<br><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlab大小兼容的输入.png" alt=""></li></ul><h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><ul><li>略</li></ul><h3 id="空数组"><a href="#空数组" class="headerlink" title="空数组"></a>空数组</h3><ul><li>对于空数组或维度大小为零的数组，规则是相同的。不等于 1 的维度大小确定输出的大小。这意味着，<strong>大小为零的维度必须与另一个数组中大小为 1 或 0 的维度进行配对，并且输出的维度大小为 0。</strong><ul><li>A: 1-by-0     </li><li>B: 3-by-1</li><li>Result: 3-by-0</li></ul></li></ul><h2 id="attention"><a href="#attention" class="headerlink" title="attention"></a>attention</h2><ul><li>要简化向量-矩阵运算，请对维函数（例如 sum、mean、min 以及其他）使用隐式扩展。</li><li>行向量和列向量相加<ul><li>行向量和列向量的大小兼容，当您对它们执行运算时，结果为一个矩阵。</li></ul></li></ul><h1 id="使用关系运算符进行数组比较"><a href="#使用关系运算符进行数组比较" class="headerlink" title="使用关系运算符进行数组比较"></a>使用关系运算符进行数组比较</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/array-comparison-with-relational-operators.html" target="_blank" rel="noopener">文档</a></li><li>关系运算符使用“小于”、“大于”和“不等于”等运算符对操作数进行定量比较。- 关系比较的结果是一个逻辑数组，指示关系为 true 的位置。</li></ul><h2 id="数组比较"><a href="#数组比较" class="headerlink" title="数组比较"></a>数组比较</h2><h3 id="数值数组"><a href="#数值数组" class="headerlink" title="数值数组"></a>数值数组</h3><ul><li>关系运算符会在两个数组之间执行<strong>按元素比较</strong>。<strong>数组的大小必须兼容以便于执行运算。执行计算时，具有兼容大小的数组会隐式扩展为相同的大小</strong>。以最简单的情况为例，两个操作数为大小相同的数组，或者其中一个操作数为标量。</li><li><p>将一个 1×N 行向量与一个 M×1 列向量进行比较，则 MATLAB 会在执行比较之前将每个向量都扩展为一个 M×N 矩阵。生成的矩阵包含这些向量中元素的每个组合的比较结果。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A = <span class="number">1</span>:<span class="number">3</span></span><br><span class="line"><span class="comment">%A =</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">B = [<span class="number">2</span>; <span class="number">3</span>]</span><br><span class="line"><span class="comment">%B =</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">A &gt;= B</span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>关系运算符可用于其中有任一维度大小为零的数组，只要两个数组的大小兼容。</p></li></ul><h1 id="数组索引"><a href="#数组索引" class="headerlink" title="数组索引"></a>数组索引</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/math/array-indexing.html" target="_blank" rel="noopener">文档</a><br>-<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>; <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span>; <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span>; <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span>]</span><br><span class="line"><span class="comment">%A = 4×4</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">9</span>    <span class="number">10</span>    <span class="number">11</span>    <span class="number">12</span></span><br><span class="line">    <span class="number">13</span>    <span class="number">14</span>    <span class="number">15</span>    <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%可以在一个向量中指定多个元素的索引，从而一次引用多个元素。例如，访问 A 的第二行中的第一个和第三个元素。</span></span><br><span class="line">r = A(<span class="number">2</span>,[<span class="number">1</span> <span class="number">3</span>])</span><br><span class="line"><span class="comment">%r = 1×2</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">7</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="使用逻辑值进行索引"><a href="#使用逻辑值进行索引" class="headerlink" title="使用逻辑值进行索引"></a>使用逻辑值进行索引</h2><ul><li>使用 true 和 false 逻辑指示符也可以对数组进行索引，在处理条件语句时尤其便利</li><li><p>矩阵 A 中的元素是否小于另一个矩阵 B 中的对应元素。当 A 中的元素小于 B 中的对应元素时，小于号运算符返回元素为 1 的逻辑数组。 </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">6</span></span><br><span class="line">    <span class="number">4</span> <span class="number">3</span> <span class="number">6</span>];</span><br><span class="line">B = [<span class="number">0</span> <span class="number">3</span> <span class="number">7</span></span><br><span class="line">    <span class="number">3</span> <span class="number">7</span> <span class="number">5</span>];</span><br><span class="line">ind = A&lt;B</span><br><span class="line"><span class="comment">%现在已经知道满足条件的元素的位置，可以使用 ind 作为索引数组来检查各个值。MATLAB 将 ind 中值 1 的位置与 A 和 B 中的对应元素进行匹配，并在列向量中列出它们的值。</span></span><br><span class="line">Avals = A(ind)</span><br><span class="line">Bvals = B(ind)</span><br><span class="line"></span><br><span class="line"><span class="comment">%ans</span></span><br><span class="line">ind =</span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">Avals =</span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">Bvals =</span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">7</span></span><br></pre></td></tr></table></figure></li><li><p>MATLAB 中的 is 函数(前面带is的函数)还<strong>返回逻辑数组</strong>，指示输入中的哪些元素满足特定条件。</p></li></ul><h1 id="查找符合条件的数组元素"><a href="#查找符合条件的数组元素" class="headerlink" title="查找符合条件的数组元素"></a>查找符合条件的数组元素</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/find-array-elements-that-meet-a-condition.html" target="_blank" rel="noopener">文档</a></li></ul><h2 id="应用单个条件"><a href="#应用单个条件" class="headerlink" title="应用单个条件"></a>应用单个条件</h2><ul><li><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a = [<span class="number">1</span> <span class="number">2</span></span><br><span class="line">    <span class="number">3</span> <span class="number">4</span> </span><br><span class="line">    <span class="number">5</span> <span class="number">6</span></span><br><span class="line">    <span class="number">7</span> <span class="number">8</span>];</span><br><span class="line">b = a &gt; <span class="number">5</span></span><br><span class="line">a(b)</span><br><span class="line"><span class="built_in">i</span> = <span class="built_in">find</span>(a &gt; <span class="number">5</span>)</span><br><span class="line">a(<span class="built_in">i</span>)</span><br><span class="line"><span class="comment">%answer</span></span><br><span class="line">b =</span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"><span class="built_in">i</span> =</span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br></pre></td></tr></table></figure></li></ul><p>结果为一个逻辑矩阵。b 中的每个值都表示为逻辑值 1 (true) 或逻辑值 0 (false) 的状态，以指示 a 的对应元素是否符合条件 a&gt;5。</p><ul><li>虽然 b 包含有关 a 中哪些元素大于 5 的信息，但它不会指出这些元素的具体值是多少。您可以使用 b 创建 a 的索引，而不必逐元素比较这两个矩阵。</li><li>结果为一个由 a 中大于 5 的元素组成的列向量。由于 b 为逻辑矩阵，因此该运算称为<strong>逻辑索引</strong></li><li>find函数结果为一个由线性索引组成的列向量。每个索引描述a 中一个大于5的元素的位置，因此实际上 a(i) 与 a(b) 返回的结果相同。差别在于 a(b) 使用逻辑索引，而 a(i) 使用<strong>线性索引</strong>。</li></ul><h2 id="应用多个条件"><a href="#应用多个条件" class="headerlink" title="应用多个条件"></a>应用多个条件</h2><ul><li>可以使用逻辑 and、or 和 not 运算符将任意多个条件应用于一个数组；条件的数量并不局限于一个或两个。</li><li><p>逻辑索引</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a = [<span class="number">1</span> <span class="number">2</span></span><br><span class="line">    <span class="number">3</span> <span class="number">4</span> </span><br><span class="line">    <span class="number">5</span> <span class="number">6</span></span><br><span class="line">    <span class="number">7</span> <span class="number">8</span></span><br><span class="line">    <span class="number">9</span> <span class="number">10</span>];</span><br><span class="line">b = a(a &gt; <span class="number">5</span>&amp; ~<span class="built_in">mod</span>(a, <span class="number">2</span>))</span><br><span class="line">c = a(a &gt; <span class="number">5</span>&amp; ~<span class="built_in">mod</span>(a, <span class="number">2</span>)&amp;a ~= <span class="number">8</span>)</span><br><span class="line">t = <span class="built_in">find</span>(a &gt; <span class="number">5</span>&amp; ~<span class="built_in">mod</span>(a, <span class="number">2</span>)&amp;a ~= <span class="number">8</span>);</span><br><span class="line">d = a(t)</span><br><span class="line">e = a(a &gt; <span class="number">2</span>&amp;a &lt;<span class="number">5</span>)</span><br><span class="line">f = a(<span class="number">2</span>&lt;a&lt;<span class="number">5</span>)</span><br><span class="line"><span class="comment">%结果为 a 中同时符合这两个条件的元素的列表。</span></span><br><span class="line"><span class="comment">%务必使用单独的语句指定每个条件，并用逻辑运算符连接起来。</span></span><br><span class="line"><span class="comment">%例如，不能通过 a(2 &lt; a &lt; 5) 指定以上条件，因为其计算结果为 A(2&lt;A | A&lt;5)。</span></span><br><span class="line"><span class="comment">%ans</span></span><br><span class="line">b =</span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line">    <span class="number">10</span></span><br><span class="line">c =</span><br><span class="line">     <span class="number">6</span></span><br><span class="line">    <span class="number">10</span></span><br><span class="line">d =</span><br><span class="line">     <span class="number">6</span></span><br><span class="line">    <span class="number">10</span></span><br><span class="line">e =</span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">f =</span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">9</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line">    <span class="number">10</span></span><br></pre></td></tr></table></figure></li><li><p>查找 a 中大于 5 且为偶数的元素。</p></li><li>结果为 a 中大于5的所有偶数元素的列表。<strong>使用逻辑 NOT 运算符 ~ 将矩阵 mod(A,2) 转换为逻辑矩阵</strong>，并在可被 2 整除的元素位置放置逻辑值 1 (true)。</li></ul><h2 id="替换符合条件的值"><a href="#替换符合条件的值" class="headerlink" title="替换符合条件的值"></a>替换符合条件的值</h2><ul><li>有时，同时更改多个现有数组元素的值会很有用。将逻辑索引与简单的赋值语句一起使用，可替换数组中符合条件的值。</li><li><p>将 a 中大于 10 的所有值替换为数值 10。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">    <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line">    <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span></span><br><span class="line">    <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span>];</span><br><span class="line">a(a&gt;<span class="number">10</span>) = <span class="number">10</span></span><br><span class="line"><span class="comment">%将 a 中不等于 10 的所有值替换为 NaN 值。</span></span><br><span class="line">a(a~=<span class="number">10</span>) = <span class="built_in">nan</span></span><br><span class="line"><span class="comment">%将 a中的所有 NaN 值替换为 0，并应用逻辑 NOT 运算符 ~A。</span></span><br><span class="line">a(<span class="built_in">isnan</span>(a)) = <span class="number">0</span></span><br><span class="line">c = ~a</span><br><span class="line"></span><br><span class="line"><span class="comment">%ans</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">9</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">a =</span><br><span class="line">   NaN   NaN   NaN   NaN</span><br><span class="line">   NaN   NaN   NaN   NaN</span><br><span class="line">   NaN    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">c =</span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>生成的矩阵用逻辑值 1 (true) 取代 NaN 值，用逻辑值 0 (false) 取代 10。逻辑 NOT 运算 ~a 将数值数组转换为逻辑数组，因此 a&amp;c 返回逻辑值 0 (false) 的矩阵，a|c 返回逻辑值 1 (true) 的矩阵。</p></li></ul><h1 id="数组与矩阵运算"><a href="#数组与矩阵运算" class="headerlink" title="数组与矩阵运算"></a>数组与矩阵运算</h1><ul><li>注意matlab版本</li><li>MATLAB® 具有两种不同类型的算术运算：数组运算和矩阵运算。您可以使用这些算术运算来执行数值计算，例如两数相加、计算数组元素的给定次幂或两个矩阵相乘。</li><li>矩阵运算遵循线性代数的法则。与之不同，数组运算则是执行逐元素运算并支持多维数组。句点字符 (.) 将数组运算与矩阵运算区别开来。但是，由于矩阵运算和数组运算在加法和减法的运算上相同，因此没有必要使用字符组合 .+ 和 .-。</li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/array-vs-matrix-operations.html" target="_blank" rel="noopener">数组与矩阵运算</a></li></ul><h2 id="数组运算"><a href="#数组运算" class="headerlink" title="数组运算"></a>数组运算</h2><ul><li>数组运算可针对向量、矩阵和多维数组的对应元素执行逐元素运算。如果操作数的大小相同，则第一个操作数中的每个元素都会与第二个操作数中同一位置的元素匹配。如果操作数的大小兼容，则每个输入都会根据需要进行隐式扩展以匹配另一个输入的大小。</li><li><p>如果一个操作数是标量，而另一个操作数不是标量，则 MATLAB 会将该标量隐式扩展为与另一个操作数具有相同的大小。例如，您可以计算一个标量和一个矩阵的按元素乘积。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"><span class="comment">%A =</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line"><span class="number">3.</span>*A</span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure></li><li><p>如果从一个 3×3 矩阵中减去一个 1×3 向量，隐式扩展仍然会起作用，因为它们的大小是兼容的。当您执行减法运算时，该向量将隐式扩展为一个 3×3 矩阵。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>; <span class="number">2</span> <span class="number">2</span> <span class="number">2</span>; <span class="number">3</span> <span class="number">3</span> <span class="number">3</span>]</span><br><span class="line"><span class="comment">%A =</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">2</span>     <span class="number">2</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">3</span>     <span class="number">3</span></span><br><span class="line">m = [<span class="number">2</span> <span class="number">4</span> <span class="number">6</span>]</span><br><span class="line"><span class="comment">%m =</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">4</span>     <span class="number">6</span></span><br><span class="line">A - m</span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line">    <span class="number">-1</span>    <span class="number">-3</span>    <span class="number">-5</span></span><br><span class="line">     <span class="number">0</span>    <span class="number">-2</span>    <span class="number">-4</span></span><br><span class="line">     <span class="number">1</span>    <span class="number">-1</span>    <span class="number">-3</span></span><br></pre></td></tr></table></figure></li><li><p>行向量和列向量的大小兼容。如果您将一个 1×3 向量与一个 2×1 向量相加，则每个向量都会在 MATLAB 执行按元素加法之前隐式扩展为一个 2×3 矩阵。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"><span class="comment">%x =</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">y = [<span class="number">10</span>; <span class="number">15</span>]</span><br><span class="line"><span class="comment">%y =</span></span><br><span class="line">    <span class="number">10</span></span><br><span class="line">    <span class="number">15</span></span><br><span class="line">x + y</span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line">    <span class="number">11</span>    <span class="number">12</span>    <span class="number">13</span></span><br><span class="line">    <span class="number">16</span>    <span class="number">17</span>    <span class="number">18</span></span><br></pre></td></tr></table></figure></li><li><p>如果两个操作数的大小不兼容，则将会收到错误消息。</p></li></ul><h2 id="矩阵运算"><a href="#矩阵运算" class="headerlink" title="矩阵运算"></a>矩阵运算</h2><ul><li>矩阵运算遵循<strong>线性代数的法则</strong>，与多维数组不兼容</li></ul>]]></content>
    
    <summary type="html">
    
      😏
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="矩阵" scheme="ctguljj.github.io/categories/matlab/%E7%9F%A9%E9%98%B5/"/>
    
      <category term="基础" scheme="ctguljj.github.io/categories/matlab/%E7%9F%A9%E9%98%B5/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>maltab常用函数之isempty</title>
    <link href="ctguljj.github.io/2019/04/13/maltab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bisempty/"/>
    <id>ctguljj.github.io/2019/04/13/maltab常用函数之isempty/</id>
    <published>2019-04-13T03:11:58.000Z</published>
    <updated>2019-04-14T08:40:43.627Z</updated>
    
    <content type="html"><![CDATA[<h1 id="isempty"><a href="#isempty" class="headerlink" title="isempty"></a>isempty</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/isempty.html?lang=en" target="_blank" rel="noopener">文档</a></li><li>Syntax: <code>TF = isempty(A)</code><ul><li>Description<ul><li><code>TF = isempty(A)</code> returns logical 1 (true) if A is empty, and logical 0 (false) otherwise. An empty array, table, or timetable has at least one dimension with length 0, such as 0-by-0 or 0-by-5.</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      🙂
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="isempty" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/isempty/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之xlim及其相关函数</title>
    <link href="ctguljj.github.io/2019/04/11/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bxlim%E5%8F%8A%E5%85%B6%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0/"/>
    <id>ctguljj.github.io/2019/04/11/matlab常用函数之xlim及其相关函数/</id>
    <published>2019-04-11T14:50:31.000Z</published>
    <updated>2019-04-17T11:23:44.283Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xlim"><a href="#xlim" class="headerlink" title="xlim"></a>xlim</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/xlim.html" target="_blank" rel="noopener">文档</a></li><li><a href="http://www.ece.northwestern.edu/local-apps/matlabhelp/techdoc/ref/ylim.html" target="_blank" rel="noopener">相关网站</a></li><li>含义:(x limit)设置或查询 x 坐标轴范围</li><li>调用格式:y有多种，暂时写一种<ul><li><code>xlim([xmin xmax])</code>sets the axis limits in the current axes to the specified values.<ul><li>将当前轴中的轴限制设置为指定的值。</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      😋
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="绘图" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/%E7%BB%98%E5%9B%BE/"/>
    
      <category term="xlim,ylim,zlim" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/%E7%BB%98%E5%9B%BE/xlim-ylim-zlim/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之pdist与squareform</title>
    <link href="ctguljj.github.io/2019/04/11/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bpdist%E5%92%8Csquareform/"/>
    <id>ctguljj.github.io/2019/04/11/matlab常用函数之pdist和squareform/</id>
    <published>2019-04-11T09:05:16.000Z</published>
    <updated>2019-04-13T03:19:01.772Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pdist"><a href="#pdist" class="headerlink" title="pdist"></a>pdist</h1><ul><li><a href="https://ww2.mathworks.cn/help/stats/pdist.html" target="_blank" rel="noopener">文档</a></li><li>调用格式:<ul><li><code>D = pdist(X)</code>returns the Euclidean distance between pairs of observations in X.<ul><li>一个矩阵A的大小为M<em>N，那么B=pdist(A)得到的矩阵B的大小为1行M</em>(M-1)/2列，表示的意义是M行数据，每两行计算一下欧式距离<code>pdist(x,distance)</code>,distance也可以用来表示其他距离，默认的是欧式距离。</li><li>返回函数中的观测对之间的欧几里得距离</li></ul></li><li><code>D = pdist(X,Distance)</code> returns the distance by using the method specified by Distance. </li><li><code>D = pdist(X,Distance,DistParameter)</code> returns the distance by using the method specified by Distance and DistParameter. You can specify DistParameter only when Distance is ‘seuclidean’, ‘minkowski’, or ‘mahalanobis’.</li></ul></li><li>Distance — Distance metric<ul><li>Distance metric, specified as a character vector, string scalar, or function handle, as described in the following table.</li><li>metric’取值如下： ‘euclidean’：欧氏距离（默认）；</li></ul></li><li>栗子:Compute the Euclidean distance between pairs of observations, and convert the distance vector to a matrix using squareform.<ul><li>计算观测对之间的欧氏距离，并用squareform将距离矢量转换为矩阵。<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">rng(<span class="string">'default'</span>) <span class="comment">% For reproducibility</span></span><br><span class="line">X = <span class="built_in">rand</span>(<span class="number">3</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">%生成矩阵坐标，第一列为横坐标，第二列为纵坐标</span></span><br><span class="line">D = pdist(X)</span><br><span class="line"><span class="comment">%answer</span></span><br><span class="line">D = <span class="number">1</span>×<span class="number">3</span></span><br><span class="line"></span><br><span class="line">    <span class="number">0.2954</span>    <span class="number">1.0670</span>    <span class="number">0.9448</span></span><br><span class="line"><span class="comment">%**The pairwise distances are arranged in the order (2,1), (3,1), (3,2)**. **You can easily locate the distance between observations i and j by using squareform.**</span></span><br><span class="line"><span class="comment">%**如果a是3*2矩阵，那么pdist函数计算欧几里德距离的顺序是第二行与第一行计算欧几里得距离，然后是第3行于第一行计算欧几里得距离，最后是第3行与第2行的欧几里德距离**</span></span><br><span class="line"><span class="comment">% 如果`b = squareform(pdist(a))`，那么`b(i,j)`就是矩阵a第i行与第j行之间的欧几里得距离</span></span><br><span class="line">Z = squareform(D)</span><br><span class="line">Z = <span class="number">3</span>×<span class="number">3</span></span><br><span class="line"></span><br><span class="line">         <span class="number">0</span>    <span class="number">0.2954</span>    <span class="number">1.0670</span></span><br><span class="line">    <span class="number">0.2954</span>         <span class="number">0</span>    <span class="number">0.9448</span></span><br><span class="line">    <span class="number">1.0670</span>    <span class="number">0.9448</span>         <span class="number">0</span></span><br><span class="line"><span class="comment">%squareform returns a symmetric matrix **where Z(i,j) corresponds to the pairwise distance between observations i and j**. For example,** you can find the distance between observations 2 and 3.**</span></span><br><span class="line"><span class="comment">%squareform返回一个对称矩阵，**其中Z(i,j)对应于观察i和j之间的成对距离。**</span></span><br><span class="line">Z(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">ans</span> = <span class="number">0.9448</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%验证pdist函数计算行顺序</span></span><br><span class="line">clc,clear;</span><br><span class="line">a = [<span class="number">0</span> <span class="number">0</span></span><br><span class="line">    <span class="number">3</span> <span class="number">4</span></span><br><span class="line">    <span class="number">5</span> <span class="number">6</span>];</span><br><span class="line">b = pdist(a);</span><br><span class="line">d = <span class="built_in">sqrt</span>(<span class="number">3</span>^<span class="number">2</span>+<span class="number">4</span>^<span class="number">2</span>)</span><br><span class="line">e = <span class="built_in">sqrt</span>(<span class="number">5</span>^<span class="number">2</span>+<span class="number">6</span>^<span class="number">2</span>)</span><br><span class="line">g = <span class="built_in">sqrt</span>(<span class="number">2</span>^<span class="number">2</span>+<span class="number">2</span>^<span class="number">2</span>)</span><br><span class="line">b</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      😝
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="pdist" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/pdist/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之isprime</title>
    <link href="ctguljj.github.io/2019/04/11/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bisprime/"/>
    <id>ctguljj.github.io/2019/04/11/matlab常用函数之isprime/</id>
    <published>2019-04-11T08:56:33.000Z</published>
    <updated>2019-04-11T09:00:14.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="isprime"><a href="#isprime" class="headerlink" title="isprime"></a>isprime</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/isprime.html" target="_blank" rel="noopener">文档</a></li><li>调用格式:<ul><li><code>TF = isprime(X)</code> 返回与 X 大小相同的逻辑数组。如果 X(i) 为质数，则 TF(i) 的值为 true。否则，值为 false。</li></ul></li><li>栗子:<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tf = <span class="built_in">isprime</span>([<span class="number">2</span> <span class="number">3</span> <span class="number">0</span> <span class="number">6</span> <span class="number">10</span>])</span><br><span class="line">tf = <span class="number">1</span>x5 logical array</span><br><span class="line">   <span class="number">1</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br><span class="line"><span class="comment">%2 和 3 是质数，但 0、6 和 10 不是。</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      😆
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="isprime" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/isprime/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之primes</title>
    <link href="ctguljj.github.io/2019/04/11/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bprimes/"/>
    <id>ctguljj.github.io/2019/04/11/matlab常用函数之primes/</id>
    <published>2019-04-11T08:49:49.000Z</published>
    <updated>2019-04-11T08:55:49.921Z</updated>
    
    <content type="html"><![CDATA[<h1 id="primes"><a href="#primes" class="headerlink" title="primes"></a>primes</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/primes.html" target="_blank" rel="noopener">文档</a></li><li>调用格式:<ul><li><code>p = primes(n)</code>返回包含所有小于或等于 n 的质数的行向量。p 与 n 具有相同的数据类型。</li></ul></li><li>栗子:<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="built_in">primes</span>(<span class="number">25</span>)</span><br><span class="line">p = <span class="number">1</span>×<span class="number">9</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">3</span>     <span class="number">5</span>     <span class="number">7</span>    <span class="number">11</span>    <span class="number">13</span>    <span class="number">17</span>    <span class="number">19</span>    <span class="number">23</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      😘
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="primes" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/primes/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之symsum</title>
    <link href="ctguljj.github.io/2019/04/10/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bsymsum/"/>
    <id>ctguljj.github.io/2019/04/10/matlab常用函数之symsum/</id>
    <published>2019-04-10T12:04:39.000Z</published>
    <updated>2019-04-11T08:29:23.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数学期望问题"><a href="#数学期望问题" class="headerlink" title="数学期望问题"></a>数学期望问题</h1><p><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlab之数学期望问题2.png" alt=""><br><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlab之数学期望问题.png" alt=""></p><ul><li><a href="http://www.doc88.com/p-6671800827880.html" target="_blank" rel="noopener">原地址</a></li></ul><h1 id="symsum"><a href="#symsum" class="headerlink" title="symsum"></a>symsum</h1><ul><li><a href="https://ww2.mathworks.cn/help/symbolic/symsum.html" target="_blank" rel="noopener">symsum文档</a></li><li>调用格式:<ul><li><code>F = symsum(f,k,a,b)</code> returns the sum of the series with terms that expression f specifies, which depend on symbolic variable k. The value of k ranges from a to b. If you do not specify the variable, symsum uses the variable that symvar determines. If f is a constant, then the default variable is x.<ul><li>返回表达式f指定的一系列项的和，这些项依赖于符号变量k。k的值范围从a到b。如果不指定变量，symsum将使用symvar确定的变量。如果f是常数，那么默认变量是x。</li></ul></li><li><code>F = symsum(f,k)</code></li></ul></li><li>栗子:  <figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">syms k x</span><br><span class="line"> S1 = symsum(k^<span class="number">2</span>, k, <span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">S2 = symsum(<span class="number">1</span>/k^<span class="number">2</span>, k, <span class="number">1</span>, Inf)</span><br><span class="line"> S3 = symsum(x^k/<span class="built_in">factorial</span>(k), k, <span class="number">0</span>, Inf)<span class="comment">%分母为阶乘</span></span><br><span class="line"> <span class="comment">%answer</span></span><br><span class="line"> S1 =</span><br><span class="line"> <span class="number">385</span></span><br><span class="line"> S2 =</span><br><span class="line"> <span class="built_in">pi</span>^<span class="number">2</span>/<span class="number">6</span></span><br><span class="line"> S3 =</span><br><span class="line"> <span class="built_in">exp</span>(x)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      嘻嘻
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="symsum" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/symsum/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之solve</title>
    <link href="ctguljj.github.io/2019/04/10/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bsolve/"/>
    <id>ctguljj.github.io/2019/04/10/matlab常用函数之solve/</id>
    <published>2019-04-10T11:47:30.000Z</published>
    <updated>2019-04-10T11:55:49.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h1><div class="note info"><p>Character vector inputs have been removed. Instead, use syms to declare variables and replace inputs such as solve(‘2<em>x == 1’,’x’) with solve(2</em>x == 1,x).</p></div><ul><li><p>调用格式:</p><ul><li><code>S = solve(eqn,var)</code>solves the equation eqn for the variable var. If you do not specify var, the symvar function determines the variable to solve for. For example, <code>solve(x + 1 == 2, x)</code> solves the equation x + 1 = 2 for x.</li><li><code>S = solve(eqn,var,Name,Value)</code></li><li><code>Y = solve(eqns,vars)</code></li><li><code>Y = solve(eqns,vars,Name,Value)</code></li><li><code>[y1,...,yN] = solve(eqns,vars)</code></li><li><code>[y1,...,yN] = solve(eqns,vars,Name,Value)</code></li><li><code>[y1,...,yN,parameters,conditions] = solve(eqns,vars,&#39;ReturnConditions&#39;,true)</code></li></ul></li><li><p>栗子:</p>  <figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%Use the == operator to specify the equation sin(x) == 1 and solve it.</span></span><br><span class="line">syms x</span><br><span class="line">eqn = <span class="built_in">sin</span>(x) == <span class="number">1</span>;</span><br><span class="line">solx = solve(eqn,x)</span><br><span class="line"><span class="comment">%answer:solx = pi/2</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;solve&quot;&gt;&lt;a href=&quot;#solve&quot; class=&quot;headerlink&quot; title=&quot;solve&quot;&gt;&lt;/a&gt;solve&lt;/h1&gt;&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;Character vector inputs have been r
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="solve" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/solve/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>数学期望</title>
    <link href="ctguljj.github.io/2019/04/09/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/"/>
    <id>ctguljj.github.io/2019/04/09/数学期望/</id>
    <published>2019-04-09T15:05:42.000Z</published>
    <updated>2019-04-18T09:05:26.006Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数学期望"><a href="#数学期望" class="headerlink" title="数学期望"></a>数学期望</h1><ul><li><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/数学期望.jpg" alt=""></li><li><a href="https://www.zhihu.com/question/20994432" target="_blank" rel="noopener">数学期望 知乎</a></li><li><a href="https://baike.baidu.com/item/数学期望" target="_blank" rel="noopener">数学期望 百科</a></li><li>大数定律规定，随着重复次数接近无穷大，数值的算术平均值几乎肯定地收敛于期望值</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数学期望&quot;&gt;&lt;a href=&quot;#数学期望&quot; class=&quot;headerlink&quot; title=&quot;数学期望&quot;&gt;&lt;/a&gt;数学期望&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ctguljj/ctgu
      
    
    </summary>
    
      <category term="数学" scheme="ctguljj.github.io/categories/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="数学期望" scheme="ctguljj.github.io/categories/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/"/>
    
    
      <category term="数学" scheme="ctguljj.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
</feed>
