<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LjJiaJun&#39; Home</title>
  
  <subtitle>书青春 - 话人生 | Coding - Thinking - Acting</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="BestQwerty.github.io/"/>
  <updated>2019-05-12T15:23:18.517Z</updated>
  <id>BestQwerty.github.io/</id>
  
  <author>
    <name>LjJiaJun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>栈的运用</title>
    <link href="BestQwerty.github.io/2019/05/08/%E6%A0%88%E7%9A%84%E8%BF%90%E7%94%A8/"/>
    <id>BestQwerty.github.io/2019/05/08/栈的运用/</id>
    <published>2019-05-08T03:00:35.000Z</published>
    <updated>2019-05-12T15:23:18.517Z</updated>
    
    <content type="html"><![CDATA[<h1 id="后缀表达式"><a href="#后缀表达式" class="headerlink" title="后缀表达式"></a>后缀表达式</h1><ul><li>后缀表达式又称逆波兰表达式，后缀记法</li><li>后缀表达式计算机求值<ul><li>与前缀表达式类似，只是顺序是从左至右：<ul><li>从左至右扫描表达式，遇到数字时，将数字压入堆栈，遇到运算符时，弹出栈顶的两个数，用运算符对它们做相应的计算（次顶元素 op 栈顶元素），并将结果入栈；重复上述过程直到表达式最右端，最后运算得出的值即为表达式的结果</li></ul></li></ul></li><li>步骤:</li></ul><p><img src="https://raw.githubusercontent.com/BestQwerty/BestQwerty.github.io/master/images/中缀表达式转换为后缀表达式.jpg" alt=""></p><p><img src="https://raw.githubusercontent.com/BestQwerty/BestQwerty.github.io/master/images/中缀表达式转换为后缀表达式2.jpg" alt=""></p><ul><li>题目：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">ctguoj</span><br><span class="line"><span class="number">191.2016</span>栈与队_表达式转换 (<span class="number">20</span>分) </span><br><span class="line">C时间限制：<span class="number">3000</span> 毫秒 |  C内存限制：<span class="number">3000</span> Kb</span><br><span class="line">题目内容：</span><br><span class="line"> 算术表达式有前缀表示法、中缀表示法、后缀表示法等形式。日常使用的算术表达式是采用中缀表示法，</span><br><span class="line">即二元运算符位于两个运算数之间。请设计程序将中缀表达式转换为后缀表达式。</span><br><span class="line">中缀表示：<span class="number">2</span>+<span class="number">3</span><span class="number">-4</span></span><br><span class="line">后缀表示：<span class="number">2</span> <span class="number">3</span> + <span class="number">4</span> -， 符号在两个运算数据的后面。后缀表达有很多好处，例如可以不要括号，见下面</span><br><span class="line">的样例。</span><br><span class="line"> </span><br><span class="line">输入描述</span><br><span class="line">输入在一行中给出不含空格的中缀表达式，可包含+、-、*、/、（、）运算符，以#结束表达式</span><br><span class="line"></span><br><span class="line">输出描述</span><br><span class="line">在一行中给出转换后的表达式，要求不同对象（运算数、运算符号）之间以空格分隔</span><br><span class="line"></span><br><span class="line">输入样例</span><br><span class="line"><span class="number">2</span>+<span class="number">3</span>*(<span class="number">7</span><span class="number">-4</span>)#</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; st2; </span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compre</span><span class="params">(<span class="keyword">char</span> a)</span></span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(a)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">if</span>(!st.empty())&#123;</span><br><span class="line"><span class="keyword">char</span> b = st.top();</span><br><span class="line"><span class="keyword">if</span>(b == <span class="string">'*'</span>||b == <span class="string">'/'</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; str.size(); i++)&#123;</span><br><span class="line"><span class="keyword">switch</span>(str[i])&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'('</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">')'</span>: <span class="comment">//((2+3)*4-(8+2))/5#</span></span><br><span class="line"><span class="keyword">if</span>(str[i] == <span class="string">'('</span>) st.push(str[i]);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!st.empty())&#123;</span><br><span class="line"><span class="keyword">char</span> a = st.top();</span><br><span class="line"><span class="keyword">int</span> c = st.size();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; c; j++)&#123;</span><br><span class="line">a = st.top();</span><br><span class="line"><span class="keyword">if</span>(a != <span class="string">'('</span>) st2.push(a);</span><br><span class="line">st.pop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line"><span class="keyword">if</span>(st.empty() || (st.top() == <span class="string">'('</span>) )&#123;</span><br><span class="line">st.push(str[i]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(compre(str[i])) st.push(str[i]);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = st.top();</span><br><span class="line">st2.push(a);</span><br><span class="line">st.pop();</span><br><span class="line"><span class="keyword">if</span>(compre(str[i])) st.push(str[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'#'</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">st2.push(str[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> size1 = st.size();</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; size1; i++)&#123;</span><br><span class="line">st2.push( st.top() );</span><br><span class="line">st.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> str2;</span><br><span class="line"><span class="keyword">int</span> size2 = st2.size();</span><br><span class="line"><span class="keyword">for</span>(i = size2<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(!st2.empty())&#123;</span><br><span class="line">str2 += st2.top();</span><br><span class="line">st2.pop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = str2.length()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)&#123;          </span><br><span class="line"><span class="keyword">if</span>(str2[i] != <span class="string">'('</span>) <span class="built_in">cout</span> &lt;&lt; str2[i] &lt;&lt; <span class="string">" "</span>; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//((2+3)*4-(8+2))/5#</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="括号匹配"><a href="#括号匹配" class="headerlink" title="括号匹配"></a>括号匹配</h1><ul><li>检验表达式中左右括号(多种&amp;&amp;嵌套)是否可以对应匹配<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">march</span><span class="params">(<span class="keyword">char</span> a, <span class="keyword">char</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(a)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'('</span>:</span><br><span class="line"><span class="keyword">if</span>(b == <span class="string">')'</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'['</span>:</span><br><span class="line"><span class="keyword">if</span>(b == <span class="string">']'</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'&#123;'</span>:</span><br><span class="line"><span class="keyword">if</span>(b == <span class="string">'&#125;'</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; st;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size()<span class="number">-1</span>; i++)&#123;</span><br><span class="line"><span class="keyword">switch</span>(str[i])&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'('</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'['</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'&#123;'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">')'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">']'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'&#125;'</span>:</span><br><span class="line">k = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size()<span class="number">-1</span>; i++)&#123;</span><br><span class="line"><span class="keyword">switch</span>(str[i])&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'('</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'['</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'&#123;'</span>:</span><br><span class="line">st.push(str[i]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">')'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">']'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'&#125;'</span>:</span><br><span class="line"><span class="keyword">if</span>(st.empty())&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>( march(str[i], st.top()) )&#123;</span><br><span class="line">st.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(st.empty())</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><ul><li><a href="https://www.cnblogs.com/chensongxian/p/7059802.html" target="_blank" rel="noopener">博客园</a></li></ul>]]></content>
    
    <summary type="html">
    
      😋
    
    </summary>
    
      <category term="数据结构" scheme="BestQwerty.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="栈" scheme="BestQwerty.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/"/>
    
    
      <category term="数据结构" scheme="BestQwerty.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>二叉树的创建与遍历</title>
    <link href="BestQwerty.github.io/2019/05/08/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E9%81%8D%E5%8E%86/"/>
    <id>BestQwerty.github.io/2019/05/08/二叉树的创建与遍历/</id>
    <published>2019-05-08T01:52:02.000Z</published>
    <updated>2019-05-08T02:58:24.304Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二叉树创建与遍历"><a href="#二叉树创建与遍历" class="headerlink" title="二叉树创建与遍历"></a>二叉树创建与遍历</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Dtype char  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span>  </span><br><span class="line">    Dtype data;  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">LChild</span>;</span>  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">RChild</span>;</span>  </span><br><span class="line">&#125;Bnode,* Btree;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">(Bnode *root)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(root != <span class="literal">NULL</span>)&#123;  </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; root-&gt;data &lt;&lt; <span class="string">" "</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateBtree</span><span class="params">(Btree &amp;t)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    Dtype e;  </span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; e;  </span><br><span class="line">    <span class="keyword">if</span>(e == <span class="string">'#'</span>)  </span><br><span class="line">        t = <span class="literal">NULL</span>;  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        t = (Btree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Bnode));  </span><br><span class="line">        t-&gt;data = e;  </span><br><span class="line">        CreateBtree(t-&gt;LChild);  </span><br><span class="line">        CreateBtree(t-&gt;RChild);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pre_visit</span><span class="params">(Btree t)</span> <span class="comment">//前序遍历   </span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(t)  </span><br><span class="line">    &#123;  </span><br><span class="line">        visit(t);  </span><br><span class="line">        Pre_visit(t-&gt;LChild);  </span><br><span class="line">        Pre_visit(t-&gt;RChild);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">In_visit</span><span class="params">(Btree t)</span>  <span class="comment">//中序遍历   </span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(t)  </span><br><span class="line">    &#123;  </span><br><span class="line">        In_visit(t-&gt;LChild);  </span><br><span class="line">        visit(t);  </span><br><span class="line">       In_visit(t-&gt;RChild);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Post_visit</span><span class="params">(Btree t)</span>  <span class="comment">//后序遍历   </span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(t)  </span><br><span class="line">    &#123;  </span><br><span class="line">        Post_visit(t-&gt;LChild);  </span><br><span class="line">        Post_visit(t-&gt;RChild);  </span><br><span class="line">        visit(t);   </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_leaf</span><span class="params">(Btree t)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(t)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(!t-&gt;LChild &amp;&amp; !t-&gt;RChild)  </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; t-&gt;data &lt;&lt; <span class="string">" "</span>;  </span><br><span class="line">        print_leaf(t-&gt;LChild);  </span><br><span class="line">        print_leaf(t-&gt;RChild);  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">PostTreeDepth</span><span class="params">(Btree t)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> h1,h2,max;  </span><br><span class="line">    <span class="keyword">if</span>(t)  </span><br><span class="line">    &#123;  </span><br><span class="line">       h1 = PostTreeDepth(t-&gt;LChild);  </span><br><span class="line">        h2 = PostTreeDepth(t-&gt;RChild);  </span><br><span class="line">        max = h1 &gt; h2 ? h1 : h2;  </span><br><span class="line">        <span class="keyword">return</span> max+<span class="number">1</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">   <span class="keyword">else</span>  </span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    Btree t;  </span><br><span class="line">    CreateBtree(t);  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"前序遍历二叉树"</span> &lt;&lt; <span class="built_in">endl</span>;   </span><br><span class="line">    Pre_visit(t);  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"中序序遍历二叉树"</span> &lt;&lt; <span class="built_in">endl</span>;   </span><br><span class="line">    In_visit(t);  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"后序遍历二叉树："</span> &lt;&lt; <span class="built_in">endl</span>;   </span><br><span class="line">    Post_visit(t);  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"输出叶子节点："</span> &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">    print_leaf(t);  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"输出树的深度："</span> &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; PostTreeDepth(t) &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">a b # d f # # g # # c # e # h # # </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      😋
    
    </summary>
    
      <category term="数据结构" scheme="BestQwerty.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="二叉树" scheme="BestQwerty.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
    
      <category term="数据结构" scheme="BestQwerty.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>GitHub扩展</title>
    <link href="BestQwerty.github.io/2019/04/29/GitHub%E6%89%A9%E5%B1%95/"/>
    <id>BestQwerty.github.io/2019/04/29/GitHub扩展/</id>
    <published>2019-04-29T15:29:37.000Z</published>
    <updated>2019-04-29T15:37:01.135Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://zhuanlan.zhihu.com/p/55722104" target="_blank" rel="noopener">汇总</a></li></ul><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><ul><li>October<ul><li>它在 GitHub 页面的左侧上方添加了一个按钮，点击后会展开一个菜单，显示当前项目的整个文件夹结构。你可以浏览或下载单个源文件</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      ❤
    
    </summary>
    
      <category term="GitHub" scheme="BestQwerty.github.io/categories/GitHub/"/>
    
    
      <category term="Github" scheme="BestQwerty.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>浏览器以及扩展</title>
    <link href="BestQwerty.github.io/2019/04/29/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%A5%E5%8F%8A%E6%89%A9%E5%B1%95/"/>
    <id>BestQwerty.github.io/2019/04/29/浏览器以及扩展/</id>
    <published>2019-04-29T15:22:12.000Z</published>
    <updated>2019-04-30T09:29:52.785Z</updated>
    
    <content type="html"><![CDATA[<h1 id="edge扩展"><a href="#edge扩展" class="headerlink" title="edge扩展"></a>edge扩展</h1><ul><li>油猴子tamperMonkey<ul><li><a href="https://tampermonkey.net/index.php?version=4.8.5847&amp;ext=gz80&amp;updated=true" target="_blank" rel="noopener">链接</a></li></ul></li><li>uBlock Origin 广告过滤“新牌”扩展</li><li>Video Downloader Professional:下载网页上的视频</li><li>欢迎来到 Greasy Fork，这里是一个提供用户脚本的网站。<ul><li><a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">Greasy Fork</a></li></ul></li><li><a href="https://openuserjs.org/" target="_blank" rel="noopener">OpenUserJs</a></li><li>鼠标手势</li><li>grammarly for microsoft edge</li><li><a href="https://en.softonic.com/windows" target="_blank" rel="noopener">softonic</a></li></ul><h1 id="百分浏览器"><a href="#百分浏览器" class="headerlink" title="百分浏览器"></a>百分浏览器</h1><ul><li>emmm一堆</li></ul>]]></content>
    
    <summary type="html">
    
      🎨
    
    </summary>
    
      <category term="浏览器" scheme="BestQwerty.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    
      <category term="浏览器" scheme="BestQwerty.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客与GitHub进阶操作</title>
    <link href="BestQwerty.github.io/2019/04/29/hexo%E5%8D%9A%E5%AE%A2%E4%B8%8EGitHub%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C/"/>
    <id>BestQwerty.github.io/2019/04/29/hexo博客与GitHub进阶操作/</id>
    <published>2019-04-29T13:41:49.000Z</published>
    <updated>2019-04-29T14:11:19.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitHub与hexo"><a href="#GitHub与hexo" class="headerlink" title="GitHub与hexo"></a>GitHub与hexo</h1><ul><li>GitHub改名后使用<code>hexo clean</code>命令清除之前的网页信息(改名后一些设置与图片丢失),再重新上传</li><li>GitHub上commit可以查看历史提交记录，修改记录与相应时间的仓库原状，可以clone/download历史版本</li><li><code>$ hexo clean</code><ul><li>清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</li></ul></li><li>主题文件中avatar更改头像，favicon更改网页头像</li></ul>]]></content>
    
    <summary type="html">
    
      😏
    
    </summary>
    
      <category term="blog" scheme="BestQwerty.github.io/categories/blog/"/>
    
      <category term="捣鼓记" scheme="BestQwerty.github.io/categories/blog/%E6%8D%A3%E9%BC%93%E8%AE%B0/"/>
    
    
      <category term="blog" scheme="BestQwerty.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数汇总</title>
    <link href="BestQwerty.github.io/2019/04/27/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%B1%87%E6%80%BB/"/>
    <id>BestQwerty.github.io/2019/04/27/matlab常用函数汇总/</id>
    <published>2019-04-27T13:17:18.000Z</published>
    <updated>2019-04-28T05:18:11.567Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kron"><a href="#kron" class="headerlink" title="kron"></a>kron</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/kron.html" target="_blank" rel="noopener">Kronecker 张量积</a></li><li>语法:<ul><li><code>K = kron(A,B)</code> 返回矩阵 A 和 B 的 Kronecker 张量积。如果 A 是 m×n 矩阵，而 B 是 p×q 矩阵，则 <code>kron(A,B)</code>是通过获取 A 元素与矩阵 B 元素之间的所有可能积而形成的一个 m<em>p×n</em>q 矩阵。</li></ul></li><li>如果 A 是 m×n 矩阵，而 B 是 p×q 矩阵，则 A 和 B 的 Kronecker 张量积是通过将 B 乘以 A 的各元素形成的一个大型矩阵。</li></ul><h1 id="ismember"><a href="#ismember" class="headerlink" title="ismember"></a>ismember</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/ismember.html" target="_blank" rel="noopener">ismember</a></li></ul><h1 id="intersect"><a href="#intersect" class="headerlink" title="intersect"></a>intersect</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/intersect.html" target="_blank" rel="noopener">设置两个数组的交集</a></li></ul><h1 id="mat2str"><a href="#mat2str" class="headerlink" title="mat2str"></a>mat2str</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/mat2str.html" target="_blank" rel="noopener">将矩阵转换为字符</a></li></ul>]]></content>
    
    <summary type="html">
    
      😍
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="汇总" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/%E6%B1%87%E6%80%BB/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab实现dfs/bfs</title>
    <link href="BestQwerty.github.io/2019/04/27/matlab%E5%AE%9E%E7%8E%B0dfs-bfs/"/>
    <id>BestQwerty.github.io/2019/04/27/matlab实现dfs-bfs/</id>
    <published>2019-04-27T13:16:03.000Z</published>
    <updated>2019-04-27T15:02:31.887Z</updated>
    
    <content type="html"><![CDATA[<h1 id="dfs与bfs"><a href="#dfs与bfs" class="headerlink" title="dfs与bfs"></a>dfs与bfs</h1><ul><li><a href="https://blog.csdn.net/newcloudtech/article/details/8679439" target="_blank" rel="noopener">Matlab 深度优先搜索求解迷宫问题</a></li><li><a href="https://blog.csdn.net/newcloudtech/article/details/8679461" target="_blank" rel="noopener">Matlab 广度优先搜索求解迷宫问题</a></li><li><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line"><span class="comment">%a = kron(eye (2),[-1 1] )</span></span><br><span class="line"><span class="comment">%a(:,1)</span></span><br><span class="line"><span class="comment">%maze = [0 2 5 5 1</span></span><br><span class="line">       <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">5</span> <span class="number">1</span></span><br><span class="line">        <span class="number">0</span> <span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">1</span></span><br><span class="line">        <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">%ismember(maze(1,1),[1,2,5] )</span></span><br><span class="line"><span class="comment">%maze = [1 2 3 4 5</span></span><br><span class="line">       <span class="number">2</span> <span class="number">23</span> <span class="number">3</span> <span class="number">1</span> <span class="number">5</span>];</span><br><span class="line"><span class="comment">%ismember(maze,[1:3])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 定义四个方向</span></span><br><span class="line"><span class="comment">%directions = kron(eye(2),[-1,1]);</span></span><br><span class="line"><span class="comment">% 路径个数</span></span><br><span class="line"><span class="comment">%sol = 0;</span></span><br><span class="line"><span class="comment">% [I,J] = find(maze == 2);</span></span><br><span class="line"><span class="comment">% 找到起点</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      😋
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
    
  </entry>
  
  <entry>
    <title>git</title>
    <link href="BestQwerty.github.io/2019/04/20/git/"/>
    <id>BestQwerty.github.io/2019/04/20/git/</id>
    <published>2019-04-20T13:14:02.000Z</published>
    <updated>2019-04-28T09:34:06.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><ul><li>工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。<ul><li>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。</li></ul></li><li><p>对于任何一个文件，在 Git 内都只有三种状态：已提交（committed），已修改（modified）和已暂存(staged),git 管理项目时，文件流转的三个工作区域：Git 的工作目录，暂存区域，以及本地仓库</p><ul><li>如果是 Git 目录中保存着的特定版本文件，就属于已提交状态；如果作了修改并已放入暂存区域，就属于已暂存状态；如果自上次取出后，作了修改但还没有放到暂存区域，就是已修改状态。<br><img src="https://raw.githubusercontent.com/BestQwerty/BestQwerty.github.io/master/images/git工作区域.png" alt=""></li></ul></li><li><p>每个项目都有一个 Git 目录（译注：如果 git clone 出来的话，就是其中 .git 的目录；如果 git clone –bare 的话，新建的目录本身就是 Git 目录。），它是 Git 用来保存元数据和对象数据库的地方。该目录非常重要，每次克隆镜像仓库的时候，实际拷贝的就是这个目录里面的数据。</p></li><li><p>windows下编辑文本文件时最好用Notepad++而不要用自带记事本，因为后者在文件头部添加的十六进制字符0xefbbbf容易导致编译报错。Notepad++最好设置默认编码为UTF-8 (without BOM)</p></li></ul><ul><li>Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。<ul><li>使用https除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2></li></ul></li></ul><h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><ul><li>pwd命令用于显示当前目录。</li><li><p>如果使用Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名(包括父目录)不包含中文。 </p></li><li><p>通过<code>git init</code>命令把目录变成Git可以管理的仓库：</p></li><li><p>添加文件到Git仓库，分两步：</p><ul><li>使用命令<code>git add &lt; file &gt;</code>，注意，可反复多次使用，添加多个文件；</li><li>使用命令<code>git commit -m &lt; message &gt;</code>，完成。</li></ul></li><li><code>git status</code>查看工作区状态</li><li><code>git diff</code>查看difference(修改的内容)</li><li><code>cat &lt; file &gt;</code>查看文件内容</li></ul><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><ul><li>HEAD指向的版本是当前版本，<code>HEAD^</code>表示上一个版本，<code>HEAD^^</code>前一个的上个版本,<code>HEAD~n</code>前第n个版本</li><li><code>git log</code>可以查看提交历史</li><li><code>git reflog</code>可以查看命令历史，查看commit_id(版本号)</li><li><code>git reset --hard &lt; commid id&gt;</code>回到该版本号的版本<ul><li><code>git reset --hard HEAD^</code>回到上一版本</li><li>版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位，因为Git可能会找到多个版本号，就无法确定是哪一个了。</li></ul></li><li>克隆仓库的命令格式为 <code>git clone [url]</code>。</li></ul><h3 id="管理修改"><a href="#管理修改" class="headerlink" title="管理修改"></a>管理修改</h3><ul><li><code>git diff</code>比较的是工作目录中当前文件和暂存区域快照之间的差异， 也就是修改之后还没有暂存起来的变化内容。若要查看已暂存的将要添加到下次提交里的内容，可以用 <code>git diff --cached</code> 命令。<ul><li>请注意，<code>git diff</code> 本身只显示尚未暂存的改动，而不是自上次提交以来所做的所有改动。 所以有时候你一下子暂存了所有更新过的文件后，运行 <code>git diff</code> 后却什么也没有，就是这个原因。</li><li><code>git add</code> 的潜台词就是把目标文件快照放入暂存区域，也就是 add file into staged area</li></ul></li><li>Git跟踪并管理的是修改，而非文件<ul><li>Git管理的是修改，当你用<code>git add</code>命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在工作区的第二次修改并没有放入暂存区，所以，<code>git commit</code>只负责把暂存区的修改提交了，也就是第一次的修改被提交了，第二次的修改不会被提交。</li></ul></li><li><code>git diff HEAD -- &lt; file &gt;</code>命令可以查看工作区和版本库里面最新版本的区别</li></ul><h3 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h3><ul><li>命令<code>git checkout -- &lt; file &gt;</code>意思就是，把file在<strong>工作区</strong>的修改全部撤销，这里有两种情况:<ul><li>一种是file自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</li><li>一种是file已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</li><li>总之，就是让这个文件回到最近一次git commit或git add时的状态。 </li></ul></li><li><code>git reset HEAD &lt; file &gt;</code>可以把<strong>暂存区</strong>的修改撤销掉，HEAD表示当前版本(最新).</li><li>若已经提交到版本库，修改就要用版本回退</li></ul><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><ul><li><span id="inline-toc">1.</span>先手动删除文件后，若想继续删除版本库里的文件，则<code>git rm &lt; file &gt;</code>,然后更新版本库<code>git commit -m &quot;remove &lt; file &gt;&quot;</code>，若想恢复文件，则<code>git checkout -- &lt; file &gt;</code><ul><li>注意<code>git rm &lt;file&gt;</code>和<code>git add&lt;file&gt;</code>在这里都可以</li><li><code>git checkout</code>是用版本库里的版本替代工作区里的版本</li></ul></li><li><span id="inline-toc">2.</span>使用命令<code>rm &lt; file &gt;</code></li></ul><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><ul><li>远程仓库是指托管在网络上的项目仓库</li><li><p>如果在GitHub上创建仓库时默认了创建<strong>readme.md</strong>，那么刚刚建立的仓库中因为没有该md文件，所以要么删除md文件，要么<code>git pull origin master --allow-unrelated-histories</code>,然后进入编辑器后，若填写好原因，那么按ESC，：，wq的顺序先后按出.</p><ul><li>貌似可以先clone一下也可以，那样md文件也同步了</li></ul></li><li><p>新建仓库，然后在文件夹<code>git remote add origin git@github.com:Github账号名/仓库名.git</code></p><ul><li>远程仓库默认名字为origin</li><li><code>git remote add [shortname] [url]</code></li></ul></li><li>要查看当前配置有哪些远程仓库，可以用 <code>git remote</code> 命令，它会列出每个远程库的简短名字<ul><li>也可以加上 -v 选项（译注：此为 –verbose 的简写，取首字母），显示对应的克隆地址：</li></ul></li><li><code>git push [remote-name] [branch-name]</code>推送数据到远程仓库。<ul><li>克隆操作会自动使用默认的 master 和 origin 名字</li><li>只有在所克隆的服务器上有写权限，或者同一时刻没有其他人在推数据，这条命令才会如期完成任务。</li><li>如果在你推数据前，已经有其他人推送了若干更新，那你的推送操作就会被驳回。你必须先把他们的更新抓取到本地，合并到自己的项目中，然后才可以再次推送。(类似于第二条readme.md,因为必须同步)</li></ul></li><li>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容</li><li><code>git remote show [remote-name]</code> 查看某个远程仓库的详细信息</li><li><p>远程仓库的删除和重命名，在新版 Git 中可以用 <code>git remote rename</code> 命令修改某个远程仓库在本地的简称，比如想把 pb 改成 paul，可以这么运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rename pb paul</span><br><span class="line">$ git remote</span><br><span class="line">origin</span><br><span class="line">paul</span><br></pre></td></tr></table></figure></li><li><p>注意，<strong>对远程仓库的重命名，也会使对应的分支名称发生变化</strong>，原来的 pb/master 分支现在成了 paul/master。<br>碰到远端仓库服务器迁移，或者原来的克隆镜像不再使用，又或者某个参与者不再贡献代码，那么需要移除对应的远端仓库，可以运行 <code>git remote rm</code>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rm paul</span><br><span class="line">$ git remote</span><br><span class="line">origin</span><br></pre></td></tr></table></figure></li><li><p><code>git clone [url]</code>从远程仓库clone下来</p></li></ul><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><ul><li>Git 保存的不是文件差异或者变化量，而只是一系列文件快照<ul><li>在 Git 中提交时，会保存一个提交（commit）对象，该对象包含一个指向暂存内容快照的指针，包含本次提交的作者等相关附属信息，包含零个或多个指向该提交对象的父对象指针：首次提交是没有直接祖先的，普通提交有一个祖先，由两个或多个分支合并产生的提交则有多个祖先</li></ul></li><li><a href="http://iissnan.com/progit/html/zh/ch3_1.html" target="_blank" rel="noopener">不想看了，先放着哈哈哈哈哈</a></li><li><a href="http://iissnan.com/progit/html/zh/ch3_1.html" target="_blank" rel="noopener">唧唧复唧唧</a></li></ul><h2 id="打标签"><a href="#打标签" class="headerlink" title="打标签"></a>打标签</h2><ul><li><p>列出现有标签的命令非常简单，直接运行 <code>git tag</code> 即可</p><ul><li>显示的标签按字母顺序排列，所以标签的先后并不表示重要程度的轻重。</li><li>以用特定的搜索模式列出符合条件的标签,若只对1.4.2系列的版本感兴趣<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -l &apos;v1.4.2.*&apos;</span><br><span class="line">v1.4.2.1</span><br><span class="line">v1.4.2.2</span><br><span class="line">v1.4.2.3</span><br><span class="line">v1.4.2.4</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Git 使用的标签有两种类型：轻量级的（lightweight）和含附注的（annotated）</p><ul><li>。轻量级标签就像是个不会变化的分支，实际上它就是个指向特定提交对象的引用。而<strong>含附注标签，实际上是存储在仓库中的一个独立对象</strong>，它有自身的校验和信息，包含着标签的名字，电子邮件地址和日期，以及标签说明，标签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证。一般建议使用含附注型的标签，以便保留相关信息</li></ul></li></ul><h3 id="含附注的标签"><a href="#含附注的标签" class="headerlink" title="含附注的标签"></a>含附注的标签</h3><ul><li><p>创建一个含附注类型的标签非常简单，用 -a （译注：取 annotated 的首字母）指定标签名字即可</p><ul><li>而 -m 选项则指定了对应的标签说明，Git 会将此说明一同保存在标签对象中。如果没有给出该选项，Git 会启动文本编辑软件供你输入标签说明。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a v1.4 -m &apos;my hero 1.4&apos;</span><br><span class="line">$ git tag</span><br><span class="line">v0.1</span><br><span class="line">v1.3</span><br><span class="line">v1.4</span><br></pre></td></tr></table></figure></li></ul></li><li><p>可以使用 <code>git show 版本号</code> 命令查看相应标签的版本信息，并连同显示打标签时的提交对象</p></li></ul><h3 id="轻量级标签"><a href="#轻量级标签" class="headerlink" title="轻量级标签"></a>轻量级标签</h3><ul><li>轻量级标签实际上就是一个保存着对应提交对象的校验和信息的文件。要创建这样的标签，一个 -a，-s 或 -m 选项都不用，直接给出标签名字即可<code>git tag 名字</code></li><li>运行 <code>git show</code> 查看此标签信息，就只有相应的提交对象摘要</li></ul><h3 id="验证标签"><a href="#验证标签" class="headerlink" title="验证标签"></a>验证标签</h3><ul><li>可以使用 <code>git tag -v [tag-name]</code> （译注：取 verify 的首字母）的方式验证已经签署的标签。此命令会调用 GPG 来验证签名，所以你需要有签署者的公钥，存放在 keyring 中，才能验证</li></ul><h3 id="后期加注标签"><a href="#后期加注标签" class="headerlink" title="后期加注标签"></a>后期加注标签</h3><ul><li>只要在打标签的时候跟上对应提交对象的校验和（或前几位字符）</li></ul><h3 id="分享标签"><a href="#分享标签" class="headerlink" title="分享标签"></a>分享标签</h3><ul><li>默认情况下，<code>git push</code> 并不会把标签传送到远端服务器上，只有通过显式命令才能分享标签到远端仓库。其命令格式如同推送分支，运行 <code>git push origin [tagname]</code> 即可</li><li>如果要一次推送所有本地新增的标签上去，可以使用 –tags 选项</li><li>现在，其他人克隆共享仓库或拉取数据同步后，也会看到这些标签。</li></ul><h2 id="技巧与窍门"><a href="#技巧与窍门" class="headerlink" title="技巧与窍门"></a>技巧与窍门</h2><ul><li><p>在输入 Git 命令的时候可以敲两次跳格键（Tab），就会看到列出所有匹配的可用命令建议</p><ul><li>然后输入s，再敲一下tab会自动补全，然后可以继续tab，看看有没有相关命令，tab多敲几下就知道了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git pu&lt;tab&gt;&lt;tab&gt;</span><br><span class="line">pull   push</span><br></pre></td></tr></table></figure></li></ul></li><li><p>可以用 <code>git config</code> 为命令设置别名</p><ul><li>若要输入<code>git commit</code>只要输入<code>git ci</code>即可</li><li>使用这种技术还可以创造出新的命令，比方说取消暂存文件时的输入比较繁琐<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global alias.co checkout</span><br><span class="line">$ git config --global alias.br branch</span><br><span class="line">$ git config --global alias.ci commit</span><br><span class="line">$ git config --global alias.st status</span><br><span class="line"></span><br><span class="line"><span class="comment">//简化</span></span><br><span class="line">$ git config --global alias.unstage 'reset HEAD --'</span><br><span class="line"><span class="comment">//与下面相同</span></span><br><span class="line">$ git unstage fileA</span><br><span class="line">$ git reset HEAD fileA</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="GitHub实用指南"><a href="#GitHub实用指南" class="headerlink" title="GitHub实用指南"></a>GitHub实用指南</h1><ul><li>在GitHub上，可以任意Fork开源仓库；</li><li>自己拥有Fork后的仓库的读写权限；</li><li>可以推送pull request给官方仓库来贡献代码。</li><li>Github账户注册和新建项目，项目必须要遵守格式：<code>账户名.github.io</code>，不然接下来会有很多麻烦。并且需要勾选Initialize this repository with a README（<strong>仅限博客</strong>）</li><li>GitHub创建仓库最好不要用中文,路径也是</li></ul><h2 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h2><ul><li>GitHub Pages is a static site hosting service designed to host your personal, organization, or project pages directly from a GitHub repository.</li></ul><h1 id="查询资料"><a href="#查询资料" class="headerlink" title="查询资料"></a>查询资料</h1><ul><li><a href="http://iissnan.com/progit/" target="_blank" rel="noopener">Pro git</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git 教程-廖雪峰</a></li></ul>]]></content>
    
    <summary type="html">
    
      🎈
    
    </summary>
    
      <category term="git" scheme="BestQwerty.github.io/categories/git/"/>
    
    
      <category term="git" scheme="BestQwerty.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客网页访问量与访客计数问题</title>
    <link href="BestQwerty.github.io/2019/04/20/hexo%E5%8D%9A%E5%AE%A2%E7%BD%91%E9%A1%B5%E8%AE%BF%E9%97%AE%E9%87%8F%E4%B8%8E%E8%AE%BF%E5%AE%A2%E8%AE%A1%E6%95%B0%E9%97%AE%E9%A2%98/"/>
    <id>BestQwerty.github.io/2019/04/20/hexo博客网页访问量与访客计数问题/</id>
    <published>2019-04-20T12:25:30.000Z</published>
    <updated>2019-04-20T12:34:34.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="访问量解决"><a href="#访问量解决" class="headerlink" title="访问量解决"></a>访问量解决</h1><ul><li>busuanzi域名改了⛷🏂<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      ⛹
    
    </summary>
    
      <category term="blog" scheme="BestQwerty.github.io/categories/blog/"/>
    
      <category term="博客优化" scheme="BestQwerty.github.io/categories/blog/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="blog" scheme="BestQwerty.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>数学题题解</title>
    <link href="BestQwerty.github.io/2019/04/20/%E6%95%B0%E5%AD%A6%E9%A2%98%E9%A2%98%E8%A7%A3/"/>
    <id>BestQwerty.github.io/2019/04/20/数学题题解/</id>
    <published>2019-04-20T11:09:02.000Z</published>
    <updated>2019-04-20T11:47:58.635Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数学题"><a href="#数学题" class="headerlink" title="数学题"></a>数学题</h1><ul><li><p>小明用字母A 对应数字1，B 对应2，以此类推，用Z 对应26。对于27以上的数字，小明用两位或更长位的字符串来对应，例如AA 对应27，AB 对应28，AZ 对应52，LQ 对应329。请问2019 对应的字符串是什么？</p><ul><li>用ABCD替换掉了1234, 注意26个字母应该是逢27进1, 也就是27进制, 而不是26进制<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">%法一</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ret;</span><br><span class="line">    <span class="keyword">while</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> t = n%r;</span><br><span class="line">        n = (n<span class="number">-1</span>)/r;    <span class="comment">//不是26进制</span></span><br><span class="line">        <span class="keyword">if</span>(t == <span class="number">0</span>) t = <span class="number">26</span>;</span><br><span class="line">        ret += <span class="string">'A'</span>+t<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">string</span> ans = solve(n, <span class="number">26</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = ans.length()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%法二</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//702 --&gt; ZZ</span></span><br><span class="line"><span class="comment">//703 --&gt; AAA</span></span><br><span class="line"><span class="comment">//18278 --&gt; ZZZ</span></span><br><span class="line"><span class="comment">//18279 --&gt; AAAA</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (N &gt; <span class="number">26</span>) dfs((N - <span class="number">1</span>) / <span class="number">26</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'A'</span> + (N - <span class="number">1</span>) % <span class="number">26</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; N) &#123;</span><br><span class="line">        dfs(N); <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>n转r进制的模板<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ans[maxn], index = <span class="number">0</span>;</span><br><span class="line">    ms(ans, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> t = n%r;</span><br><span class="line">        n /= r;</span><br><span class="line">        <span class="keyword">if</span>(t &gt; <span class="number">9</span>)</span><br><span class="line">            ans[index++] = (t<span class="number">-10</span>+<span class="string">'A'</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans[index++] = (t+<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从后往前输出</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>给定数列1, 1, 1, 3, 5, 9, 17, …，从第4 项开始，每项都是前3 项的和。求第20190324 项的最后4 位数字。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%一</span></span><br><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int MAXN = <span class="number">30000000</span>;</span><br><span class="line">int a[MAXN];</span><br><span class="line">int main() &#123;</span><br><span class="line">    int N = <span class="number">20190324</span>;</span><br><span class="line">    a[<span class="number">1</span>] = a[<span class="number">2</span>] = a[<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (int <span class="built_in">i</span> = <span class="number">4</span>; <span class="built_in">i</span> &lt;= N; ++<span class="built_in">i</span>)</span><br><span class="line">        a[<span class="built_in">i</span>] = (a[<span class="built_in">i</span> - <span class="number">1</span>] + a[<span class="built_in">i</span> - <span class="number">2</span>] + a[<span class="built_in">i</span> - <span class="number">3</span>]) <span class="comment">% 10000;</span></span><br><span class="line">    printf(<span class="string">"%d\n"</span>, a[N]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%二</span></span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main() &#123;</span><br><span class="line">    int a = <span class="number">1</span>, b = <span class="number">1</span>, c = <span class="number">1</span>;</span><br><span class="line">    int N = 20190324;   //scanf("%d", &amp;N);</span><br><span class="line">    <span class="keyword">for</span> (int <span class="built_in">i</span> = <span class="number">4</span>; <span class="built_in">i</span> &lt;= N; ++<span class="built_in">i</span>) &#123;</span><br><span class="line">        int t = (a + b + c) <span class="comment">% 10000;</span></span><br><span class="line">        c = b; </span><br><span class="line">        b = a;</span><br><span class="line">        a = t;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">"%d\n"</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>把2019 分解成3 个各不相同的正整数之和，并且要求每个正整数都不包含数字 2 和 4，一共有多少种不同的分解方法？注意交换3个整数的顺序被视为同一种方法，例如1000+1001+18 和 1001+1000+18 被视为同一种。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isOK</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="comment">/* */</span>; x &gt; <span class="number">0</span>; x /= <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> (x % <span class="number">10</span> == <span class="number">2</span> || x % <span class="number">10</span> == <span class="number">4</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N = <span class="number">2019</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N / <span class="number">3</span>; ++i)</span><br><span class="line">        <span class="keyword">if</span> (isOK(i))</span><br><span class="line">            <span class="comment">//k = N - i - j &gt; j</span></span><br><span class="line">            <span class="comment">//判断重复可以i &lt; j &lt; k, 然后判断i, j, k是否含2和4就行了</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; N - i - j &gt; j; ++j)</span><br><span class="line">                <span class="keyword">if</span> (isOK(j) &amp;&amp; isOK(N - i - j)) ++cnt;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>小明对数位中含有 2、0、1、9 的数字很感兴趣（不包括前导0），在1 到 40 中这样的数包括1、2、9、10 至 32、39 和 40，共 28 个，他们的和是 574。请问，在 1 到n 中，所有这样的数的和是多少？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isOK</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="comment">/* */</span>; x &gt; <span class="number">0</span>; x /= <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = x % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (t % <span class="number">10</span> == <span class="number">2</span> || t % <span class="number">10</span> == <span class="number">0</span> || t % <span class="number">10</span> == <span class="number">1</span> || t % <span class="number">10</span> == <span class="number">9</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)</span><br><span class="line">        <span class="keyword">if</span> (isOK(i)) ret += i;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ret &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      🙄
    
    </summary>
    
    
      <category term="题解" scheme="BestQwerty.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>matlab函数之vpa</title>
    <link href="BestQwerty.github.io/2019/04/18/matlab%E5%87%BD%E6%95%B0%E4%B9%8Bvpa/"/>
    <id>BestQwerty.github.io/2019/04/18/matlab函数之vpa/</id>
    <published>2019-04-18T09:29:14.000Z</published>
    <updated>2019-04-19T08:06:03.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vpa"><a href="#vpa" class="headerlink" title="vpa"></a>vpa</h1><ul><li><a href="https://ww2.mathworks.cn/help/symbolic/vpa.html" target="_blank" rel="noopener">vpa</a></li></ul>]]></content>
    
    <summary type="html">
    
      😂
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="vpa" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/vpa/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab代码练习二</title>
    <link href="BestQwerty.github.io/2019/04/18/matlab%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0%E4%BA%8C/"/>
    <id>BestQwerty.github.io/2019/04/18/matlab代码练习二/</id>
    <published>2019-04-18T08:38:31.000Z</published>
    <updated>2019-04-30T13:30:56.645Z</updated>
    
    <content type="html"><![CDATA[<h1 id="competition"><a href="#competition" class="headerlink" title="competition"></a>competition</h1><ul><li><p>提取12345和67899这两个五位数的每一位数字，并把他们存储到一个2*5的矩阵里。</p><ul><li>要求矩阵第一行是12345从万位到个位的所有位数字，第二行为67899从个位到万位的所有位数字<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a=<span class="number">12345</span>;</span><br><span class="line">b=<span class="number">67899</span>;</span><br><span class="line">a=str2num(num2str(a)')';</span><br><span class="line">b=<span class="built_in">fliplr</span>(str2num(num2str(b')')');</span><br><span class="line">[a;b]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>以pi/100为间隔，比较函数sin(2x+3)和cos(3x-1)在0到2π的函数值大小，只画出函数值相对较大的那一部分图像。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">clc;clear;</span><br><span class="line">close all;</span><br><span class="line">x=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">100</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">y1=<span class="built_in">sin</span>(<span class="number">2</span>*x+<span class="number">3</span>);</span><br><span class="line">y2=<span class="built_in">cos</span>(<span class="number">3</span>*x<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,<span class="built_in">max</span>(y1,y2));</span><br></pre></td></tr></table></figure></li><li><p>有如下数列：1  3  59  8  74  2  1  3  46  8  7  4  5  6  9  8  5  4 22  25  52  32  64  62  13  1  61  31  31  32  15  4  54  32  24  23  24  15  21  10  30  45  56  14  24  34  13  21  24  23  35  26  15 14 12  13  142  412  43  16  23  4  55  25  21  24  34  12  34  12  43 12  43  14  23  14  12  23  14  21  23  74  14 ；</p><ul><li>求出数列中每个数出现的次数.</li><li>并按原序列先后顺序输出(其中相同的数字只保留第一次出现的)。<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a=[<span class="number">1</span> <span class="number">3</span> <span class="number">59</span> <span class="number">8</span> <span class="number">74</span> <span class="number">2</span> <span class="number">1</span> <span class="number">3</span> <span class="number">46</span> <span class="number">8</span>  ...</span><br><span class="line">    <span class="number">7</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">4</span> ...</span><br><span class="line">    <span class="number">22</span> <span class="number">25</span> <span class="number">52</span> <span class="number">32</span> <span class="number">64</span> <span class="number">62</span> <span class="number">13</span> ...</span><br><span class="line">    <span class="number">1</span> <span class="number">61</span> <span class="number">31</span> <span class="number">31</span> <span class="number">32</span> <span class="number">15</span> <span class="number">4</span> <span class="number">54</span> <span class="number">32</span> ...</span><br><span class="line">    <span class="number">24</span> <span class="number">23</span> <span class="number">24</span> <span class="number">15</span> <span class="number">21</span> <span class="number">10</span> <span class="number">30</span> <span class="number">45</span> <span class="number">56</span> ...</span><br><span class="line">    <span class="number">14</span> <span class="number">24</span> <span class="number">34</span> <span class="number">13</span> <span class="number">21</span> <span class="number">24</span> <span class="number">23</span> <span class="number">35</span> <span class="number">26</span> ...</span><br><span class="line">    <span class="number">15</span> <span class="number">14</span> <span class="number">12</span> <span class="number">13</span> <span class="number">142</span> <span class="number">412</span> <span class="number">43</span> <span class="number">16</span> <span class="number">23</span> ...</span><br><span class="line">    <span class="number">4</span> <span class="number">55</span> <span class="number">25</span> <span class="number">21</span> <span class="number">24</span> <span class="number">34</span> <span class="number">12</span> <span class="number">34</span> <span class="number">12</span> ...</span><br><span class="line">    <span class="number">43</span> <span class="number">12</span> <span class="number">43</span> <span class="number">14</span> <span class="number">23</span> <span class="number">14</span> <span class="number">12</span> ...</span><br><span class="line">    <span class="number">23</span> <span class="number">14</span> <span class="number">21</span> <span class="number">23</span> <span class="number">74</span> <span class="number">14</span>];</span><br><span class="line">A=unique(a,<span class="string">'stable'</span>)</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(A)</span><br><span class="line">    [m,n]=<span class="built_in">find</span>(a==A(<span class="built_in">i</span>));</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">length</span>(m)&gt;=<span class="number">2</span>   </span><br><span class="line">  <span class="comment">%用的好，因为find函数放回的是向量(若向量长度大于2，那么说明该数的横坐标有多个，所以出现了多次)</span></span><br><span class="line">      <span class="built_in">disp</span>(strcat(num2str(A(<span class="built_in">i</span>)),<span class="string">'重复'</span>,num2str(<span class="built_in">length</span>(m)),...</span><br><span class="line">          <span class="string">'次'</span>,<span class="string">'位置为:'</span>,mat2str([m n])))</span><br><span class="line">  <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>随机生成四组坐标，判断第四个点是否在前三个点构成的三角形内（不包括线上），并画出图像，计算精度为5位有效数字。</p><ul><li>（海伦公式：假设在平面内，有一个三角形，边长分别为a、b、c，三角形的面积S可由以下公式求得：..而公式里的p为周长的一半）<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a=<span class="built_in">rand</span>(<span class="number">4</span>,<span class="number">2</span>);</span><br><span class="line">d=squareform(pdist(a));</span><br><span class="line">f=@(a,b,c)<span class="built_in">sqrt</span>((a+b+c)/<span class="number">2</span>*((a+b+c)/<span class="number">2</span>-a)*((a+b+c)/<span class="number">2</span>-b)*((a+b+c)/<span class="number">2</span>-c));</span><br><span class="line">s1=f(d(<span class="number">1</span>,<span class="number">2</span>),d(<span class="number">1</span>,<span class="number">3</span>),d(<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">s2=f(d(<span class="number">1</span>,<span class="number">2</span>),d(<span class="number">1</span>,<span class="number">4</span>),d(<span class="number">2</span>,<span class="number">4</span>))+f(d(<span class="number">1</span>,<span class="number">3</span>),d(<span class="number">1</span>,<span class="number">4</span>),d(<span class="number">3</span>,<span class="number">4</span>))+f(d(<span class="number">3</span>,<span class="number">2</span>),d(<span class="number">3</span>,<span class="number">4</span>),d(<span class="number">2</span>,<span class="number">4</span>));</span><br><span class="line"><span class="keyword">if</span> vpa(s1,<span class="number">5</span>)==vpa(s2,<span class="number">5</span>)</span><br><span class="line">    fprintf(<span class="string">'第四个点在前三个点组成的三角形内'</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    fprintf(<span class="string">'第四个点不在前三个点组成的三角形内'</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">x=a(:,<span class="number">1</span>)';y=a(:,<span class="number">2</span>)';</span><br><span class="line">x1=[x(<span class="number">1</span>:<span class="number">3</span>) x(<span class="number">1</span>)];y1=[y(<span class="number">1</span>:<span class="number">3</span>) y(<span class="number">1</span>)];</span><br><span class="line"><span class="built_in">plot</span>(x1,y1,<span class="string">'b-'</span>)<span class="comment">%用plot画封闭曲线需要在最后添上第一个点的坐标</span></span><br><span class="line">text(x+<span class="number">0.01</span>,y+<span class="number">0.01</span>,&#123;<span class="string">'1'</span> <span class="string">'2'</span> <span class="string">'3'</span> <span class="string">'4'</span>&#125;)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'ro'</span>)</span><br><span class="line">s1-s2</span><br></pre></td></tr></table></figure></li></ul></li><li><p>这题跟算法博弈不一样，matlab。。。。<img src="https://raw.githubusercontent.com/BestQwerty/BestQwerty.github.io/master/images/matlab2018复赛题A3人机大战.jpg" alt=""></p></li></ul><ul><li><p>CTGUMCM是一个大佬云集的地方。已知矩阵a如图4所示，其中1表示大佬，0表示小白。</p><ul><li>（1）在这里大佬小白各有多少位呢？试分别统计，并将大佬们的位置存储在矩阵z中。</li><li>（2）大佬们在这里喜欢抱团。我们称位置（x,y）与其上下左右四个位置（x,y+1）,(x,y-1), (x+1,y),(x-1,y)是相邻的。如果矩阵中有若干个1是相邻的（不必两两相邻），那么称这些1构成了一个“大佬集”，试求矩阵a中“大佬集”的个数。<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a = [<span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line">    <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line">    <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> </span><br><span class="line">    <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>];</span><br><span class="line">[x,y] = <span class="built_in">find</span>(a == <span class="number">1</span>);</span><br><span class="line">a1 = <span class="built_in">length</span>(x);</span><br><span class="line">z = [x y];</span><br><span class="line">[x1,y1] = <span class="built_in">find</span>(a == <span class="number">0</span>);</span><br><span class="line">b1 = <span class="built_in">length</span>(x1);</span><br><span class="line">fprintf(<span class="string">'大佬有%d位\n'</span>,a1);</span><br><span class="line">fprintf(<span class="string">'小白有%d位\n'</span>,b1);</span><br><span class="line">fprintf(<span class="string">'大佬们的位置'</span>);</span><br><span class="line"><span class="built_in">disp</span>(z);</span><br><span class="line"><span class="comment">%%*******第二问********%%</span></span><br><span class="line">clc,clear;</span><br><span class="line"><span class="keyword">global</span> a z</span><br><span class="line">z=<span class="number">0</span>;</span><br><span class="line"><span class="comment">%a=[0 0 0 0 0;0 1 1 0 0;0 1 0 1 0;0 0 1 1 0;0 0 0 0 0];</span></span><br><span class="line">a=[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;];</span><br><span class="line">[ax,ay]=<span class="built_in">size</span>(a);</span><br><span class="line"><span class="keyword">for</span> i0=<span class="number">1</span>:ax</span><br><span class="line">    <span class="keyword">for</span> j0=<span class="number">1</span>:ay</span><br><span class="line">        bfs(i0,j0)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">'矩阵a中共有%d个大佬集\n'</span>,z)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bfs</span><span class="params">(x0,y0)</span></span></span><br><span class="line"><span class="keyword">global</span> a z</span><br><span class="line">x=x0;y=y0;k=<span class="number">0</span>;</span><br><span class="line">x1=[<span class="number">0</span> <span class="number">0</span> <span class="number">-1</span> <span class="number">1</span>];y1=[<span class="number">1</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span> a(x0,y0)==<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">length</span>(x)~=<span class="number">0</span></span><br><span class="line">        k=k+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">4</span></span><br><span class="line">            newx=x(<span class="number">1</span>)+x1(<span class="built_in">i</span>);newy=y(<span class="number">1</span>)+y1(<span class="built_in">i</span>);</span><br><span class="line">            <span class="keyword">if</span> a(newx,newy)==<span class="number">1</span></span><br><span class="line">                x=[x,newx];y=[y,newy];</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        a(x(<span class="number">1</span>),y(<span class="number">1</span>))=<span class="number">0</span>;</span><br><span class="line">        x(<span class="number">1</span>)=[];y(<span class="number">1</span>)=[];</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> k&gt;<span class="number">1</span></span><br><span class="line">        z=z+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>在青青草原旁边的小树林里，有两头爱吃蜂蜜的小熊熊。熊大做了一个5*5的VIP单层蜂箱，熊二找到了5只小蜜蜂5只大蜜蜂，它们都表示愿意住在里面，但提出了要求：每只蜜蜂独占一个小房间，且相同大小的蜜蜂不能在同一行、同一列、同一对角线上。聪明的你能帮助小熊熊们设计出10只蜜蜂的居住方案吗</p><ul><li>（1）请编程输出一种满足所有条件的方案</li><li>（2）请编程输出所有方案，并统计共有多少方案。<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%*******B卷第五题********%%</span></span><br><span class="line">clc,clear;</span><br><span class="line">n=<span class="number">5</span>;</span><br><span class="line">z=<span class="number">0</span>;</span><br><span class="line">zzz=[];</span><br><span class="line"><span class="keyword">for</span> a1=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">    <span class="keyword">for</span> a2=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">        <span class="keyword">for</span> a3=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">            <span class="keyword">for</span> a4=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">                <span class="keyword">for</span> a5=<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">                    a=[a1 a2 a3 a4 a5];<span class="comment">%行号</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">length</span>(unique(a))==<span class="number">5</span></span><br><span class="line">                        zz=<span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">4</span><span class="comment">%列号</span></span><br><span class="line">                            <span class="keyword">for</span> <span class="built_in">j</span>=<span class="built_in">i</span>+<span class="number">1</span>:<span class="number">5</span></span><br><span class="line">                                <span class="keyword">if</span> ((a(<span class="built_in">i</span>)+<span class="built_in">i</span>)==(a(<span class="built_in">j</span>)+<span class="built_in">j</span>))||((a(<span class="built_in">i</span>)-a(<span class="built_in">j</span>))==(<span class="built_in">i</span>-<span class="built_in">j</span>))</span><br><span class="line">                                    zz=<span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">break</span></span><br><span class="line">                                <span class="keyword">end</span></span><br><span class="line">                            <span class="keyword">end</span></span><br><span class="line">                            <span class="keyword">if</span> zz==<span class="number">1</span></span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                            <span class="keyword">end</span></span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">i</span>==<span class="number">4</span>&amp;&amp;<span class="built_in">j</span>==<span class="number">5</span></span><br><span class="line">                            z=z+<span class="number">1</span>;</span><br><span class="line">                            zzz=[zzz;a];</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">z</span><br><span class="line">zzz</span><br><span class="line">z2=<span class="number">0</span>;</span><br><span class="line">[x,y]=<span class="built_in">size</span>(zzz);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:y<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="built_in">i</span>+<span class="number">1</span>:y</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">length</span>(<span class="built_in">find</span>(zzz(<span class="built_in">i</span>,:)-zzz(<span class="built_in">j</span>,:)))==<span class="number">5</span></span><br><span class="line">            [zzz(<span class="built_in">i</span>,:);zzz(<span class="built_in">j</span>,:)]</span><br><span class="line">            z2=z2+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">'一共有%d种方案\n'</span>,z2);</span><br><span class="line"><span class="comment">%TAKE IT EASY.JUST HAVE FUN!</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      📚
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="代码练习" scheme="BestQwerty.github.io/categories/matlab/%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab自定义函数</title>
    <link href="BestQwerty.github.io/2019/04/18/matlab%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/"/>
    <id>BestQwerty.github.io/2019/04/18/matlab自定义函数/</id>
    <published>2019-04-18T05:42:52.000Z</published>
    <updated>2019-04-27T14:36:29.285Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://ww2.mathworks.cn/help/matlab/functions.html" target="_blank" rel="noopener">函数</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/local-functions-in-scripts.html" target="_blank" rel="noopener">向脚本中添加函数</a><ul><li>R2016b 或更高版本支持脚本中的函数。</li></ul></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/base-and-function-workspaces.html" target="_blank" rel="noopener">基础和函数工作区</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/function-precedence-order.html" target="_blank" rel="noopener">函数优先顺序</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/types-of-functions.html" target="_blank" rel="noopener">函数类型</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/share-data-between-workspaces.html" target="_blank" rel="noopener">在工作区之间共享数据</a></li></ul><h1 id="global"><a href="#global" class="headerlink" title="global"></a>global</h1><ul><li>将变量声明为全局变量</li><li>除了定义使用global，在其它自定义函数内使用时也要使用global先定义。</li></ul><h1 id="function"><a href="#function" class="headerlink" title="function"></a>function</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/function.html" target="_blank" rel="noopener">function 声明函数名称、输入和输出</a></li><li><code>function [y1,...,yN] = myfun(x1,...,xM)</code> 声明名为 myfun 的函数，该函数接受输入 x1,…,xM 并<strong>返回输出 y1,…,yN。</strong>此声明语句必须是函数的第一个可执行代码行。有效的函数名称以字母字符开头，并且可以包含字母、数字或下划线。<ul><li>可以将函数保存在以下位置：<ul><li><strong>只包含函数定义的函数文件中。文件的名称应与文件中其函数的名称一致</strong>。</li><li>包含命令和函数定义的脚本文件中。<strong>函数必须位于该文件的末尾</strong>。脚本文件不能与文件中的函数具有相同的名称。<strong>R2016b 或更高版本才可以在脚本中直接写直接用函数</strong>。</li></ul></li></ul></li><li>文件可以包含多个局部函数或嵌套函数。为提高可读性，可使用 end 关键字来表示文件中每个函数的末尾。以下情况下需要 end 关键字：<ul><li>文件中有任意函数包含嵌套函数。</li><li>该函数是函数文件中的局部函数，并且文件中有局部函数使用 end 关键字。</li><li>该函数是脚本文件内的局部函数。</li></ul></li></ul><h1 id="在文件中创建函数"><a href="#在文件中创建函数" class="headerlink" title="在文件中创建函数"></a>在文件中创建函数</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/create-functions-in-files.html" target="_blank" rel="noopener">在文件中创建函数</a></li><li>程序文件可以包含多个函数。<strong>如果文件仅包含函数定义，则第一个函数是主函数，也是 MATLAB 与文件名关联的函数</strong>。<strong>主函数或脚本代码后面的函数称为局部函数。局部函数只能在文件内使用</strong>。</li></ul><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><ul><li>格式：函数句柄变量=@（匿名函数输入参数）匿名函数表达式<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">EG:</span><br><span class="line">f1=@(x,y)x^<span class="number">2</span>+y^<span class="number">2</span>;</span><br><span class="line">f1(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">25</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">一：</span><br><span class="line"><span class="function"><span class="keyword">function</span> 输出形参表=函数名（输入形参表）</span></span><br><span class="line">注释（对这个函数的解释说明）</span><br><span class="line">函数体语句</span><br><span class="line">End</span><br><span class="line"></span><br><span class="line">EG:圆的周长和面积</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[s,c]</span>=<span class="title">circle</span><span class="params">(r)</span></span></span><br><span class="line"><span class="comment">%求圆的周长和面积</span></span><br><span class="line">c=<span class="number">2</span>*<span class="built_in">pi</span>*r;</span><br><span class="line">s=<span class="built_in">pi</span>*r^<span class="number">2</span>;</span><br><span class="line">End</span><br><span class="line"></span><br><span class="line">[s,c]=circle(<span class="number">3</span>)<span class="comment">%保存好函数文件，在命令行窗口或另一个脚本里调用</span></span><br><span class="line"></span><br><span class="line">二:</span><br><span class="line"><span class="function"><span class="keyword">function</span> 函数名</span></span><br><span class="line">注释（对这个函数的解释说明）</span><br><span class="line">函数体语句</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">EG:最强代号</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CTGUMCM</span></span></span><br><span class="line">axis off;   <span class="comment">%关闭坐标轴</span></span><br><span class="line"><span class="comment">%Menubar是菜单条 none就是不显示图上方的菜单条</span></span><br><span class="line">set(gcf,<span class="string">'menubar'</span>,<span class="string">'none'</span>,<span class="string">'toolbar'</span>,<span class="string">'none'</span>,<span class="string">'unit'</span>, <span class="string">'normalized'</span>, <span class="string">'position'</span>, [<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:<span class="number">377</span></span><br><span class="line">h=text(<span class="built_in">rand</span>, <span class="built_in">rand</span>, ...</span><br><span class="line">     [<span class="string">'\fontsize&#123;'</span>,num2str(unifrnd(<span class="number">5</span>,<span class="number">77</span>)),<span class="string">'&#125; CTGU MCM'</span>],...</span><br><span class="line">        <span class="string">'color'</span>,<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">3</span>),<span class="string">'Rotation'</span>,<span class="number">360</span>*<span class="built_in">rand</span>);</span><br><span class="line">     pause(<span class="number">0.2</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      🧐
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="自定义函数" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab绘图补充</title>
    <link href="BestQwerty.github.io/2019/04/17/matlab%E7%BB%98%E5%9B%BE%E8%A1%A5%E5%85%85/"/>
    <id>BestQwerty.github.io/2019/04/17/matlab绘图补充/</id>
    <published>2019-04-17T12:25:40.000Z</published>
    <updated>2019-04-17T13:23:04.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/set.html" target="_blank" rel="noopener">设置图形对象属性(set)</a></li><li>调用格式:<ul><li><code>set(H,Name,Value)</code>为 H 标识的对象指定其 Name 属性的值。使用时须用单引号将属性名引起来，例如，<code>set(H,&#39;Color&#39;,&#39;red&#39;)</code>。如果 H 是对象的向量，则 set 会为所有对象设置属性。如果 H 为空（即 []），set 不执行任何操作，但不返回错误或警告。</li><li><code>set(H,NameArray,ValueArray)</code></li><li><code>set(H,S)</code></li><li><code>s = set(H)</code></li><li><code>values = set(H,Name)</code></li></ul></li><li>栗子:<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%绘制一个线条并以 p 的形式返回图形线条对象。将行的 Color 属性设置为 'red'。</span></span><br><span class="line">p = <span class="built_in">plot</span>(<span class="number">1</span>:<span class="number">10</span>);</span><br><span class="line">set(p,<span class="string">'Color'</span>,<span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">%使用随机数据创建一个包含四个线条的图形，并将这四个线条返回至 P。将所有线条的 Color 属性设置为 'red'。</span></span><br><span class="line">P = <span class="built_in">plot</span>(<span class="built_in">rand</span>(<span class="number">4</span>));</span><br><span class="line">set(P,<span class="string">'Color'</span>,<span class="string">'red'</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="rectangle"><a href="#rectangle" class="headerlink" title="rectangle"></a>rectangle</h2><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/rectangle.html" target="_blank" rel="noopener">rectangle 创建带有尖角或圆角的矩形</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/ref/matlab.graphics.primitive.rectangle-properties.html" target="_blank" rel="noopener">Rectangle 属性</a></li></ul>]]></content>
    
    <summary type="html">
    
      😛
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="绘图" scheme="BestQwerty.github.io/categories/matlab/%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab函数之line</title>
    <link href="BestQwerty.github.io/2019/04/17/matlab%E5%87%BD%E6%95%B0%E4%B9%8Bline/"/>
    <id>BestQwerty.github.io/2019/04/17/matlab函数之line/</id>
    <published>2019-04-17T12:02:22.000Z</published>
    <updated>2019-04-17T12:03:48.050Z</updated>
    
    <content type="html"><![CDATA[<h1 id="line"><a href="#line" class="headerlink" title="line"></a>line</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/line.html" target="_blank" rel="noopener">line</a></li><li>调用格式:<ul><li><code>line(x,y)</code> 使用向量 x 和 y 中的数据在当前坐标区中绘制线条。如果 x 和 y 中有一个是矩阵或两者都是矩阵，则 line 将绘制多个线条。<strong>与 plot 函数不同，line 会向当前坐标区添加线条，而不删除其他图形对象或重置坐标区属性</strong>。 </li><li><code>line(x,y,z)</code> 在三维坐标中绘制线条。</li><li><code>line</code> 使用默认属性设置绘制一条从点 (0,0) 到 (1,1) 的线条(y = x,横纵坐标都是从0到1)。(就是直接输入line)</li><li><code>line(&#39;XData&#39;,x,&#39;YData&#39;,y)</code></li><li><code>line(&#39;XData&#39;,x,&#39;YData&#39;,y,&#39;ZData&#39;,z)</code></li><li><code>line(___,Name,Value)</code></li><li><code>line(ax,___)</code></li><li><code>pl = line(___)</code> </li></ul></li><li>栗子:<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%通过将 x 和 y 指定为矩阵来绘制两个线条。使用 line 绘制 y 的列对 x 的列的单独线条。</span></span><br><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">10</span>)';</span><br><span class="line">y = [<span class="built_in">sin</span>(x) <span class="built_in">cos</span>(x)];</span><br><span class="line">line(x,y)</span><br><span class="line"></span><br><span class="line"><span class="comment">%通过指定 x、y 和 z 的值，在三维坐标中绘制线条。使用 view(3) 将坐标区更改为三维视图。</span></span><br><span class="line">t = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">10</span>*<span class="built_in">pi</span>,<span class="number">200</span>);</span><br><span class="line">x = <span class="built_in">sin</span>(t);</span><br><span class="line">y = <span class="built_in">cos</span>(t);</span><br><span class="line">z = t;</span><br><span class="line">line(x,y,z)</span><br><span class="line">view(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      🙂
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="绘图" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/%E7%BB%98%E5%9B%BE/"/>
    
      <category term="line" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/%E7%BB%98%E5%9B%BE/line/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab运算符</title>
    <link href="BestQwerty.github.io/2019/04/14/matlab%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>BestQwerty.github.io/2019/04/14/matlab运算符/</id>
    <published>2019-04-14T13:21:12.000Z</published>
    <updated>2019-04-27T12:47:34.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><ul><li>Error:Matlab ||和&amp;&amp;运算符的操作数必须能够转换为逻辑标量值<ul><li>解决:||和&amp;&amp;为值运算， |与&amp;为向量运算，改为|与&amp;</li></ul></li></ul><ul><li><p>&amp;&amp;和||被称为&amp;和|的short circuit形式，</p><ul><li>A&amp;B<ul><li>（1）首先判断A的逻辑值，然后判断B的值，然后进行逻辑与的计算。</li><li>（2）A和B可以为矩阵（e.g. A=[1 0],B=[0 0]）。</li></ul></li><li>A&amp;&amp;B<ul><li>（1）首先判断A的逻辑值，如果A的值为假，就可以判断整个表达式的值为假，就不需要再判断B的值。</li><li>（2）A和B不能是矩阵，只能是标量。</li></ul></li><li>“|”与“||”同理。</li><li>A&amp;&amp;B 首先判断A的逻辑值，如果A的值为假，就可以判断整个表达式的值为假，就不需要再判断B的值。这种用法非常有用，如果A是一个计算量较小的函数，B是一个计算量较大的函数，那么首先判断A对减少计算量是有好处的。另外这也可以防止类似被0除的错误</li></ul></li><li><p>中括号[]的一个用法是，用来接收多个返回值/结果(数值或矩阵)。</p></li></ul><h2 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h2><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/operator-precedence.html" target="_blank" rel="noopener">运算符的优先级</a></li><li>AND 和 OR 运算符的优先级<ul><li>MATLAB <strong>始终将 &amp; 运算符的优先级指定为高于 | 运算符</strong>。尽管 MATLAB 通常按从左到右的顺序计算表达式，但表达式 a|b&amp;c 按 a|(b&amp;c) 形式计算。对于包含 &amp; 和 | 组合的语句，比较好的做法是使用括号显式指定期望的语句优先级。<br>该优先级规则同样适用于 &amp;&amp; 和 || 运算符。</li></ul></li></ul><h1 id="转载"><a href="#转载" class="headerlink" title="转载"></a>转载</h1><ul><li><a href="https://blog.csdn.net/treasuresss/article/details/39370253" target="_blank" rel="noopener">matlab中&amp;&amp;和&amp;的区别</a>_</li><li><a href="https://ww2.mathworks.cn/help/matlab/ref/logicaloperatorsshortcircuit.html" target="_blank" rel="noopener">逻辑运算符：短路 &amp;&amp; ||</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/ref/and.html" target="_blank" rel="noopener">and, &amp;(计算逻辑 AND)</a></li></ul>]]></content>
    
    <summary type="html">
    
      😐
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="基础" scheme="BestQwerty.github.io/categories/matlab/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="运算符" scheme="BestQwerty.github.io/categories/matlab/%E5%9F%BA%E7%A1%80/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之unique</title>
    <link href="BestQwerty.github.io/2019/04/14/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bunique/"/>
    <id>BestQwerty.github.io/2019/04/14/matlab常用函数之unique/</id>
    <published>2019-04-14T06:55:31.000Z</published>
    <updated>2019-04-27T12:48:07.407Z</updated>
    
    <content type="html"><![CDATA[<h1 id="unique"><a href="#unique" class="headerlink" title="unique"></a>unique</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/unique.html#bs_6vpd-1-setOrder" target="_blank" rel="noopener">unique</a></li><li><p><code>C = unique(A)</code> 返回与 A 中相同的数据，但是不包含重复项。<strong>C 已排序</strong>。</p><ul><li>如果 A 是表或时间表，则 unique 按排序顺序返回 A 中的唯一行。对于时间表，当确定行是否唯一时，unique 会考虑行时间和行值，并按行时间对输出时间表 C 排序。</li></ul></li><li><p><code>C = unique(A,setOrder)</code> 以特定顺序返回 A 的唯一值。setOrder 可以是 ‘sorted’（默认值）或 ‘stable’。</p></li><li>setOrder - 顺序标志<ul><li>顺序标志以 ‘sorted’ 或 ‘stable’ 指定，指示 C 中值（或行）的顺序。</li><li>‘sorted’ 按排定的顺序返回 C 中的值（或行）。例如：<code>C = unique([5 5 3 4],&#39;sorted&#39;)</code> 返回 <code>C = [3 4 5]</code>。</li><li>‘stable’ 按与 A 中相同的顺序返回 C 中的值（或行）。例如：<code>C = unique([5 5 3 4],&#39;stable&#39;)</code>返回 <code>C = [5 3 4]</code>。</li></ul></li></ul><ul><li><code>C = unique(A,occurrence)</code> 指定遇到重复值时应返回哪个索引。occurrence 可以是 ‘first’（默认值）或 ‘last’。</li><li>occurrence - 出现次数标志  ‘first’ （默认） | ‘last’<ul><li>出现次数标志，指定为 ‘first’ 或 ‘last’，指示在 A 中发现重复值时，ia 是包含第一个索引还是最后一个索引。 </li><li>‘last’<br>如果 A 中有重复的值（或行），则 ia 包含最后一次出现重复值的索引</li><li>‘first’<br>如果 A 中有重复的值（或行），则 ia 包含第一次出现重复值的索引</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      🙂
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="unique" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/unique/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之sum</title>
    <link href="BestQwerty.github.io/2019/04/13/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bsum/"/>
    <id>BestQwerty.github.io/2019/04/13/matlab常用函数之sum/</id>
    <published>2019-04-13T06:08:55.000Z</published>
    <updated>2019-04-13T06:13:53.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sum"><a href="#sum" class="headerlink" title="sum"></a>sum</h1><ul><li>其实<code>sum(a)</code>默认的是<code>sum(a,1)</code>,还有<code>sum(a,2)</code>。<ul><li><code>sum(a,1)</code>把矩阵的每一列分别加起来形成新的行矩阵。</li><li><code>sum(a,2)</code>把矩阵的每一行分别加起来形成新的列矩阵。</li></ul></li><li>提示：矩阵a是行矩阵时，<code>sum(a)</code>不再是<code>sum(a,1)</code>,而转换为了<code>sum(a,2)</code>。</li><li>求一个矩阵所有元素<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">close all;</span><br><span class="line">a = [<span class="number">1</span> <span class="number">2</span> </span><br><span class="line">    <span class="number">3</span> <span class="number">4</span></span><br><span class="line">    <span class="number">5</span> <span class="number">6</span>];</span><br><span class="line">sum(a)</span><br><span class="line">sum(sum(a))</span><br><span class="line">sum(a(:))</span><br><span class="line">sum(a(:, :)) <span class="comment">%a(:, :)与原矩阵相同</span></span><br><span class="line"><span class="comment">%answer</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">9</span>    <span class="number">12</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">21</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">21</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">9</span>    <span class="number">12</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      😃
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="sum" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/sum/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab矩阵操作补充</title>
    <link href="BestQwerty.github.io/2019/04/13/matlab%E7%9F%A9%E9%98%B5%E6%93%8D%E4%BD%9C%E8%A1%A5%E5%85%85/"/>
    <id>BestQwerty.github.io/2019/04/13/matlab矩阵操作补充/</id>
    <published>2019-04-13T04:01:11.000Z</published>
    <updated>2019-04-14T13:19:22.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><ul><li><p>删除例题2中第1、3、5、7行以及第3、8列。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">clc;clear;</span><br><span class="line">a=<span class="built_in">ones</span>(<span class="number">10</span>);  </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">10</span>    </span><br><span class="line">     a(<span class="built_in">i</span>,:)=<span class="built_in">i</span>; </span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"> a( <span class="number">1</span>:<span class="number">2</span>:<span class="number">7</span> , :)  = [ ];</span><br><span class="line"> a( : , [<span class="number">3</span> <span class="number">8</span>] ) = [ ]; <span class="comment">%体会[]与：的运用</span></span><br><span class="line"> a</span><br></pre></td></tr></table></figure></li><li><p><strong>矩阵与某数字相加</strong>，所有元素全部加上这个数字，构成新矩阵。数字相减也是一样</p></li><li><strong>数字与矩阵相乘</strong>，也是所有元素全部乘以这个数字，构成新矩阵。除法也是</li></ul><h1 id="创建、串联和扩展矩阵"><a href="#创建、串联和扩展矩阵" class="headerlink" title="创建、串联和扩展矩阵"></a>创建、串联和扩展矩阵</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/math/creating-and-concatenating-matrices.html" target="_blank" rel="noopener">创建、串联和扩展矩阵</a><h2 id="串联矩阵"><a href="#串联矩阵" class="headerlink" title="串联矩阵"></a>串联矩阵</h2></li><li>可以使用方括号将现有矩阵连接在一起。这种创建矩阵的方法称为串联。</li><li>要串联两个矩阵，它们的大小必须兼容。也就是说，水平串联矩阵时，它们的行数必须相同。垂直串联矩阵时，它们的列数必须相同。</li><li>串联矩阵的另一种方法是使用串联函数，如 horzcat，它可以水平串联两个兼容的输入矩阵。</li></ul><h2 id="扩展矩阵"><a href="#扩展矩阵" class="headerlink" title="扩展矩阵"></a>扩展矩阵</h2><ul><li><p>通过将一个或多个元素置于现有行和列索引边界之外，可以将它们添加到矩阵中。MATLAB 会<strong>自动</strong>用 <strong>0 填充矩阵</strong>，使其保持为矩形。例如，创建一个 2×3 矩阵，然后在 (3,4) 的位置插入一个元素，使矩阵增加一行一列。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">10</span>  <span class="number">20</span>  <span class="number">30</span>; <span class="number">60</span>  <span class="number">70</span>  <span class="number">80</span>]</span><br><span class="line"><span class="comment">%A = 2×3</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">20</span>    <span class="number">30</span></span><br><span class="line">    <span class="number">60</span>    <span class="number">70</span>    <span class="number">80</span></span><br><span class="line">A(<span class="number">3</span>,<span class="number">4</span>) = <span class="number">1</span> </span><br><span class="line"><span class="comment">%A = 3×4</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">20</span>    <span class="number">30</span>     <span class="number">0</span></span><br><span class="line">    <span class="number">60</span>    <span class="number">70</span>    <span class="number">80</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>可以通过在现有索引范围之外插入新矩阵来扩展其大小。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">10</span>  <span class="number">20</span>  <span class="number">30</span>; <span class="number">60</span>  <span class="number">70</span>  <span class="number">80</span>]</span><br><span class="line"><span class="comment">%A = 2×3</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">20</span>    <span class="number">30</span></span><br><span class="line">    <span class="number">60</span>    <span class="number">70</span>    <span class="number">80</span></span><br><span class="line">A(<span class="number">3</span>,<span class="number">4</span>) = <span class="number">1</span> </span><br><span class="line">A(<span class="number">4</span>:<span class="number">5</span>,<span class="number">5</span>:<span class="number">6</span>) = [<span class="number">2</span> <span class="number">3</span>; <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"><span class="comment">%A = 5×6</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">20</span>    <span class="number">30</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">    <span class="number">60</span>    <span class="number">70</span>    <span class="number">80</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">4</span>     <span class="number">5</span></span><br></pre></td></tr></table></figure></li><li><p>要重复扩展矩阵的大小，例如在 for 循环中，通常最好要为预计创建的最大矩阵预分配空间。如果没有预分配空间，MATLAB 必须在每次大小增加时分配内存，因此会降低操作速度。例如，通过将矩阵的元素初始化为零，预分配一个最多容纳 10000 行和 10000 列的矩阵。<code>A = zeros(10000,10000);</code><br><strong>如果之后还要预分配更多元素，可以通过在矩阵索引范围之外指定元素或将另一个预分配的矩阵与 A 串联来进行扩展。</strong></p><ul><li>就是先定义一个大小矩阵</li></ul></li></ul><h1 id="基本运算的兼容数组大小"><a href="#基本运算的兼容数组大小" class="headerlink" title="基本运算的兼容数组大小"></a>基本运算的兼容数组大小</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/compatible-array-sizes-for-basic-operations.html" target="_blank" rel="noopener">基本运算的兼容数组大小</a></li><li>大多数二元（两个输入）运算符和函数都支持具有兼容大小的数值数组。对于每个维度，如果两个输入的<strong>维度大小相同或其中一个为 1</strong>，则这些输入将具有兼容的大小。以最简单的情况为例，如果两个数组大小完全相同或其中一个为标量，则这两个数组大小是兼容的。执行按元素运算或函数时，MATLAB 会将大小兼容的数组隐式扩展为相同的大小。</li></ul><h2 id="大小不兼容的输入"><a href="#大小不兼容的输入" class="headerlink" title="大小不兼容的输入"></a>大小不兼容的输入</h2><ul><li>不兼容的输入的大小无法隐式扩展为相同的大小。例如：<ul><li>其中一个维度大小不相等，并且维度大小均不为 1。<ul><li>A: 3-by-2</li><li>B: 4-by-2</li></ul></li><li>两个长度不相同的非标量行向量。<ul><li>A: 1-by-3</li><li>B: 1-by-4</li></ul></li></ul></li></ul><h2 id="大小兼容的输入"><a href="#大小兼容的输入" class="headerlink" title="大小兼容的输入"></a>大小兼容的输入</h2><h3 id="二维输入"><a href="#二维输入" class="headerlink" title="二维输入"></a>二维输入</h3><ul><li>以下是一些具有兼容大小的标量、向量和矩阵的组合：<br><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlab大小兼容的输入.png" alt=""></li></ul><h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><ul><li>略</li></ul><h3 id="空数组"><a href="#空数组" class="headerlink" title="空数组"></a>空数组</h3><ul><li>对于空数组或维度大小为零的数组，规则是相同的。不等于 1 的维度大小确定输出的大小。这意味着，<strong>大小为零的维度必须与另一个数组中大小为 1 或 0 的维度进行配对，并且输出的维度大小为 0。</strong><ul><li>A: 1-by-0     </li><li>B: 3-by-1</li><li>Result: 3-by-0</li></ul></li></ul><h2 id="attention"><a href="#attention" class="headerlink" title="attention"></a>attention</h2><ul><li>要简化向量-矩阵运算，请对维函数（例如 sum、mean、min 以及其他）使用隐式扩展。</li><li>行向量和列向量相加<ul><li>行向量和列向量的大小兼容，当您对它们执行运算时，结果为一个矩阵。</li></ul></li></ul><h1 id="使用关系运算符进行数组比较"><a href="#使用关系运算符进行数组比较" class="headerlink" title="使用关系运算符进行数组比较"></a>使用关系运算符进行数组比较</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/array-comparison-with-relational-operators.html" target="_blank" rel="noopener">文档</a></li><li>关系运算符使用“小于”、“大于”和“不等于”等运算符对操作数进行定量比较。- 关系比较的结果是一个逻辑数组，指示关系为 true 的位置。</li></ul><h2 id="数组比较"><a href="#数组比较" class="headerlink" title="数组比较"></a>数组比较</h2><h3 id="数值数组"><a href="#数值数组" class="headerlink" title="数值数组"></a>数值数组</h3><ul><li>关系运算符会在两个数组之间执行<strong>按元素比较</strong>。<strong>数组的大小必须兼容以便于执行运算。执行计算时，具有兼容大小的数组会隐式扩展为相同的大小</strong>。以最简单的情况为例，两个操作数为大小相同的数组，或者其中一个操作数为标量。</li><li><p>将一个 1×N 行向量与一个 M×1 列向量进行比较，则 MATLAB 会在执行比较之前将每个向量都扩展为一个 M×N 矩阵。生成的矩阵包含这些向量中元素的每个组合的比较结果。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A = <span class="number">1</span>:<span class="number">3</span></span><br><span class="line"><span class="comment">%A =</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">B = [<span class="number">2</span>; <span class="number">3</span>]</span><br><span class="line"><span class="comment">%B =</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">A &gt;= B</span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>关系运算符可用于其中有任一维度大小为零的数组，只要两个数组的大小兼容。</p></li></ul><h1 id="数组索引"><a href="#数组索引" class="headerlink" title="数组索引"></a>数组索引</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/math/array-indexing.html" target="_blank" rel="noopener">文档</a><br>-<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>; <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span>; <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span>; <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span>]</span><br><span class="line"><span class="comment">%A = 4×4</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">9</span>    <span class="number">10</span>    <span class="number">11</span>    <span class="number">12</span></span><br><span class="line">    <span class="number">13</span>    <span class="number">14</span>    <span class="number">15</span>    <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%可以在一个向量中指定多个元素的索引，从而一次引用多个元素。例如，访问 A 的第二行中的第一个和第三个元素。</span></span><br><span class="line">r = A(<span class="number">2</span>,[<span class="number">1</span> <span class="number">3</span>])</span><br><span class="line"><span class="comment">%r = 1×2</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">7</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="使用逻辑值进行索引"><a href="#使用逻辑值进行索引" class="headerlink" title="使用逻辑值进行索引"></a>使用逻辑值进行索引</h2><ul><li>使用 true 和 false 逻辑指示符也可以对数组进行索引，在处理条件语句时尤其便利</li><li><p>矩阵 A 中的元素是否小于另一个矩阵 B 中的对应元素。当 A 中的元素小于 B 中的对应元素时，小于号运算符返回元素为 1 的逻辑数组。 </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">6</span></span><br><span class="line">    <span class="number">4</span> <span class="number">3</span> <span class="number">6</span>];</span><br><span class="line">B = [<span class="number">0</span> <span class="number">3</span> <span class="number">7</span></span><br><span class="line">    <span class="number">3</span> <span class="number">7</span> <span class="number">5</span>];</span><br><span class="line">ind = A&lt;B</span><br><span class="line"><span class="comment">%现在已经知道满足条件的元素的位置，可以使用 ind 作为索引数组来检查各个值。MATLAB 将 ind 中值 1 的位置与 A 和 B 中的对应元素进行匹配，并在列向量中列出它们的值。</span></span><br><span class="line">Avals = A(ind)</span><br><span class="line">Bvals = B(ind)</span><br><span class="line"></span><br><span class="line"><span class="comment">%ans</span></span><br><span class="line">ind =</span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">Avals =</span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">Bvals =</span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">7</span></span><br></pre></td></tr></table></figure></li><li><p>MATLAB 中的 is 函数(前面带is的函数)还<strong>返回逻辑数组</strong>，指示输入中的哪些元素满足特定条件。</p></li></ul><h1 id="查找符合条件的数组元素"><a href="#查找符合条件的数组元素" class="headerlink" title="查找符合条件的数组元素"></a>查找符合条件的数组元素</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/find-array-elements-that-meet-a-condition.html" target="_blank" rel="noopener">文档</a></li></ul><h2 id="应用单个条件"><a href="#应用单个条件" class="headerlink" title="应用单个条件"></a>应用单个条件</h2><ul><li><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a = [<span class="number">1</span> <span class="number">2</span></span><br><span class="line">    <span class="number">3</span> <span class="number">4</span> </span><br><span class="line">    <span class="number">5</span> <span class="number">6</span></span><br><span class="line">    <span class="number">7</span> <span class="number">8</span>];</span><br><span class="line">b = a &gt; <span class="number">5</span></span><br><span class="line">a(b)</span><br><span class="line"><span class="built_in">i</span> = <span class="built_in">find</span>(a &gt; <span class="number">5</span>)</span><br><span class="line">a(<span class="built_in">i</span>)</span><br><span class="line"><span class="comment">%answer</span></span><br><span class="line">b =</span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"><span class="built_in">i</span> =</span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br></pre></td></tr></table></figure></li></ul><p>结果为一个逻辑矩阵。b 中的每个值都表示为逻辑值 1 (true) 或逻辑值 0 (false) 的状态，以指示 a 的对应元素是否符合条件 a&gt;5。</p><ul><li>虽然 b 包含有关 a 中哪些元素大于 5 的信息，但它不会指出这些元素的具体值是多少。您可以使用 b 创建 a 的索引，而不必逐元素比较这两个矩阵。</li><li>结果为一个由 a 中大于 5 的元素组成的列向量。由于 b 为逻辑矩阵，因此该运算称为<strong>逻辑索引</strong></li><li>find函数结果为一个由线性索引组成的列向量。每个索引描述a 中一个大于5的元素的位置，因此实际上 a(i) 与 a(b) 返回的结果相同。差别在于 a(b) 使用逻辑索引，而 a(i) 使用<strong>线性索引</strong>。</li></ul><h2 id="应用多个条件"><a href="#应用多个条件" class="headerlink" title="应用多个条件"></a>应用多个条件</h2><ul><li>可以使用逻辑 and、or 和 not 运算符将任意多个条件应用于一个数组；条件的数量并不局限于一个或两个。</li><li><p>逻辑索引</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a = [<span class="number">1</span> <span class="number">2</span></span><br><span class="line">    <span class="number">3</span> <span class="number">4</span> </span><br><span class="line">    <span class="number">5</span> <span class="number">6</span></span><br><span class="line">    <span class="number">7</span> <span class="number">8</span></span><br><span class="line">    <span class="number">9</span> <span class="number">10</span>];</span><br><span class="line">b = a(a &gt; <span class="number">5</span>&amp; ~<span class="built_in">mod</span>(a, <span class="number">2</span>))</span><br><span class="line">c = a(a &gt; <span class="number">5</span>&amp; ~<span class="built_in">mod</span>(a, <span class="number">2</span>)&amp;a ~= <span class="number">8</span>)</span><br><span class="line">t = <span class="built_in">find</span>(a &gt; <span class="number">5</span>&amp; ~<span class="built_in">mod</span>(a, <span class="number">2</span>)&amp;a ~= <span class="number">8</span>);</span><br><span class="line">d = a(t)</span><br><span class="line">e = a(a &gt; <span class="number">2</span>&amp;a &lt;<span class="number">5</span>)</span><br><span class="line">f = a(<span class="number">2</span>&lt;a&lt;<span class="number">5</span>)</span><br><span class="line"><span class="comment">%结果为 a 中同时符合这两个条件的元素的列表。</span></span><br><span class="line"><span class="comment">%务必使用单独的语句指定每个条件，并用逻辑运算符连接起来。</span></span><br><span class="line"><span class="comment">%例如，不能通过 a(2 &lt; a &lt; 5) 指定以上条件，因为其计算结果为 A(2&lt;A | A&lt;5)。</span></span><br><span class="line"><span class="comment">%ans</span></span><br><span class="line">b =</span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line">    <span class="number">10</span></span><br><span class="line">c =</span><br><span class="line">     <span class="number">6</span></span><br><span class="line">    <span class="number">10</span></span><br><span class="line">d =</span><br><span class="line">     <span class="number">6</span></span><br><span class="line">    <span class="number">10</span></span><br><span class="line">e =</span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">f =</span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line">     <span class="number">7</span></span><br><span class="line">     <span class="number">9</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line">    <span class="number">10</span></span><br></pre></td></tr></table></figure></li><li><p>查找 a 中大于 5 且为偶数的元素。</p></li><li>结果为 a 中大于5的所有偶数元素的列表。<strong>使用逻辑 NOT 运算符 ~ 将矩阵 mod(A,2) 转换为逻辑矩阵</strong>，并在可被 2 整除的元素位置放置逻辑值 1 (true)。</li></ul><h2 id="替换符合条件的值"><a href="#替换符合条件的值" class="headerlink" title="替换符合条件的值"></a>替换符合条件的值</h2><ul><li>有时，同时更改多个现有数组元素的值会很有用。将逻辑索引与简单的赋值语句一起使用，可替换数组中符合条件的值。</li><li><p>将 a 中大于 10 的所有值替换为数值 10。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">clc,clear;</span><br><span class="line">a = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">    <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line">    <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span></span><br><span class="line">    <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span>];</span><br><span class="line">a(a&gt;<span class="number">10</span>) = <span class="number">10</span></span><br><span class="line"><span class="comment">%将 a 中不等于 10 的所有值替换为 NaN 值。</span></span><br><span class="line">a(a~=<span class="number">10</span>) = <span class="built_in">nan</span></span><br><span class="line"><span class="comment">%将 a中的所有 NaN 值替换为 0，并应用逻辑 NOT 运算符 ~A。</span></span><br><span class="line">a(<span class="built_in">isnan</span>(a)) = <span class="number">0</span></span><br><span class="line">c = ~a</span><br><span class="line"></span><br><span class="line"><span class="comment">%ans</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">9</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">a =</span><br><span class="line">   NaN   NaN   NaN   NaN</span><br><span class="line">   NaN   NaN   NaN   NaN</span><br><span class="line">   NaN    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">a =</span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span>    <span class="number">10</span></span><br><span class="line">c =</span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>生成的矩阵用逻辑值 1 (true) 取代 NaN 值，用逻辑值 0 (false) 取代 10。逻辑 NOT 运算 ~a 将数值数组转换为逻辑数组，因此 a&amp;c 返回逻辑值 0 (false) 的矩阵，a|c 返回逻辑值 1 (true) 的矩阵。</p></li></ul><h1 id="数组与矩阵运算"><a href="#数组与矩阵运算" class="headerlink" title="数组与矩阵运算"></a>数组与矩阵运算</h1><ul><li>注意matlab版本</li><li>MATLAB® 具有两种不同类型的算术运算：数组运算和矩阵运算。您可以使用这些算术运算来执行数值计算，例如两数相加、计算数组元素的给定次幂或两个矩阵相乘。</li><li>矩阵运算遵循线性代数的法则。与之不同，数组运算则是执行逐元素运算并支持多维数组。句点字符 (.) 将数组运算与矩阵运算区别开来。但是，由于矩阵运算和数组运算在加法和减法的运算上相同，因此没有必要使用字符组合 .+ 和 .-。</li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_prog/array-vs-matrix-operations.html" target="_blank" rel="noopener">数组与矩阵运算</a></li></ul><h2 id="数组运算"><a href="#数组运算" class="headerlink" title="数组运算"></a>数组运算</h2><ul><li>数组运算可针对向量、矩阵和多维数组的对应元素执行逐元素运算。如果操作数的大小相同，则第一个操作数中的每个元素都会与第二个操作数中同一位置的元素匹配。如果操作数的大小兼容，则每个输入都会根据需要进行隐式扩展以匹配另一个输入的大小。</li><li><p>如果一个操作数是标量，而另一个操作数不是标量，则 MATLAB 会将该标量隐式扩展为与另一个操作数具有相同的大小。例如，您可以计算一个标量和一个矩阵的按元素乘积。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"><span class="comment">%A =</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line"><span class="number">3.</span>*A</span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure></li><li><p>如果从一个 3×3 矩阵中减去一个 1×3 向量，隐式扩展仍然会起作用，因为它们的大小是兼容的。当您执行减法运算时，该向量将隐式扩展为一个 3×3 矩阵。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>; <span class="number">2</span> <span class="number">2</span> <span class="number">2</span>; <span class="number">3</span> <span class="number">3</span> <span class="number">3</span>]</span><br><span class="line"><span class="comment">%A =</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">2</span>     <span class="number">2</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">3</span>     <span class="number">3</span></span><br><span class="line">m = [<span class="number">2</span> <span class="number">4</span> <span class="number">6</span>]</span><br><span class="line"><span class="comment">%m =</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">4</span>     <span class="number">6</span></span><br><span class="line">A - m</span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line">    <span class="number">-1</span>    <span class="number">-3</span>    <span class="number">-5</span></span><br><span class="line">     <span class="number">0</span>    <span class="number">-2</span>    <span class="number">-4</span></span><br><span class="line">     <span class="number">1</span>    <span class="number">-1</span>    <span class="number">-3</span></span><br></pre></td></tr></table></figure></li><li><p>行向量和列向量的大小兼容。如果您将一个 1×3 向量与一个 2×1 向量相加，则每个向量都会在 MATLAB 执行按元素加法之前隐式扩展为一个 2×3 矩阵。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"><span class="comment">%x =</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">y = [<span class="number">10</span>; <span class="number">15</span>]</span><br><span class="line"><span class="comment">%y =</span></span><br><span class="line">    <span class="number">10</span></span><br><span class="line">    <span class="number">15</span></span><br><span class="line">x + y</span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line">    <span class="number">11</span>    <span class="number">12</span>    <span class="number">13</span></span><br><span class="line">    <span class="number">16</span>    <span class="number">17</span>    <span class="number">18</span></span><br></pre></td></tr></table></figure></li><li><p>如果两个操作数的大小不兼容，则将会收到错误消息。</p></li></ul><h2 id="矩阵运算"><a href="#矩阵运算" class="headerlink" title="矩阵运算"></a>矩阵运算</h2><ul><li>矩阵运算遵循<strong>线性代数的法则</strong>，与多维数组不兼容</li></ul>]]></content>
    
    <summary type="html">
    
      😏
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="矩阵" scheme="BestQwerty.github.io/categories/matlab/%E7%9F%A9%E9%98%B5/"/>
    
      <category term="基础" scheme="BestQwerty.github.io/categories/matlab/%E7%9F%A9%E9%98%B5/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>maltab常用函数之isempty</title>
    <link href="BestQwerty.github.io/2019/04/13/maltab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bisempty/"/>
    <id>BestQwerty.github.io/2019/04/13/maltab常用函数之isempty/</id>
    <published>2019-04-13T03:11:58.000Z</published>
    <updated>2019-04-14T08:40:43.627Z</updated>
    
    <content type="html"><![CDATA[<h1 id="isempty"><a href="#isempty" class="headerlink" title="isempty"></a>isempty</h1><ul><li><a href="https://ww2.mathworks.cn/help/matlab/ref/isempty.html?lang=en" target="_blank" rel="noopener">文档</a></li><li>Syntax: <code>TF = isempty(A)</code><ul><li>Description<ul><li><code>TF = isempty(A)</code> returns logical 1 (true) if A is empty, and logical 0 (false) otherwise. An empty array, table, or timetable has at least one dimension with length 0, such as 0-by-0 or 0-by-5.</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      🙂
    
    </summary>
    
      <category term="matlab" scheme="BestQwerty.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="isempty" scheme="BestQwerty.github.io/categories/matlab/%E5%87%BD%E6%95%B0/isempty/"/>
    
    
      <category term="matlab" scheme="BestQwerty.github.io/tags/matlab/"/>
    
  </entry>
  
</feed>
