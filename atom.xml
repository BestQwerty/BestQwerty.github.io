<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LjJiaJun&#39; Home</title>
  
  <subtitle>书青春 - 话人生 | Coding - Thinking - Acting</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="ctguljj.github.io/"/>
  <updated>2019-04-04T01:36:52.708Z</updated>
  <id>ctguljj.github.io/</id>
  
  <author>
    <name>LjJiaJun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>matlab常用函数之rem</title>
    <link href="ctguljj.github.io/2019/04/04/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Brem/"/>
    <id>ctguljj.github.io/2019/04/04/matlab常用函数之rem/</id>
    <published>2019-04-04T01:12:04.000Z</published>
    <updated>2019-04-04T01:36:52.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h1><ul><li>调用格式:<code>r = rem(a,b)</code></li><li>r = rem(a,b)返回a除以b后的余数，其中a为被除数，b为除数。这个操作在概念上等于r = a - b.*fix(a./b)，它使用与mod函数不同的舍入。rem函数遵循rem(a,0)为NaN的约定。</li><li><p>例题:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span>:<span class="number">5</span>;</span><br><span class="line">b = <span class="number">3</span>;</span><br><span class="line">r = <span class="built_in">rem</span>(a,b)</span><br><span class="line">r =</span><br><span class="line"> <span class="number">1</span>     <span class="number">2</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p><code>rem(a,b)</code>finds the remainder after division. If b &lt;&gt; 0, then <code>rem(a,b) = a - fix(a/b)*b</code>. If b = 0 or b = Inf or b = -Inf, then rem returns NaN.<br>The rem function does not support complex numbers: all values must be real numbers.<br>To find the remainder after division of polynomials, use quorem.</p></li><li>当正数与负数取余时，当得到的余数结果的符号希望跟除数(x)一样，用<code>rem()</code>函数；当得到的余数结果的符号希望跟被除数(y)一样，用<code>mod()</code>函数</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;rem&quot;&gt;&lt;a href=&quot;#rem&quot; class=&quot;headerlink&quot; title=&quot;rem&quot;&gt;&lt;/a&gt;rem&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;调用格式:&lt;code&gt;r = rem(a,b)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;r = rem(a,b)返回a除以b后的
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="rem" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/rem/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab函数之rand及其相关函数</title>
    <link href="ctguljj.github.io/2019/04/03/matlab%E5%87%BD%E6%95%B0%E4%B9%8Brand/"/>
    <id>ctguljj.github.io/2019/04/03/matlab函数之rand/</id>
    <published>2019-04-03T13:42:32.000Z</published>
    <updated>2019-04-03T14:34:07.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rand"><a href="#rand" class="headerlink" title="rand"></a>rand</h1><ul><li>matlab中通过rand函数产生的是介于0到1(不包括1)之间的伪随机数 </li><li><code>X = rand</code>范围(0,1).</li><li><code>X = rand(n)</code>表示产生一个n×n的随机矩阵，n必须是整数,否则会报错。</li><li><code>X = rand(sz1,...,szN)</code></li><li><code>X = rand(sz)</code></li><li><code>X = rand(___,typename)</code></li><li><code>X = rand(___,&#39;like&#39;,p)</code></li><li>可以与取整函数搭配使用</li><li>为了使每次执行rand函数时产生和之前不相同的一组伪随机数，通常需要初始化随机数种子。方法很多， 常见的一种是在写m文件时，在程序的开头写：<code>rand(&#39;state&#39;,sum(100*clock))</code> 定义一个随时间变化的初值。</li></ul><h1 id="randi"><a href="#randi" class="headerlink" title="randi"></a>randi</h1><ul><li>randi函数产生均匀分布的伪随机整数(Uniformly distributed pseudorandom integers)</li><li><code>X = randi(imax)</code>返回一个介于1到imax的伪随机整数</li><li><code>X = randi(imax,n)</code>返回一个在[1,imax]范围内的n*n的伪随机整数矩阵</li><li><code>X = randi(imax,sz1,...,szN)</code></li><li><code>X = randi(imax,sz)</code></li><li><code>X = randi(imax,classname)</code></li><li><code>X = randi(imax,n,classname)</code></li><li><code>X = randi(imax,sz1,...,szN,classname)</code></li><li><code>X = randi(imax,sz,classname)</code></li><li><code>X = randi(imax,&#39;like&#39;,p)</code></li><li><code>X = randi(imax,n,&#39;like&#39;,p)</code></li><li><code>X = randi(imax,sz1,...,szN,&#39;like&#39;,p)</code></li><li><code>X = randi(imax,sz,&#39;like&#39;,p)</code></li><li><code>X = randi([imin,imax],___)</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;rand&quot;&gt;&lt;a href=&quot;#rand&quot; class=&quot;headerlink&quot; title=&quot;rand&quot;&gt;&lt;/a&gt;rand&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;matlab中通过rand函数产生的是介于0到1(不包括1)之间的伪随机数 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;X 
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="rand及其相关函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/rand%E5%8F%8A%E5%85%B6%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab常用函数之num2str与str2num</title>
    <link href="ctguljj.github.io/2019/04/03/matlab%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%B9%8Bnum2str%E4%B8%8Estr2num/"/>
    <id>ctguljj.github.io/2019/04/03/matlab常用函数之num2str与str2num/</id>
    <published>2019-04-03T12:08:27.000Z</published>
    <updated>2019-04-03T12:24:47.622Z</updated>
    
    <content type="html"><![CDATA[<h1 id="num2str"><a href="#num2str" class="headerlink" title="num2str"></a>num2str</h1><ul><li>调用格式:<ul><li><code>s = num2str(A)</code></li><li><code>s = num2str(A,precision)</code>precision: Maximum number of significant digits.把数组A转换成字符串形式表示，precision表示精度， 比如precision为3表示保留最多3位有效数字</li><li><code>s = num2str(A,formatSpec)</code> formatspec: Format of output fields.按format指定格式进行格式化转换，通常’%11.4g’是默认的。</li></ul></li></ul><h1 id="str2num"><a href="#str2num" class="headerlink" title="str2num"></a>str2num</h1><ul><li>调用格式:<ul><li><code>x = str2num(&#39;str&#39;)</code>str是一个ASCII字符串表示的数值， 这种调用格式把字符串转换成数值。str也可以是一个字符串矩阵， 这种情况下， 字符串矩阵被转换成一个数值矩阵。</li><li><code>[x, status] = str2num(&#39;str&#39;)</code>附加的返回值status用于获取转换状态， status等于逻辑1表示转换成功， 等于0表示转换失败。<ul><li>例题：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> str2num(&apos;2 4 6 8&apos;)              % Separate with spaces.</span><br><span class="line"> ans =</span><br><span class="line">       2     4     6     8</span><br><span class="line"></span><br><span class="line"> str2num(&apos;2,4,6,8&apos;)              % Separate with commas.</span><br><span class="line"> ans =</span><br><span class="line">      2     4     6     8</span><br><span class="line"></span><br><span class="line">  str2num(&apos;[2 4 6 8]&apos;)            % Enclose in brackets.</span><br><span class="line"> ans =</span><br><span class="line">      2     4     6     8 </span><br><span class="line">str2num(&apos;2; 4; 6; 8&apos;)</span><br><span class="line">ans =</span><br><span class="line">    2</span><br><span class="line">    4</span><br><span class="line">    6</span><br><span class="line">    8</span><br><span class="line">And now a 2-by-2 matrix:</span><br><span class="line"></span><br><span class="line">str2num(&apos;2 4; 6 8&apos;)</span><br><span class="line">ans =</span><br><span class="line">    2     4</span><br><span class="line">    6     8</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;num2str&quot;&gt;&lt;a href=&quot;#num2str&quot; class=&quot;headerlink&quot; title=&quot;num2str&quot;&gt;&lt;/a&gt;num2str&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;调用格式:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s = num2str(A)&lt;/code&gt;&lt;/l
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="str2num与num2str" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/str2num%E4%B8%8Enum2str/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>typora</title>
    <link href="ctguljj.github.io/2019/04/03/typora/"/>
    <id>ctguljj.github.io/2019/04/03/typora/</id>
    <published>2019-04-03T02:00:00.000Z</published>
    <updated>2019-04-03T04:00:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="typora简介"><a href="#typora简介" class="headerlink" title="typora简介"></a>typora简介</h1><ul><li><p>无论是Word中带有加粗等格式的文字，还是Excel中的表格，一旦黏贴到Typora中，都会被自动转化为对应的Markdown格式，所以你再也不用担心每次重新设置格式的麻烦了——Markdown最麻烦的表格也可以在Excel中做完再贴入生成了。</p></li><li><p><strong>专注模式</strong>，也就是除了正在编辑的那行文字，文章上下其余的内容全部变成灰色，不吸引你的视线，不干扰你的思维。</p><ul><li><strong>与专注模式搭配的话，当然还是全屏模式(F11)</strong>最好啦　qwq</li></ul></li><li><p><strong>打字机模式（Typewriter Mode）</strong>:开启这种模式后，Typora 的光标所在行会始终保持在屏幕中间，这样你码字时眼睛可以一直正对着屏幕中间</p></li></ul><h2 id="打开-关闭源代码模式"><a href="#打开-关闭源代码模式" class="headerlink" title="打开/关闭源代码模式"></a>打开/关闭源代码模式</h2><ul><li><blockquote><p>typora默认界面是实时预览的模式,而这也是与其他Markdown软件较大的区别.切换成源代码模式可以更方便地修改内容</p></blockquote><ul><li>方法1:点击左下角的<code>&lt;/&gt;</code>(启用/关闭源代码模式)</li><li>方法2:Ctrl+/</li></ul></li></ul><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><ul><li>无序列表：输入-之后输入空格</li><li>有序列表：输入数字+“.”之后输入空格</li><li>任务列表：-[空格]空格 文字</li><li>标题：ctrl+数字</li><li>表格：ctrl+t</li><li>生成目录：[TOC]按回车</li><li>选中一整行：ctrl+l</li><li>选中单词：ctrl+d</li><li>选中相同格式的文字：ctrl+e</li><li>跳转到文章开头：ctrl+home</li><li>跳转到文章结尾：ctrl+end</li><li>搜索：ctrl+f</li><li>替换：ctrl+h</li><li>引用：输入&gt;之后输入空格</li><li>代码块：ctrl+alt+f</li><li>加粗：ctrl+b</li><li>倾斜：ctrl+i</li><li>下划线：ctrl+u</li><li>删除线：alt+shift+5</li><li>插入图片：直接拖动到指定位置即可或者ctrl+shift+i</li><li>插入链接：ctrl+k</li></ul><p>   ​        </p><p>参考文献：<a href="https://www.jianshu.com/p/602f6ecf48fd" target="_blank" rel="noopener">typora</a></p><p><a href="http://wwwbuild.net/seekingbeta_earl/358745.html" target="_blank" rel="noopener">typora2</a></p><p><a href="https://blog.csdn.net/it_guang/article/details/53456026" target="_blank" rel="noopener">typora快捷键</a></p><p><a href="https://blog.csdn.net/lzykevin/article/details/83276555" target="_blank" rel="noopener">typora界面入门</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;typora简介&quot;&gt;&lt;a href=&quot;#typora简介&quot; class=&quot;headerlink&quot; title=&quot;typora简介&quot;&gt;&lt;/a&gt;typora简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;无论是Word中带有加粗等格式的文字，还是Excel中的表格，一旦黏贴到T
      
    
    </summary>
    
      <category term="markdown编辑器" scheme="ctguljj.github.io/categories/markdown%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
      <category term="typora" scheme="ctguljj.github.io/categories/markdown%E7%BC%96%E8%BE%91%E5%99%A8/typora/"/>
    
    
      <category term="markdown编辑器" scheme="ctguljj.github.io/tags/markdown%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>markdownpad2使用技巧</title>
    <link href="ctguljj.github.io/2019/04/03/markdownpad2%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>ctguljj.github.io/2019/04/03/markdownpad2使用技巧/</id>
    <published>2019-04-03T02:00:00.000Z</published>
    <updated>2019-04-03T04:01:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="markdownpad2常用快捷键"><a href="#markdownpad2常用快捷键" class="headerlink" title="markdownpad2常用快捷键"></a>markdownpad2常用快捷键</h1><ul><li>Ctrl + I ： 斜体</li><li>Ctrl + B ： 粗体</li><li>Ctrl + G ： 图片</li><li>Ctrl + Q ： 引用</li><li>Ctrl + 1 ： 标题 1</li><li>Ctrl + 2 ： 标题 2</li><li>Ctrl + 3 ： 标题 3</li><li>Ctrl + K ： 代码块</li><li>Ctrl + L ： 超链接</li><li>Ctrl + T ： 时间戳</li><li>Ctrl + U ： 无序列表</li><li>Ctrl + R ： 水平标尺</li><li>F4 ： 启用水平布局</li><li>F5 ： 启用实时预览</li><li>F6 ： 在浏览器中预览</li><li>Ctrl + Shift + O ： 有序列表</li></ul><p>​                           </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;markdownpad2常用快捷键&quot;&gt;&lt;a href=&quot;#markdownpad2常用快捷键&quot; class=&quot;headerlink&quot; title=&quot;markdownpad2常用快捷键&quot;&gt;&lt;/a&gt;markdownpad2常用快捷键&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Ctrl
      
    
    </summary>
    
      <category term="markdown编辑器" scheme="ctguljj.github.io/categories/markdown%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
      <category term="markdownpad2" scheme="ctguljj.github.io/categories/markdown%E7%BC%96%E8%BE%91%E5%99%A8/markdownpad2/"/>
    
    
      <category term="markdown编辑器" scheme="ctguljj.github.io/tags/markdown%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>对matlab中diag函数的补充</title>
    <link href="ctguljj.github.io/2019/03/31/%E5%AF%B9matlab%E4%B8%ADdiag%E5%87%BD%E6%95%B0%E7%9A%84%E8%A1%A5%E5%85%85/"/>
    <id>ctguljj.github.io/2019/03/31/对matlab中diag函数的补充/</id>
    <published>2019-03-31T13:43:27.000Z</published>
    <updated>2019-03-31T13:51:03.314Z</updated>
    
    <content type="html"><![CDATA[<h1 id="diag函数的补充"><a href="#diag函数的补充" class="headerlink" title="diag函数的补充"></a>diag函数的补充</h1><ul><li>A是矩阵，那么diag(A)得到的是主对角线上的元素构成的列向量，如果A是行列向量，那么得到的是矩阵（A为对角线元素，其他是0）</li><li><code>X = diag(v,k)</code><br>其中v是一个含有n个元素的向量，该调用格式可以构造一个n+abs(k)阶的方阵X。并把v作为方阵X的第k条对角线（k大于0，表示主对角线上方的第k条对角线，k小于0表示主对角线下侧的第k条对角线，k等于0表示主对线）。</li></ul><ul><li><code>X = diag(v)</code><br>等价于<code>X = diag(v,0)</code></li><li><code>v = diag(X,k)</code><br>以向量形式返回矩阵X中第k条对角线上的元素。</li><li><p><code>v = diag(X)</code><br>等价于<code>v = diag(X, 0)</code></p></li><li><p><code>D = diag(v)</code></p></li><li><code>D = diag(v,k)</code> 如果v为向量，那么当k&gt;0时，D就是v为主对角线以下第k条对角线构成的矩阵，其它元素均为0</li><li><code>x = diag(A)</code> </li><li><code>x = diag(A,k)</code>如果A为矩阵，那么当k&gt;0时，x就是矩阵A主对角线上第k条对角线上的元素构成的列向量 </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;diag函数的补充&quot;&gt;&lt;a href=&quot;#diag函数的补充&quot; class=&quot;headerlink&quot; title=&quot;diag函数的补充&quot;&gt;&lt;/a&gt;diag函数的补充&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;A是矩阵，那么diag(A)得到的是主对角线上的元素构成的列向量，如果A
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="函数" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/"/>
    
      <category term="diag" scheme="ctguljj.github.io/categories/matlab/%E5%87%BD%E6%95%B0/diag/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab实用命令</title>
    <link href="ctguljj.github.io/2019/03/31/matlab%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>ctguljj.github.io/2019/03/31/matlab实用命令/</id>
    <published>2019-03-31T07:33:32.000Z</published>
    <updated>2019-03-31T07:39:07.229Z</updated>
    
    <content type="html"><![CDATA[<ul><li>在命令行敲入 <code>dbstop if error</code><br>如果运行出现错误，matlab会自动停在出错的那行，并且保存所有相关变量。再也不用设断点了有没有！！！<ul><li>若要取消，用<code>dbclear if error</code></li><li>现在版本在断点选项里自带</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;在命令行敲入 &lt;code&gt;dbstop if error&lt;/code&gt;&lt;br&gt;如果运行出现错误，matlab会自动停在出错的那行，并且保存所有相关变量。再也不用设断点了有没有！！！&lt;ul&gt;
&lt;li&gt;若要取消，用&lt;code&gt;dbclear if error&lt;/co
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="实用命令" scheme="ctguljj.github.io/categories/matlab/%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>第五周周总结</title>
    <link href="ctguljj.github.io/2019/03/30/%E7%AC%AC%E4%BA%94%E5%91%A8%E5%91%A8%E6%80%BB%E7%BB%93/"/>
    <id>ctguljj.github.io/2019/03/30/第五周周总结/</id>
    <published>2019-03-30T11:58:26.000Z</published>
    <updated>2019-03-30T12:12:31.069Z</updated>
    
    <summary type="html">
    
      something about myself
    
    </summary>
    
      <category term="五日三省吾身" scheme="ctguljj.github.io/categories/%E4%BA%94%E6%97%A5%E4%B8%89%E7%9C%81%E5%90%BE%E8%BA%AB/"/>
    
      <category term="周总结" scheme="ctguljj.github.io/categories/%E4%BA%94%E6%97%A5%E4%B8%89%E7%9C%81%E5%90%BE%E8%BA%AB/%E5%91%A8%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="吾日三省吾身" scheme="ctguljj.github.io/tags/%E5%90%BE%E6%97%A5%E4%B8%89%E7%9C%81%E5%90%BE%E8%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>matlab代码练习</title>
    <link href="ctguljj.github.io/2019/03/30/matlab%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/"/>
    <id>ctguljj.github.io/2019/03/30/matlab代码练习/</id>
    <published>2019-03-30T07:22:54.000Z</published>
    <updated>2019-03-30T12:18:52.224Z</updated>
    
    <content type="html"><![CDATA[<h1 id="S"><a href="#S" class="headerlink" title="S"></a>S</h1><p><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlabtimu.jpg" alt=""><br><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlabtimudaan.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;S&quot;&gt;&lt;a href=&quot;#S&quot; class=&quot;headerlink&quot; title=&quot;S&quot;&gt;&lt;/a&gt;S&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/mast
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="代码练习" scheme="ctguljj.github.io/categories/matlab/%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>数据结构栈</title>
    <link href="ctguljj.github.io/2019/03/30/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A0%88/"/>
    <id>ctguljj.github.io/2019/03/30/数据结构栈/</id>
    <published>2019-03-30T06:29:43.000Z</published>
    <updated>2019-03-30T06:29:43.375Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>c++stackk</title>
    <link href="ctguljj.github.io/2019/03/30/c-stackk/"/>
    <id>ctguljj.github.io/2019/03/30/c-stackk/</id>
    <published>2019-03-30T06:28:36.000Z</published>
    <updated>2019-03-30T06:34:27.696Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><ul><li>出栈，如例：<code>s.pop();</code>注意，出栈操作只是删除栈顶元素，并不返回该元素</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;出栈，如例：&lt;code&gt;s.pop();&lt;/code&gt;注意，出栈操作只是删除栈顶元素，并不返回该元素&lt;/li&gt;

      
    
    </summary>
    
      <category term="stl" scheme="ctguljj.github.io/categories/stl/"/>
    
      <category term="stack" scheme="ctguljj.github.io/categories/stl/stack/"/>
    
    
      <category term="stl" scheme="ctguljj.github.io/tags/stl/"/>
    
  </entry>
  
  <entry>
    <title>matlab绘图</title>
    <link href="ctguljj.github.io/2019/03/28/matlab%E7%BB%98%E5%9B%BE/"/>
    <id>ctguljj.github.io/2019/03/28/matlab绘图/</id>
    <published>2019-03-28T06:00:45.000Z</published>
    <updated>2019-04-03T11:41:54.734Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>在求线性规划题目时，可以将函数图像相交的点求出来，作为横坐标端点即先求后画.其它题目有时可以先求后解，算一个别样的技巧吧</li></ul><h1 id="绘图基础"><a href="#绘图基础" class="headerlink" title="绘图基础"></a>绘图基础</h1><ul><li>可以直接在图形窗口上修改图形</li><li>如果当前不存在图形窗口，MATLAB 的绘图函数会自动 建立一个新的图形窗口；如果已存在一个图形窗口，MATLAB 的绘图函数就会在这个窗口 中进行绘图操作；如果已存在多个图形窗口，MATLAB 的绘图函数就会在当前窗口中进行 绘图操作(当前窗口通常是指后一个使用的图形窗口)。</li><li>matlab绘图是将<strong>图形每一个点标出后连接而成</strong>，因为横坐标间隔值不一定相同，所以2个图形相交y值不一定相等，<strong>找交点</strong><code>s=find(abs(y1-y2)&lt;0.01))</code>其中0.01设置具体看横坐标间隔值大小，否侧可能找不到<ul><li>plot函数维度必须相同，因为图形是将点连接起来，所以x与y个数维度必须相同</li><li>plot函数可以<strong>标点</strong>！<strong>画点</strong>(因为画图是画点再连接起来)</li></ul></li><li>注意：<ul><li>如果已经存在一个图形窗口，plot命令则清除当前图形，绘制新图形</li><li>可任意设定曲线颜色和线型</li><li>可给图形加坐标网线和图形加注功能</li></ul></li></ul><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlab绘图例题1.png" alt=""></p><ul><li>解法一    </li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">clc,clear;</span><br><span class="line">close all;</span><br><span class="line">x1=[<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">4</span>];</span><br><span class="line">y1 = <span class="built_in">sqrt</span>(x1);</span><br><span class="line">x2=[<span class="number">4</span>:<span class="number">0.1</span>:<span class="number">6</span>]</span><br><span class="line">y2 = <span class="number">2</span>*<span class="built_in">ones</span>(<span class="number">1</span>,<span class="number">21</span>);   <span class="comment">%注意这里如果是直接写2，因为plot画图是多个点连接，y2只有一个值，所以要创建与x2横坐标相同维度的y2</span></span><br><span class="line">x3 = [<span class="number">6</span>:<span class="number">0.1</span>:<span class="number">8</span>];</span><br><span class="line">y3 = <span class="number">5</span>-x3/<span class="number">2</span>;</span><br><span class="line">y4 = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">plot</span>(x1,y1);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x2,y2);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x3,y3);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>([<span class="number">8</span>:<span class="number">0.1</span>:<span class="number">10</span>],y4);</span><br></pre></td></tr></table></figure><ul><li>解法二:注意下方分段函数的表达</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">clc; clear all</span><br><span class="line">x=<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">10</span>;</span><br><span class="line">y=<span class="built_in">sqrt</span>(x).*(x&gt;=<span class="number">0</span>&amp;x&lt;<span class="number">4</span>)+<span class="number">2</span>*(x&gt;=<span class="number">4</span>&amp;x&lt;<span class="number">6</span>)+(<span class="number">5</span>-x/<span class="number">2</span>).*(x&gt;=<span class="number">6</span>&amp;x&lt;<span class="number">8</span>)+<span class="number">1</span>*(x&gt;=<span class="number">8</span>); <span class="comment">%注意学习</span></span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'r'</span>,<span class="string">'linewidth'</span>,<span class="number">2</span>)</span><br><span class="line">axis([<span class="number">0</span> <span class="number">10</span> <span class="number">0</span> <span class="number">2.1</span>])</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><h1 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h1><ul><li><p><span id="inline-toc">1.</span>hold on: hold on retains plots in the current axes so that new plots added to the axes do not delete existing plots. New plots use the next colors and line styles based on the ColorOrder and LineStyleOrder properties of the axes. MATLAB® adjusts axes limits, tick marks, and tick labels to display the full range of data.</p><ul><li>hold on保留当前坐标轴中的绘图，这样添加到坐标轴中的新绘图就不会删除现有的绘图。新绘图使用基于坐标轴的ColorOrder和LineStyleOrder属性的下一种颜色和线条样式。MATLAB®调整坐标轴限制、刻度标记和刻度标签，以显示全部数据范围。</li><li>例题:<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">x = <span class="built_in">linspace</span>(-<span class="built_in">pi</span>,<span class="built_in">pi</span>);</span><br><span class="line">y1 = <span class="built_in">sin</span>(x);</span><br><span class="line">y2 = <span class="built_in">cos</span>(x);</span><br><span class="line"><span class="built_in">plot</span>(x,y1)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x,y2)</span><br></pre></td></tr></table></figure></li></ul></li><li><p><span id="inline-toc">2.</span><code>close all;</code>关闭所有图形窗口</p></li></ul><h1 id="图形标注"><a href="#图形标注" class="headerlink" title="图形标注"></a>图形标注</h1><ul><li>有关图形标注函数的调用格式为<ul><li><code>title(‘图形名称’)</code> </li><li><code>xlabel(‘x轴说明’)</code></li><li><code>ylabel(‘y轴说明’)</code></li><li><code>text(x, y, ‘图形说明’)</code> %在坐标位置(x,y)处添加文字“图形说明”    </li><li>legend函数用于对绘制曲线所用线型、颜色或数据点标记作图例说明，放置在空白处，可以通过鼠标移动图例，将其拖放到其它位置。部分函数同样适用于三维图形，在三维图中z坐标轴说明用zlabel函数。<ul><li><code>legend(‘图例1’, ‘图例2’, …)</code></li></ul></li></ul></li></ul><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><ul><li>将标题、坐标轴标记、网格线及文字注<br>释加注到图形上，这些函数为：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">title —— 给图形加标题</span><br><span class="line">xlable —— 给x轴加标注</span><br><span class="line">ylable —— 给y轴加标注</span><br><span class="line">text —— 在图形指定位置加标注</span><br><span class="line">gtext —— 将标注加到图形任意位置</span><br><span class="line">grid on(off) —— 打开、关闭坐标网格线</span><br><span class="line">legend —— 添加图例</span><br><span class="line">axis —— 控制坐标轴的刻度</span><br></pre></td></tr></table></figure><h2 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">clc;clear;</span><br><span class="line">t=<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">10</span>;</span><br><span class="line">y1=<span class="built_in">sin</span>(t);</span><br><span class="line">y2=<span class="built_in">cos</span>(t);</span><br><span class="line"><span class="built_in">plot</span>(t,y1,<span class="string">'r'</span>,t,y2,<span class="string">'b--'</span>);</span><br><span class="line">x=[<span class="number">1.7</span>*<span class="built_in">pi</span>;<span class="number">1.6</span>*<span class="built_in">pi</span>];</span><br><span class="line">y=[<span class="number">-0.3</span>;<span class="number">0.8</span>];</span><br><span class="line">s=[<span class="string">'sin(t)'</span>;<span class="string">'cos(t)'</span>];</span><br><span class="line">text(x,y,s);</span><br><span class="line">title(<span class="string">'正弦和余弦曲线'</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">'正弦'</span>,<span class="string">'余弦'</span>)</span><br><span class="line">xlabel(<span class="string">'时间t'</span>)</span><br><span class="line">ylabel(<span class="string">'正弦、余弦'</span>)</span><br><span class="line">grid</span><br><span class="line">axis square</span><br></pre></td></tr></table></figure><ul><li><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/plot绘图.png" alt=""></li></ul><h1 id="find函数"><a href="#find函数" class="headerlink" title="find函数"></a>find函数</h1><h1 id="plot函数"><a href="#plot函数" class="headerlink" title="plot函数"></a>plot函数</h1><ul><li>若用一个plot函数画多个图时，横坐标维度必须一致</li><li><code>plot(x,y,’s’)</code> —— 开关格式，开关量字符串s设定曲线颜色和绘图方式，如:   <code>plot(x1,y1,’y*’,x2,y2,’rO’，…)</code><ul><li>S的标准设定值如下：</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">字母        颜色          标点           线型</span><br><span class="line">    y            黄色             ·              点线</span><br><span class="line">    m           粉红            ○             圈线</span><br><span class="line">    c            亮蓝            ×             ×线</span><br><span class="line">    r             大红           ＋             ＋字线  </span><br><span class="line">    g            绿色           －              实线</span><br><span class="line">    b            蓝色           *               星形线</span><br><span class="line">    w           白色            ：             虚线</span><br><span class="line">    k            黑色         －·  (--)        点划线</span><br><span class="line"></span><br><span class="line">    v                 下三角</span><br><span class="line">        ^                  上三角</span><br><span class="line">        &lt;                  左三角</span><br><span class="line">      &gt;                  右三角</span><br><span class="line">       square           正方形</span><br><span class="line">       diamond        菱形</span><br><span class="line">       pentagram     五角星</span><br><span class="line">       hexagram      六角星</span><br></pre></td></tr></table></figure><p>例题<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">t=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">100</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">y=<span class="built_in">sin</span>(t);</span><br><span class="line">y1=<span class="built_in">sin</span>(t+<span class="number">0.25</span>);</span><br><span class="line">y2=<span class="built_in">sin</span>(t+<span class="number">0.5</span>);</span><br><span class="line">y3=<span class="built_in">cos</span>(t);</span><br><span class="line">y4=<span class="built_in">cos</span>(t+<span class="number">0.25</span>);</span><br><span class="line">y5=<span class="built_in">cos</span>(t+<span class="number">0.5</span>);</span><br><span class="line"><span class="built_in">plot</span>(t,[y',y1',y2',y3',y4',y5'])</span><br></pre></td></tr></table></figure></p><ul><li><p><code>plot(X,Y,’S’)</code>命令</p><ul><li><span id="inline-blue"> X,Y为同维向量时，绘制以X,Y元素为横、纵坐标的曲线；</span></li><li>X是向量，Y是有一维与X等维的矩阵时，则绘制出多根不同色彩的曲线. 曲线数等于Y矩阵的另一维数，X被作为这些曲线的共同横坐标；</li><li>X是矩阵，Y是向量时，情况与上面的相同，只是曲线都以Y为共同纵坐标；</li><li>X,Y为同维矩阵时，则以X、Y对应列元素为横、纵坐标分别绘制曲线，曲线条数等于矩阵的列数. </li></ul></li><li><p><code>plot(X1,Y1,S1,X2,Y2,S2,X3,Y3,S3,)</code>命令</p><ul><li>在这个格式中，每一个“三元组”(X,Y,’S’)的结构和作用与<code>plot(X,Y,’S’)</code>相同. 不同的三元组之间没有约束关系. </li></ul></li><li><p><code>plot(x,y)</code>——x,y为长度相同的向量，存储x坐标和y坐标<br>用于绘制二维平面上的直角坐标图，以x为横坐标，y为纵坐标的二维曲线。</p></li></ul><h1 id="多窗口绘图"><a href="#多窗口绘图" class="headerlink" title="多窗口绘图"></a>多窗口绘图</h1><ul><li>figure(n) —— 创建窗口函数，n为窗口顺序号。</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">t=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">100</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">y=<span class="built_in">sin</span>(t);y1=<span class="built_in">sin</span>(t+<span class="number">0.25</span>);y2=<span class="built_in">sin</span>(t+<span class="number">0.5</span>);</span><br><span class="line"><span class="built_in">plot</span>(t,y) —— 自动出现第一个窗口</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">plot</span>(t,y1) —— 在第二窗口绘图</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">plot</span>(t,y2) ——在第三窗口绘图</span><br></pre></td></tr></table></figure><h1 id="符号函数-显函数、隐函数和参数方程-画图"><a href="#符号函数-显函数、隐函数和参数方程-画图" class="headerlink" title="符号函数(显函数、隐函数和参数方程)画图"></a>符号函数(显函数、隐函数和参数方程)画图</h1><ul><li><p>ezplot</p><ul><li>ezplot(‘f(x)’,[a,b]) </li><li>表示在a&lt;x&lt;b绘制显函数f=f(x)的函数图。</li><li><code>ezplot(&#39;f(x,y)&#39;,[xmin,xmax,ymin,ymax])</code></li><li>表示在区间xmin&lt;x&lt;xmax和 ymin&lt;y&lt;ymax绘制隐函数f(x,y)=0的函数图。</li><li><code>ezplot(&#39; x(t) &#39;, &#39; y(t) &#39;,[tmin,tmax])</code></li><li>表示在区间tmin&lt;t&lt;tmax 绘制参数方程x=x(t),y=y(t)的函数图。</li></ul></li><li><p>ezplot函数：ezplot函数可以绘制符号函数的简易二维图形，其使用格式如下：</p><ul><li>1）ezplot(f)命令，对于显式函数f=f(x)，在默认的范围[-pi,pi]上绘制该函数f=f(x)的图形；对于隐函数f(x,y)=0，在默认的平面区域<code>[-2*pi&lt;x&lt;2*pi, -2*pi&lt;y&lt;2*pi]</code>上绘制该函数f(x,y)=0的图形。</li><li>2） <code>ezplot(x,y)</code>命令，在默认的范围[0&lt;t&lt;2*pi]内绘制参数形式函数x=x(t)与y=y(t)的图形。</li><li>3）<code>ezplot(f,[a,b])</code>命令，在指定的范围<code>[a&lt;x&lt;b,a&lt;y&lt;b]</code>内绘制表达式为f=f(x)的显式函数图形。</li><li>4）<code>ezplot(f,[xmin,xmax,ymin,ymax])</code>命令，在平面矩形区域<code>[xmin&lt;x&lt;xmax,ymin&lt;y&lt;ymax]</code>上绘制隐函数f(x,y)=0的图形。</li><li>5）<code>ezplot(x,y,[tmin,tmax])</code>命令，在指定的范围[tmin&lt;t&lt;tmax]内绘制参数形式的函数x=x(t)与y=y(t)的图形。 </li></ul></li><li>画隐函数ezplot的调用格式：<ul><li><code>ezplot(f)</code>—这里f为包含单个符号变量x的符号表达式，在x轴的默认范围[-2<em>pi 2</em>pi]内绘制f(x)的函数图</li><li><code>ezplot(f,xmin,xmax)</code> — 给定区间</li><li><code>ezplot(f,[xmin,xmax],figure(n))</code> — 指定绘图窗口绘图。</li></ul></li></ul><h1 id="坐标控制"><a href="#坐标控制" class="headerlink" title="坐标控制"></a>坐标控制</h1><ul><li>axis的用法有：<ul><li><code>axis([xmin  xmax  ymin  ymax])</code> —— 用行向量中给出的值设定坐标轴的最大和最小值。<ul><li>如<code>axis ([-2  2  0  5])</code></li></ul></li><li><code>axis(equal)</code> —— 纵横坐标轴采用等长刻度</li><li><code>axis on(off)</code> —— 显示和关闭坐标轴的标记、标志</li><li><code>axis auto</code> —— 将坐标轴设置返回自动缺省值</li><li><code>axis SQUARE</code>设置当前图形为正方形（或立方体形),axis square刻度范围不一定一样，但是一定是方形的</li><li><code>axis equal</code>将横轴纵轴的定标系数设成相同值,<code>axis equal</code>刻度是等长的，但也不一定是方形的。<ul><li>给坐标加网格线可以用grid命令来控制，<code>grid on/off</code>命令控制是否添加网格线，不带参数的grid命令在两种之间进行切换。</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;在求线性规划题目时，可以将函数图像相交的点求出来，作为横坐标端点即先求后画.其它题目有时可以先求后解，算一个别样的技巧吧&lt;/li
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="绘图" scheme="ctguljj.github.io/categories/matlab/%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab字符串</title>
    <link href="ctguljj.github.io/2019/03/27/matlab%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>ctguljj.github.io/2019/03/27/matlab字符串/</id>
    <published>2019-03-27T14:20:01.000Z</published>
    <updated>2019-03-27T14:27:38.711Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><ul><li>字符串是用单引号括起来的字符集合，可以像向量一样进行拼接和裁剪。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Eg：&gt;&gt;s1=&apos;Hello&apos;;s2=&apos;every&apos;;s3=&apos;body&apos;;</span><br><span class="line">                s=[s1,&apos; &apos;,s2,&apos; &apos;,s3]</span><br><span class="line">                ss=s(1:5)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;字符串是用单引号括起来的字符集合，可以像向量一样进行拼接和裁剪。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;h
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="字符串" scheme="ctguljj.github.io/categories/matlab/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab矩阵以及常用函数</title>
    <link href="ctguljj.github.io/2019/03/27/matlab%E7%9F%A9%E9%98%B5%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <id>ctguljj.github.io/2019/03/27/matlab矩阵以及常用函数/</id>
    <published>2019-03-27T14:13:00.000Z</published>
    <updated>2019-04-04T01:37:20.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h1><ul><li>调用函数文件的一般格式为 <code>[输出参数表]=函数名(输入参数表)</code> </li><li>调用函数时应注意： 当调用一个函数时，输入和输出参数的顺序应与函数定义时的一致，其数目可以 按少于函数文件中所规定的输入和输出参数调用函数，但不能使用多于函数文件所规定的 输入和输出参数数目。如果输入和输出参数数目多于或少于函数文件所允许的数目，则调 用时自动返回错误信息。</li><li>当函数有一个以上输出参数时，输出参数包含在方括号内。例如，<code>[m,n]=size(x)</code>。 注意：[m,n]在左边表示函数的两个输出参数 m 和 n；不要把它和[m,n]在等号右边的情况混 淆，如 y=[m,n]表示数组 y 由变量 m 和 n 所组成。</li></ul><h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><ul><li>下标从1开始</li><li>矩阵里面元素可以是符号与字符（‘a’,’,’）,输入的元素维度要一样<ul><li>矩阵里面的元素也可以是矩阵，但是矩阵长度维度必须与其它元素相同        </li></ul></li><li>生成10*10的矩阵可以如下：<code>a = [1:10;11:20;21:....];</code>就是运用：</li><li>对矩阵a第一行后面2个赋予其他值(灵活运用：)</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">a = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">5</span>];</span><br><span class="line"> </span><br><span class="line">a(<span class="number">1</span>,<span class="number">2</span>:<span class="number">3</span>) = x;</span><br></pre></td></tr></table></figure><ul><li>对一个矩阵A赋值提取可以取出然后赋给一个小矩阵a</li></ul><ul><li>矩阵的下标也可以是向量。<ul><li>例如 <code>b=a(x,y)；</code>可以得到一个矩阵 b。a 的行标来自向量 x，而列标来自向量 y。 例如，矩阵 a 有 n 列，那末 <code>b=a(:,n:-1:1)</code> 将得到矩阵 b，它等于矩阵 a 按列的逆序排列。 </li></ul></li><li><p><code>a(end:-1:end-5, 3)</code>是最后一行到倒数第6行的所有第三个元素</p></li><li><p>删除矩阵某行某列<code>a(i,j)=[];</code></p></li></ul><ul><li>如果要将一个矩阵存储在计算机中，MATLAB 规定矩阵元素在存储器中的存放次序是 按列的先后顺序存放，即存完第 1 列后，再存第 2 列，依次类推<ul><li>作为矩阵的特例，一维数组或者说向量元素是依其元素本身的先后次序进行存储的。 </li><li>必须指出，不是所有高级语言都这样规定矩阵(或数组)元素的存储次序，例如 C 语言 就是按行的先后顺序来存放数组元素，即存完第 1 行后，再存第 2 行，依次类推。记住这 一点对正确使用高级语言的接口技术是十分有益的。 </li></ul></li></ul><ul><li>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">a=[2 5 6 9 8 86 4 5 6 65 3 54];</span><br><span class="line">m=a(1);</span><br><span class="line">for i=1:12</span><br><span class="line">    if a(i)&gt;m</span><br><span class="line">        m=a(i);</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a=[1,2,3,4,5,6,7];</span><br><span class="line">for i=1:7</span><br><span class="line">a(i)=a(i)+1;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">clc,clear</span><br><span class="line">A=[0.5,1.732,0.618,3.1415,1.6,0.9];</span><br><span class="line">for i=1:6</span><br><span class="line">       for j=i:6</span><br><span class="line">             if a(j)&lt;a(i)</span><br><span class="line">                 a(i)=a(i)+a(j);</span><br><span class="line">                 a(j)=a(i)-a(j);</span><br><span class="line">                 a(i)=a(i)-a(j);</span><br><span class="line">              end</span><br><span class="line">        end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">clc,clear</span><br><span class="line">for i=1:15</span><br><span class="line">       for j=1:15</span><br><span class="line">             if i+j==15&amp;&amp;4*i+2*j==40</span><br><span class="line">fprintf(‘兔%d只,鸡%d只\n’,i,j);</span><br><span class="line">             end</span><br><span class="line">        end</span><br><span class="line">end</span><br></pre></td></tr></table></figure></li></ul><h1 id="矩阵除法"><a href="#矩阵除法" class="headerlink" title="矩阵除法"></a>矩阵除法</h1><p><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlab矩阵除法.png" alt=""><br><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlab解方程.jpg" alt=""></p><h1 id="矩阵旋转"><a href="#矩阵旋转" class="headerlink" title="矩阵旋转"></a>矩阵旋转</h1><p><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/matlab矩阵旋转.png" alt=""></p><ul><li>对于函数rot90顺时针旋转90度，可以<code>rot90(a,3);</code>或者<code>rot90(a,-1);</code></li></ul><h1 id="reshape函数"><a href="#reshape函数" class="headerlink" title="reshape函数"></a>reshape函数</h1><p><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/reshape.png" alt="">    </p><h1 id="size函数"><a href="#size函数" class="headerlink" title="size函数"></a>size函数</h1><p><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/size.png" alt=""></p><h1 id="矩阵元素的操作"><a href="#矩阵元素的操作" class="headerlink" title="矩阵元素的操作"></a>矩阵元素的操作</h1><ul><li>取矩阵A的第i1~i2行、第j1~j2列构成新矩阵:<code>A(i1:i2, j1:j2)</code></li><li>以逆序提取矩阵A的第i1~i2行，构成新矩阵:<code>A(i2:-1：i1，:）</code></li><li>以逆序提取矩阵A的第j1~j2列，构成新矩阵:<code>A(:,   j2:-1：j1）</code></li><li>删除A的第i1~i2行，构成新矩阵:<code>A(i1:i2，：)=[ ]</code></li><li>删除A的第j1~j2列，构成新矩阵:<code>A(：， j1:j2)=[ ]</code></li><li>将矩阵A和B拼接成新矩阵：<code>[A  B]；%行连接[A；B]%列连接</code></li></ul><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="diag"><a href="#diag" class="headerlink" title="diag"></a>diag</h2><ul><li><p><span id="inline-toc">1.</span> diag函数：<code>sum(diag(a)+diag(a&#39;))</code>可以求矩阵a对角线上的元素之和，不过中间的一个元素会提取2次，<code>diag(a&#39;)</code>可以提取副对角线的元素(先将矩阵转置）</p><ul><li>当Random是向量时，才构成对角矩阵，当Random是m×n矩阵时，得到的是个向量。比如<code>diag([1 3;2 4])</code>得到向量，<code>diag([1 3])</code>得到2×2矩阵。</li><li>可以用来访问对角元素</li></ul></li><li><p>当 v 是向量时，<code>diag(v)</code>得到以 v 的元素为主对角线上元素的对角矩阵； </p></li><li><p>当 v 是矩阵时，<code>diag(v)</code>得到一个列向量，其元素为矩阵 v 主对角线上的元素， <code>diag(v,1)</code>得到矩阵 v 对角线上移一行的元素组成的列向量，<code>diag(v,-1)</code>得到矩阵 v 对 角线下移一行的元素组成的列向量。</p></li><li><p>详情查看help</p></li></ul><h2 id="max"><a href="#max" class="headerlink" title="max"></a>max</h2><ul><li><p>MAX 函数的几种形式</p><ul><li>(1)max(a)</li><li>(2)max(a,b)</li><li>(3)max(a,[],dim)</li><li>(4)[C,I]=max(a)</li><li>(5)[C,I]=max(a,[],dim)</li></ul></li><li><p>(1)max(a)<br>如果 a 是一个矩阵，比如 <code>a=[1,2,3;4,5,6]</code> ，max(a)的意思就是找出矩阵每列的最大值， 本例中：<code>max(a)=[4,5,6]</code> </p></li><li>(2)max(a,b)<br>如果 a 和 b 都是大于 1 维的矩阵，那么要求 a 和 b 的行列的维数都要相等，函数的结 果是比较 a 和 b 中每个元素的大小，比如：<br><code>a=[1,2,3;4,5,6] b=[4,5,6;7,8,3]</code><br><code>max(a,b)=[4,5,6;7,8,6]</code><br>另外，如果 a 和 b 中至少有一个是常数，也是可以的。比如：<br><code>a=[1,2,3;4,5,6] b=3 c=5</code>max(a,b)=[3,3,3;4,5,6]<code>相信大家看了例子都明白了函数的意思了吧</code>max(b,c)=5 `</li><li>(3)<code>max(a,[],dim)</code><br>这个函数的意思是针对于 2 维矩阵的，dim 是英文字母 dimension 的缩写，意思是维数。<br>当 dim=1 时，比较的 a 矩阵的列，也就是和 max（a）的效果是一样的；当 dim2 时，比较的 是 a 矩阵的行。下面举个例子：<br><code>a=[1,2,3;4,5,6] max(a)=max(a,[],1)=[4,5,6]</code> 比较的第一行和第二行的值<br>max(a,[],2)=[3,6] </li><li>(4)[C,I]=max(a)<br>C表示的是矩阵 a 每列的最大值， I 表示的是每个最大值对应的下标：<br>下面举例说明：<br>还是刚才那个例子：<code>a=[1,2,3;4,5,6] [C,I]=max(a)</code><br>结果显示的是 <code>C=[4,5,6] I=[2,2,2]</code> 返回的是最大值对应的行号。</li><li>(5)<code>[C,I]=max(a,[],dim)</code><br>同理：如果 dim=1 时，其结果和<code>[c,i]=max(a)</code> 是一样的。<br>当 dim=2 时，同样上面的矩阵 a，我们运行一下：<br><code>[c,i]=max(a,[],2)</code> 结果是：<code>c=[3,6] i=[3,3]</code> i 返回的是矩阵 a 的列号。</li></ul><h2 id="matlab中的sort函数"><a href="#matlab中的sort函数" class="headerlink" title="matlab中的sort函数"></a>matlab中的sort函数</h2><ul><li><code>sort(c)</code>从小到大</li><li><code>sort(c, &#39;descend&#39;)</code>逆序排列(从大到小).</li></ul><h2 id="MATLAB判断一个数是否整数"><a href="#MATLAB判断一个数是否整数" class="headerlink" title="MATLAB判断一个数是否整数"></a>MATLAB判断一个数是否整数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">if x==fix(x)</span><br><span class="line">% x为整数</span><br><span class="line">%fix（x)为取整</span><br><span class="line"> end</span><br></pre></td></tr></table></figure><h2 id="mod函数"><a href="#mod函数" class="headerlink" title="mod函数"></a>mod函数</h2><ul><li><code>b = mod(a,m)</code>返回a除以m后的余数，其中a是被除数，m是除数。这个函数通常称为模运算，使用<code>b = a - m.*floor(a /m)</code>计算。mod函数遵循<code>mod(a,0)</code>返回a</li></ul><h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><ul><li>取整<ul><li>fix:向零取整</li><li>ceil:向上取整</li><li>floor:向下取整</li><li>round:四舍五入</li></ul></li><li>取余<ul><li>rem:带符号</li><li>mod:不带符号</li></ul></li><li>num2str,str2num,size,length</li></ul><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><ul><li>格式：函数句柄变量=@（匿名函数输入参数）匿名函数表达式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">EG:</span><br><span class="line">f1=@(x,y)x^2+y^2;</span><br><span class="line">f1(3,4)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    25</span><br></pre></td></tr></table></figure></li></ul><h1 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">一：</span><br><span class="line">function 输出形参表=函数名（输入形参表）</span><br><span class="line">注释（对这个函数的解释说明）</span><br><span class="line">函数体语句</span><br><span class="line">End</span><br><span class="line"></span><br><span class="line">EG:圆的周长和面积</span><br><span class="line">function [s,c]=circle(r)</span><br><span class="line">%求圆的周长和面积</span><br><span class="line">c=2*pi*r;</span><br><span class="line">s=pi*r^2;</span><br><span class="line">End</span><br><span class="line"></span><br><span class="line">[s,c]=circle(3)%保存好函数文件，在命令行窗口或另一个脚本里调用</span><br><span class="line"></span><br><span class="line">二:</span><br><span class="line">function 函数名</span><br><span class="line">注释（对这个函数的解释说明）</span><br><span class="line">函数体语句</span><br><span class="line">end</span><br><span class="line">EG:最强代号</span><br><span class="line">function CTGUMCM</span><br><span class="line">axis off;   %关闭坐标轴</span><br><span class="line">%Menubar是菜单条 none就是不显示图上方的菜单条</span><br><span class="line">set(gcf,&apos;menubar&apos;,&apos;none&apos;,&apos;toolbar&apos;,&apos;none&apos;,&apos;unit&apos;, &apos;normalized&apos;, &apos;position&apos;, [0,0,1,1]);</span><br><span class="line">for k=1:377</span><br><span class="line">    h=text(rand, rand, ...</span><br><span class="line">         [&apos;\fontsize&#123;&apos;,num2str(unifrnd(5,77)),&apos;&#125; CTGU MCM&apos;],...</span><br><span class="line">        &apos;color&apos;,rand(1,3),&apos;Rotation&apos;,360*rand);</span><br><span class="line">    pause(0.2);</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h1 id="squareform与pdist"><a href="#squareform与pdist" class="headerlink" title="squareform与pdist"></a>squareform与pdist</h1><h1 id="find函数"><a href="#find函数" class="headerlink" title="find函数"></a>find函数</h1><ul><li>注意matlab中find函数返回的是位置</li><li>find()函数的基本功能是返回向量或者矩阵中不为0的元素x的<strong>位置索引。(从1开始)</strong><code>a = find(X)</code><ul><li>返回前N个非零元素的位置<code>find(A,X)</code>与<code>ind = find(X, k, &#39;first&#39;)</code></li><li>返回最后x个非零值的位置<code>find(A,x,,&#39;last&#39;)</code></li><li></li></ul></li><li>需要找到其中满足一定条件的元素<code>a = find(x == 4)</code> </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;函数调用&quot;&gt;&lt;a href=&quot;#函数调用&quot; class=&quot;headerlink&quot; title=&quot;函数调用&quot;&gt;&lt;/a&gt;函数调用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;调用函数文件的一般格式为 &lt;code&gt;[输出参数表]=函数名(输入参数表)&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;调
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="矩阵以及常用函数" scheme="ctguljj.github.io/categories/matlab/%E7%9F%A9%E9%98%B5%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>matlab代码练习17</title>
    <link href="ctguljj.github.io/2019/03/27/matlab%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A017/"/>
    <id>ctguljj.github.io/2019/03/27/matlab代码练习17/</id>
    <published>2019-03-27T13:41:22.000Z</published>
    <updated>2019-03-27T13:41:22.508Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>matlab代码练习2018</title>
    <link href="ctguljj.github.io/2019/03/27/matlab%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A02018/"/>
    <id>ctguljj.github.io/2019/03/27/matlab代码练习2018/</id>
    <published>2019-03-27T13:41:01.000Z</published>
    <updated>2019-03-31T15:46:04.273Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A题"><a href="#A题" class="headerlink" title="A题"></a>A题</h1><ul><li><p>编程将输入的一个n位整数按由小到大的顺序输出。如输入78945，则输出45789。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">clc,clear;</span><br><span class="line">a = input(&apos;please input a number：&apos;);</span><br><span class="line">aa = num2str(a);</span><br><span class="line">b = length(aa);</span><br><span class="line">c = zeros(1,b);</span><br><span class="line">result = 0;</span><br><span class="line">for i=1:b</span><br><span class="line">    d = mod(a,10);</span><br><span class="line">    c(i) = d;</span><br><span class="line">    a = (a-mod(a,10))/10;</span><br><span class="line">end</span><br><span class="line">c = sort(c);</span><br><span class="line">for j=1:b</span><br><span class="line">    result = c(j) + result*10;</span><br><span class="line">end</span><br><span class="line">fprintf(&apos;The answer is :%d\n&apos;,result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%法二</span><br><span class="line">clc,clear;</span><br><span class="line">a = input(&apos;please input a number：&apos;);</span><br><span class="line">c=[];result = 0;b=0;</span><br><span class="line">while a&gt;0</span><br><span class="line">        d = mod(a,10);</span><br><span class="line">        c = [c,d];</span><br><span class="line">        a = (a-mod(a,10))/10;</span><br><span class="line">        b=b+1;</span><br><span class="line">end</span><br><span class="line">c = sort(c);</span><br><span class="line">for j=1:b</span><br><span class="line">    result = c(j) + result*10;</span><br><span class="line">end</span><br><span class="line">fprintf(&apos;The answer is :%d\n&apos;,result)</span><br></pre></td></tr></table></figure></li><li><p>在同一坐标系中作出以下式子表示的图形x^2+y^2=1,y=x^2</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">法一</span><br><span class="line">clc,clear;</span><br><span class="line">syms x</span><br><span class="line">f1 = &apos;x^2+y^2-1&apos;;</span><br><span class="line">f2 = &apos;y-x^2&apos;;</span><br><span class="line">ezplot(f1, [-1 1] , [-1 1]);</span><br><span class="line">hold on</span><br><span class="line">ezplot(f2, [-1 1] , [-1 1]);</span><br><span class="line"></span><br><span class="line">%法二</span><br><span class="line">clc,clear;</span><br><span class="line">x=-1:0.01:1;</span><br><span class="line">for i=1:length(x)</span><br><span class="line">    y1(i)=sqrt(1-x(i)^2);</span><br><span class="line">    y2(i)=-sqrt(1-x(i)^2);</span><br><span class="line">    y3(i)=x(i)^2;</span><br><span class="line">end</span><br><span class="line">plot(x,y1,&apos;b&apos;,x,y2,&apos;b&apos;,x,y3,&apos;b&apos;)</span><br><span class="line"></span><br><span class="line">%法三</span><br><span class="line">clc,clear;</span><br><span class="line">x=-1:0.01:1;</span><br><span class="line">y1=sqrt(1-x.^2);</span><br><span class="line">y2=-sqrt(1-x.^2);</span><br><span class="line">y3=x.^2;</span><br><span class="line">plot(x,y1,&apos;b&apos;,x,y2,&apos;b&apos;,x,y3,&apos;b&apos;)  </span><br><span class="line"> </span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># C题</span><br><span class="line">- 第4题</span><br></pre></td></tr></table></figure><pre><code>% 4、三对新人参加婚礼，其中新郎为A、B、C，新娘为X、Y、Z，某人不知道他们谁和谁结婚，于是分别问了其中的三位，得到如下回答：% A:我将和X结婚；% X:我将和C结婚；% C:我将和Z结婚。% 已知他们三人都在说谎，请编程找出谁将和谁结婚。（20分）%X-B C-Y A-Z%设A B C于其结婚对象分别设为1 2 3。clc,clear;A=1;B=2;C=3;for i=1:3    for j=1:3        for z=1:3            if i~=A&amp;&amp;i~=C&amp;&amp;z~=C&amp;&amp;i~=j&amp;&amp;i~=z&amp;&amp;j~=z               X = i;               Y = j;               Z = z;                break            end        end    endendD=[X Y Z];d=[&apos;X&apos; &apos;Y&apos; &apos;Z&apos;];m=find(D==A);n=find(D==B);v=find(D==C);fprintf(&apos;与A结婚的是%s\n&apos;,d(m))fprintf(&apos;与B结婚的是%s\n&apos;,d(n))fprintf(&apos;与C结婚的是%s\n&apos;,d(v))</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 第五题</span><br></pre></td></tr></table></figure><pre><code>% a = [17,8,11,22,3,27,4;%     41,3,19,5,13,11,7;%     8,14,21,18,14,16,23;%     31,22,4,25,9,15,17;%     13,24,21,6,17,22,31;%     11,2,34,15,22,4,13;%     16,3,7,19,13,27,21;];% （1）求这个矩阵四周元素的均值，并将它们删除。（10分）% （2）重复（1）的操作直到只剩下一个元素。（20分）%第二问%%%先保存函数再调用主函数function b=myfunction(a)     [m,n]=size(a);     b=a(2:m-1,2:n-1);end%%%主函数clc,clear;a = [17,8,11,22,3,27,4;    41,3,19,5,13,11,7;    8,14,21,18,14,16,23;    31,22,4,25,9,15,17;    13,24,21,6,17,22,31;    11,2,34,15,22,4,13;    16,3,7,19,13,27,21;];c=length(a);while c~=1    a=myfunction(a);    c=length(a);endfprintf(&apos;the answer is %d\n&apos;,a)%法二clc,clear;a = [17,8,11,22,3,27,4;    41,3,19,5,13,11,7;    8,14,21,18,14,16,23;    31,22,4,25,9,15,17;    13,24,21,6,17,22,31;    11,2,34,15,22,4,13;    16,3,7,19,13,27,21;];c=length(a);while c~=1     [m,n]=size(a);     a=a(2:m-1,2:n-1);     c=length(a);endfprintf(&apos;the answer is %d\n&apos;,a)</code></pre><p><code>`</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;A题&quot;&gt;&lt;a href=&quot;#A题&quot; class=&quot;headerlink&quot; title=&quot;A题&quot;&gt;&lt;/a&gt;A题&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编程将输入的一个n位整数按由小到大的顺序输出。如输入78945，则输出45789。&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
      <category term="matlab" scheme="ctguljj.github.io/categories/matlab/"/>
    
      <category term="代码练习" scheme="ctguljj.github.io/categories/matlab/%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="matlab" scheme="ctguljj.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>栈代码练习</title>
    <link href="ctguljj.github.io/2019/03/25/%E6%A0%88%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/"/>
    <id>ctguljj.github.io/2019/03/25/栈代码练习/</id>
    <published>2019-03-25T14:25:01.000Z</published>
    <updated>2019-03-25T14:25:01.161Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>链表c练习</title>
    <link href="ctguljj.github.io/2019/03/25/%E9%93%BE%E8%A1%A8c%E7%BB%83%E4%B9%A0/"/>
    <id>ctguljj.github.io/2019/03/25/链表c练习/</id>
    <published>2019-03-25T14:24:43.000Z</published>
    <updated>2019-03-25T14:24:43.234Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo特殊字符</title>
    <link href="ctguljj.github.io/2019/03/22/hexo%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/"/>
    <id>ctguljj.github.io/2019/03/22/hexo特殊字符/</id>
    <published>2019-03-22T13:20:37.000Z</published>
    <updated>2019-03-22T13:28:19.827Z</updated>
    
    <content type="html"><![CDATA[<ul><li>因为特殊字符，报了一下错误<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class="line">Template render error: (unknown path) [Line 5, Column 29]</span><br></pre></td></tr></table></figure></li></ul><p>从宇宙大爆发开始找错误，不过还好没浪费多少时间.记忆深刻，写个blog冷静一下</p><h1 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h1><ul><li>hexo特殊字符尽量减少使用，可能在转义时发生错误！如： 2个大括号连在一起！！！！！！！！！！！！！或者中括号！！</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;因为特殊字符，报了一下错误&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2
      
    
    </summary>
    
      <category term="blog" scheme="ctguljj.github.io/categories/blog/"/>
    
      <category term="特殊字符" scheme="ctguljj.github.io/categories/blog/%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/"/>
    
    
      <category term="blog" scheme="ctguljj.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>数组</title>
    <link href="ctguljj.github.io/2019/03/22/%E6%95%B0%E7%BB%84/"/>
    <id>ctguljj.github.io/2019/03/22/数组/</id>
    <published>2019-03-22T12:10:44.000Z</published>
    <updated>2019-03-22T13:36:36.621Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h1><ul><li>二维数组的初始化分为两种，一种是顺序初始化，一种是按行初始化<ul><li>所谓按顺序初始化就是先从左向右再由上而下地初始化，即第一行所有元素都初始化好以后再对第二行初始化。而按行初始化则是用一对大括号来表示每一行，跳过前一行没有初始化的元素，在行内从左向右地进行初始化。</li><li><code>int array1[3][2]={4,2,5,6}; 顺序初始化</code></li><li><code>int array2[3][2]={ {4,2},{5},{6} }; 按行初始化</code></li><li>对于没有初始化的元素，则都是一个不确定的值。</li></ul></li><li>内存是依靠地址来确定内存中的唯一一个存储单元的，即只有一个参数。所以在内存中，所有的数据都是像一维数组那样顺序存储的。<ul><li>在内存中，先将二维数组的第一行按顺序存储，接着就是第二行的数据，然后是第三行的数据……右图（图7.4）所示的就是一个二维数组在内存中的存储情况。 <img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/数组.jpg" alt=""></li></ul></li><li>在某些情况下，不能使用二维数组，或者难以制造一个二维数组。二维数组在内存中的存储情况和一维数组是相同的，所以我们只好用一个一维数组来代替它了。一个二维数组元素<code>a[x][y]</code>在一维数组b中，是：<br> <code>a[x][y]=b[x*列数+y]</code><br><img src="https://raw.githubusercontent.com/ctguljj/ctguljj.github.io/master/images/数组2.jpg" alt=""></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;二维数组&quot;&gt;&lt;a href=&quot;#二维数组&quot; class=&quot;headerlink&quot; title=&quot;二维数组&quot;&gt;&lt;/a&gt;二维数组&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;二维数组的初始化分为两种，一种是顺序初始化，一种是按行初始化&lt;ul&gt;
&lt;li&gt;所谓按顺序初始化就是先从左向右再由
      
    
    </summary>
    
      <category term="c++" scheme="ctguljj.github.io/categories/c/"/>
    
      <category term="基础知识" scheme="ctguljj.github.io/categories/c/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="数组" scheme="ctguljj.github.io/categories/c/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E7%BB%84/"/>
    
    
      <category term="c++" scheme="ctguljj.github.io/tags/c/"/>
    
  </entry>
  
</feed>
